/**
 * üì± iOS –§–ò–ö–°–´ –î–õ–Ø TELEGRAM MINI APP
 * –†–∞–∑–º–µ—Ä: ~1 KB - –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∏–∫—Å—ã –¥–ª—è iOS Safari WebView
 * 
 * –†–µ—à–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã iOS –≤ Telegram Mini Apps:
 * - –§–∏–∫—Å viewport height –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
 * - –û–±—Ä–∞–±–æ—Ç–∫–∞ safe-area –¥–ª—è iPhone —Å –≤—ã–µ–º–∫–æ–π
 * - –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ bounce —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
 * - –§–∏–∫—Å –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ CSS –∏ Telegram WebApp API –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä—ã—Ö —Ö–∞–∫–æ–≤
 */

// üçé –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï iOS –£–°–¢–†–û–ô–°–¢–í–ê
const isIOS = () => {
    return /iPad|iPhone|iPod/.test(navigator.userAgent) || 
           (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);
};

// üì± –ö–õ–ê–°–° iOS –§–ò–ö–°–û–í
class IOSFixes {
    constructor() {
        this.isIOSDevice = isIOS();
        this.keyboardVisible = false;
        this.originalViewportHeight = window.innerHeight;
        
        if (this.isIOSDevice) {
            this.init();
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è iOS —Ñ–∏–∫—Å–æ–≤
     */
    init() {
        this.setupViewportFix();
        this.setupSafeAreaSupport();
        this.setupScrollFixes();
        this.setupKeyboardHandling();
        this.setupTelegramSpecificFixes();
        
        console.log('üçé iOS —Ñ–∏–∫—Å—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã');
    }

    /**
     * –§–∏–∫—Å viewport height –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π dvh (dynamic viewport height)
     */
    setupViewportFix() {
        // –î–æ–±–∞–≤–ª—è–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –≤—ã—Å–æ—Ç—ã viewport
        const updateViewportHeight = () => {
            const vh = window.innerHeight * 0.01;
            document.documentElement.style.setProperty('--vh', `${vh}px`);
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            const heightDiff = this.originalViewportHeight - window.innerHeight;
            this.keyboardVisible = heightDiff > 150; // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –æ–±—ã—á–Ω–æ >150px
            
            document.documentElement.classList.toggle('keyboard-visible', this.keyboardVisible);
        };

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        window.addEventListener('resize', updateViewportHeight);
        window.addEventListener('orientationchange', () => {
            setTimeout(updateViewportHeight, 100);
        });
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        updateViewportHeight();
    }

    /**
     * –ü–æ–¥–¥–µ—Ä–∂–∫–∞ safe-area –¥–ª—è iPhone —Å –≤—ã–µ–º–∫–æ–π
     */
    setupSafeAreaSupport() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É safe-area
        const supportsSafeArea = CSS.supports('top: env(safe-area-inset-top)');
        
        if (supportsSafeArea) {
            document.documentElement.classList.add('supports-safe-area');
            
            // –î–æ–±–∞–≤–ª—è–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è safe-area
            const style = document.createElement('style');
            style.textContent = `
                :root {
                    --safe-area-top: env(safe-area-inset-top, 0px);
                    --safe-area-bottom: env(safe-area-inset-bottom, 0px);
                    --safe-area-left: env(safe-area-inset-left, 0px);
                    --safe-area-right: env(safe-area-inset-right, 0px);
                }
            `;
            document.head.appendChild(style);
        }
    }

    /**
     * –§–∏–∫—Å—ã —Å–∫—Ä–æ–ª–ª–∞ –¥–ª—è iOS
     */
    setupScrollFixes() {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ bounce —ç—Ñ—Ñ–µ–∫—Ç–∞ –Ω–∞ body
        document.body.addEventListener('touchmove', (e) => {
            // –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∫—Ä–æ–ª–ª —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Å–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
            const scrollableParent = e.target.closest('.scrollable, .modal-content, .content');
            if (!scrollableParent) {
                e.preventDefault();
            }
        }, { passive: false });

        // –§–∏–∫—Å —Å–∫—Ä–æ–ª–ª–∞ –≤ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö
        document.addEventListener('touchstart', (e) => {
            const modal = e.target.closest('.modal-overlay');
            if (modal) {
                const modalContent = modal.querySelector('.modal-content');
                if (modalContent) {
                    // –í–∫–ª—é—á–∞–µ–º momentum scrolling –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
                    modalContent.style.webkitOverflowScrolling = 'touch';
                    modalContent.style.overflowY = 'auto';
                }
            }
        });
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
     */
    setupKeyboardHandling() {
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è viewport –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        let resizeTimeout;
        
        window.addEventListener('resize', () => {
            clearTimeout(resizeTimeout);
            resizeTimeout = setTimeout(() => {
                this.handleKeyboardToggle();
            }, 100);
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–∫—É—Å–∞ –Ω–∞ –∏–Ω–ø—É—Ç–∞—Ö
        document.addEventListener('focusin', (e) => {
            if (e.target.matches('input, textarea')) {
                this.handleInputFocus(e.target);
            }
        });

        document.addEventListener('focusout', (e) => {
            if (e.target.matches('input, textarea')) {
                this.handleInputBlur(e.target);
            }
        });
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
     */
    handleKeyboardToggle() {
        const bottomNav = document.querySelector('.bottom-nav');
        const header = document.querySelector('.header, .home-header, .page-header');
        
        if (this.keyboardVisible) {
            // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—è–≤–∏–ª–∞—Å—å - —Å–∫—Ä—ã–≤–∞–µ–º –Ω–∏–∂–Ω—é—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            if (bottomNav) {
                bottomNav.style.transform = 'translateY(100%)';
            }
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—ã—Å–æ—Ç—ã
            if (window.Telegram?.WebApp?.expand) {
                window.Telegram.WebApp.expand();
            }
        } else {
            // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã–ª–∞—Å—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            if (bottomNav) {
                bottomNav.style.transform = 'translateY(0)';
            }
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–∫—É—Å–∞ –Ω–∞ –∏–Ω–ø—É—Ç–µ
     * @param {HTMLElement} input - –≠–ª–µ–º–µ–Ω—Ç –∏–Ω–ø—É—Ç–∞
     */
    handleInputFocus(input) {
        // –°–∫—Ä–æ–ª–ª–∏–º –∫ –∏–Ω–ø—É—Ç—É —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
        setTimeout(() => {
            const rect = input.getBoundingClientRect();
            const viewportHeight = window.innerHeight;
            
            // –ï—Å–ª–∏ –∏–Ω–ø—É—Ç —Å–∫—Ä—ã—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π, —Å–∫—Ä–æ–ª–ª–∏–º –∫ –Ω–µ–º—É
            if (rect.bottom > viewportHeight * 0.5) {
                input.scrollIntoView({ 
                    behavior: 'smooth', 
                    block: 'center' 
                });
            }
        }, 300);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
        input.classList.add('input-focused');
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ –∏–Ω–ø—É—Ç–∞
     * @param {HTMLElement} input - –≠–ª–µ–º–µ–Ω—Ç –∏–Ω–ø—É—Ç–∞
     */
    handleInputBlur(input) {
        input.classList.remove('input-focused');
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º scroll –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        setTimeout(() => {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }, 100);
    }

    /**
     * –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ñ–∏–∫—Å—ã –¥–ª—è Telegram WebApp
     */
    setupTelegramSpecificFixes() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram
        if (!window.Telegram?.WebApp) return;

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram WebApp –¥–ª—è iOS
        const tg = window.Telegram.WebApp;
        
        // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω
        if (tg.expand) {
            tg.expand();
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å-–±–∞—Ä–∞ –¥–ª—è iOS
        if (tg.setHeaderColor) {
            tg.setHeaderColor('#D2452C'); // –û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –¥–ª—è iOS
        if (tg.setBackgroundColor) {
            tg.setBackgroundColor('#F5F2EC'); // –§–æ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        }
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –≤ Telegram
        tg.onEvent('themeChanged', () => {
            this.updateThemeColors();
        });
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –¥–ª—è iOS
        if (tg.BackButton) {
            tg.BackButton.onClick(() => {
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏–ª–∏ –º–µ–Ω—é
                if (window.menuHandler) {
                    if (window.menuHandler.activeModals.size > 0) {
                        window.menuHandler.closeAllModals();
                    } else if (window.menuHandler.isMenuOpen) {
                        window.menuHandler.toggleMenu(false);
                    }
                }
            });
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ —Ç–µ–º—ã
     */
    updateThemeColors() {
        const tg = window.Telegram.WebApp;
        const isDark = tg.colorScheme === 'dark';
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        document.body.classList.toggle('dark-theme', isDark);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç–∞ –≤ Telegram
        if (tg.setHeaderColor) {
            tg.setHeaderColor(isDark ? '#E85A42' : '#D2452C');
        }
        
        if (tg.setBackgroundColor) {
            tg.setBackgroundColor(isDark ? '#1A1A1A' : '#F5F2EC');
        }
    }

    /**
     * –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö CSS —Å—Ç–∏–ª–µ–π
     */
    addIOSStyles() {
        const style = document.createElement('style');
        style.id = 'ios-fixes-styles';
        style.textContent = `
            /* iOS —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏ */
            .ios-device {
                /* –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ CSS —Å–≤–æ–π—Å—Ç–≤–∞ */
                height: 100dvh; /* Dynamic viewport height */
                overflow-x: hidden;
            }
            
            /* –§–∏–∫—Å –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω */
            .modal-overlay {
                height: 100dvh;
                height: calc(var(--vh, 1vh) * 100);
            }
            
            /* –§–∏–∫—Å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã */
            .keyboard-visible .bottom-nav {
                transition: transform 0.3s ease;
            }
            
            /* Safe area –ø–æ–¥–¥–µ—Ä–∂–∫–∞ */
            .supports-safe-area .header,
            .supports-safe-area .home-header,
            .supports-safe-area .page-header {
                padding-top: calc(16px + var(--safe-area-top));
            }
            
            .supports-safe-area .bottom-nav {
                padding-bottom: calc(8px + var(--safe-area-bottom));
            }
            
            /* –§–∏–∫—Å –¥–ª—è –∏–Ω–ø—É—Ç–æ–≤ */
            .input-focused {
                position: relative;
                z-index: 1000;
            }
            
            /* Momentum scrolling –¥–ª—è –≤—Å–µ—Ö —Å–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π */
            .scrollable,
            .modal-content,
            .content {
                -webkit-overflow-scrolling: touch;
                overflow-y: auto;
            }
        `;
        
        document.head.appendChild(style);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        if (this.isIOSDevice) {
            document.documentElement.classList.add('ios-device');
        }
    }
}

// üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø iOS –§–ò–ö–°–û–í
let iosFixes = null;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è iOS —Ñ–∏–∫—Å–æ–≤
 */
export function initIOSFixes() {
    if (isIOS() && !iosFixes) {
        iosFixes = new IOSFixes();
        iosFixes.addIOSStyles();
        
        // –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        window.iosFixes = iosFixes;
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ iOS —Ñ–∏–∫—Å–æ–≤
 * @returns {boolean} - –ê–∫—Ç–∏–≤–Ω—ã –ª–∏ iOS —Ñ–∏–∫—Å—ã
 */
export function isIOSFixesActive() {
    return iosFixes !== null;
}

// üåê –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initIOSFixes);
} else {
    initIOSFixes();
}

// üåê –≠–ö–°–ü–û–†–¢
export default {
    IOSFixes,
    initIOSFixes,
    isIOSFixesActive,
    isIOS
};