/**
 * üìä –û–¢–ß–ï–¢–´ - ReportsPage.js
 * 
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 * - –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
 * - –ú–µ—Å—è—á–Ω—ã–µ —É–≥–ª—É–±–ª–µ–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã  
 * - AI –∞–Ω–∞–ª–∏–∑ –æ—Ç –ê–Ω–Ω—ã –ë—É—Å–µ–ª
 * - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥
 * - –ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
 * - –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –æ—Ç—á–µ—Ç–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
 * - –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤ –∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
 * 
 * @version 1.0.1 - –ò–°–ü–†–ê–í–õ–ï–ù–ê –û–®–ò–ë–ö–ê TELEGRAM SHARE
 */

class ReportsPage {
    constructor(app) {
        this.app = app;
        this.api = app.api;
        this.state = app.state;
        this.telegram = app.telegram;
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.activeTab = 'current'; // current, history, insights
        this.currentPeriod = 'weekly'; // weekly, monthly
        this.selectedReportId = null;
        
        // –î–∞–Ω–Ω—ã–µ
        this.currentReport = null;
        this.reportHistory = [];
        this.loading = false;
        
        // –ü–æ–¥–ø–∏—Å–∫–∏
        this.subscriptions = [];
        
        this.init();
    }
    
    /**
     * üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    init() {
        this.setupSubscriptions();
        this.loadInitialData();
    }
    
    /**
     * üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫
     */
    setupSubscriptions() {
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤
        const reportsSubscription = this.state.subscribe('reports', (reports) => {
            this.updateReportsUI(reports);
        });
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        const statsSubscription = this.state.subscribe('stats', (stats) => {
            this.updateStatsUI(stats);
        });
        
        this.subscriptions.push(reportsSubscription, statsSubscription);
    }
    
    /**
     * üìä –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    async loadInitialData() {
        try {
            this.loading = true;
            this.state.set('reports.loading', true);
            
            // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            const [currentReport, reportHistory] = await Promise.all([
                this.loadCurrentReport(),
                this.loadReportHistory()
            ]);
            
            this.currentReport = currentReport;
            this.reportHistory = reportHistory;
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            this.state.update('reports', {
                current: currentReport,
                weekly: reportHistory.filter(r => r.type === 'weekly'),
                monthly: reportHistory.filter(r => r.type === 'monthly'),
                loading: false
            });
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–æ–≤:', error);
            this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç—ã');
        } finally {
            this.loading = false;
        }
    }
    
    /**
     * üìà –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç—á–µ—Ç–∞
     */
    async loadCurrentReport() {
        try {
            const reportType = this.currentPeriod;
            const report = await this.api.getReport(reportType, 'current');
            return report;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç—á–µ—Ç–∞:', error);
            return null;
        }
    }
    
    /**
     * üìö –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç—á–µ—Ç–æ–≤
     */
    async loadReportHistory() {
        try {
            const [weeklyReports, monthlyReports] = await Promise.all([
                this.api.getReports('weekly', { limit: 10 }),
                this.api.getReports('monthly', { limit: 6 })
            ]);
            
            return [...weeklyReports, ...monthlyReports].sort((a, b) => 
                new Date(b.createdAt) - new Date(a.createdAt)
            );
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç—á–µ—Ç–æ–≤:', error);
            return [];
        }
    }
    
    /**
     * üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —Ä–∞–∑–º–µ—Ç–∫–∏
     */
    render() {
        return `
            <div class="reports-page">
                <div class="page-header">üìä –û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏–∑</div>
                <div class="content">
                    ${this.renderPeriodSelector()}
                    ${this.renderTabs()}
                    ${this.renderTabContent()}
                </div>
            </div>
        `;
    }
    
    /**
     * üîÑ –†–µ–Ω–¥–µ—Ä —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
     */
    renderPeriodSelector() {
        return `
            <div class="period-selector">
                <button class="period-btn ${this.currentPeriod === 'weekly' ? 'active' : ''}" 
                        data-period="weekly">
                    üìÖ –ù–µ–¥–µ–ª—è
                </button>
                <button class="period-btn ${this.currentPeriod === 'monthly' ? 'active' : ''}" 
                        data-period="monthly">
                    üóìÔ∏è –ú–µ—Å—è—Ü
                </button>
            </div>
        `;
    }
    
    /**
     * üìë –†–µ–Ω–¥–µ—Ä —Ç–∞–±–æ–≤
     */
    renderTabs() {
        return `
            <div class="tabs">
                <button class="tab ${this.activeTab === 'current' ? 'active' : ''}" 
                        data-tab="current">üìä –¢–µ–∫—É—â–∏–π</button>
                <button class="tab ${this.activeTab === 'history' ? 'active' : ''}" 
                        data-tab="history">üìö –ò—Å—Ç–æ—Ä–∏—è</button>
                <button class="tab ${this.activeTab === 'insights' ? 'active' : ''}" 
                        data-tab="insights">üí° –ò–Ω—Å–∞–π—Ç—ã</button>
            </div>
        `;
    }
    
    /**
     * üìÑ –†–µ–Ω–¥–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–±–∞
     */
    renderTabContent() {
        if (this.loading) {
            return this.renderLoadingState();
        }
        
        switch (this.activeTab) {
            case 'current':
                return this.renderCurrentReportTab();
            case 'history':
                return this.renderHistoryTab();
            case 'insights':
                return this.renderInsightsTab();
            default:
                return this.renderCurrentReportTab();
        }
    }
    
    /**
     * ‚è≥ –†–µ–Ω–¥–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
     */
    renderLoadingState() {
        return `
            <div class="loading-state">
                <div class="loading-spinner">‚è≥</div>
                <div class="loading-text">–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à–∏ –æ—Ç—á–µ—Ç—ã...</div>
            </div>
        `;
    }
    
    /**
     * üìä –†–µ–Ω–¥–µ—Ä —Ç–∞–±–∞ —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç—á–µ—Ç–∞
     */
    renderCurrentReportTab() {
        if (!this.currentReport) {
            return this.renderEmptyReport();
        }
        
        return `
            <div class="tab-content current-report-tab">
                ${this.renderReportHeader(this.currentReport)}
                ${this.renderStatistics(this.currentReport.statistics)}
                ${this.renderAIAnalysis(this.currentReport.aiAnalysis)}
                ${this.renderRecommendations(this.currentReport.recommendations)}
                ${this.renderPromoSection(this.currentReport.promoCode)}
            </div>
        `;
    }
    
    /**
     * üìã –†–µ–Ω–¥–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ—Ç—á–µ—Ç–∞
     */
    renderReportHeader(report) {
        const periodText = this.currentPeriod === 'weekly' ? '–∑–∞ –Ω–µ–¥–µ–ª—é' : '–∑–∞ –º–µ—Å—è—Ü';
        const dateRange = this.formatDateRange(report.dateRange);
        
        return `
            <div class="report-header">
                <div class="report-title">
                    <h2>üìà –í–∞—à –æ—Ç—á–µ—Ç ${periodText}</h2>
                    <p class="report-period">${dateRange}</p>
                </div>
                <div class="report-actions">
                    <button class="action-btn share-btn" id="shareReportBtn">
                        üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                    </button>
                    <button class="action-btn export-btn" id="exportReportBtn">
                        üíæ –≠–∫—Å–ø–æ—Ä—Ç
                    </button>
                </div>
            </div>
        `;
    }
    
    /**
     * üìä –†–µ–Ω–¥–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    renderStatistics(stats) {
        if (!stats) return '';
        
        const goalProgress = this.calculateGoalProgress(stats);
        
        return `
            <div class="statistics-section">
                <div class="stats-grid">
                    <div class="stat-card primary">
                        <div class="stat-number">${stats.quotesCount || 0}</div>
                        <div class="stat-label">–¶–∏—Ç–∞—Ç</div>
                        <div class="stat-change ${this.getChangeClass(stats.quotesChange)}">
                            ${this.formatChange(stats.quotesChange)}
                        </div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-number">${stats.uniqueAuthors || 0}</div>
                        <div class="stat-label">–ê–≤—Ç–æ—Ä–æ–≤</div>
                        <div class="stat-change ${this.getChangeClass(stats.authorsChange)}">
                            ${this.formatChange(stats.authorsChange)}
                        </div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-number">${stats.activeDays || 0}</div>
                        <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π</div>
                        <div class="stat-progress">
                            ${this.renderProgressBar(stats.activeDays, 7)}
                        </div>
                    </div>
                    
                    <div class="stat-card goal">
                        <div class="stat-number">${goalProgress}%</div>
                        <div class="stat-label">–¶–µ–ª—å</div>
                        <div class="goal-status ${goalProgress >= 100 ? 'completed' : ''}">
                            ${goalProgress >= 100 ? 'üéâ –í—ã–ø–æ–ª–Ω–µ–Ω–æ!' : 'üìà –í –ø—Ä–æ—Ü–µ—Å—Å–µ'}
                        </div>
                    </div>
                </div>
                
                ${this.renderTopCategories(stats.topCategories)}
                ${this.renderReadingPatterns(stats.readingPatterns)}
            </div>
        `;
    }
    
    /**
     * üìö –†–µ–Ω–¥–µ—Ä —Ç–æ–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–π
     */
    renderTopCategories(categories) {
        if (!categories || categories.length === 0) return '';
        
        return `
            <div class="top-categories">
                <h3 class="section-title">üè∑Ô∏è –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã</h3>
                <div class="categories-list">
                    ${categories.slice(0, 5).map((category, index) => `
                        <div class="category-item">
                            <div class="category-rank">${index + 1}</div>
                            <div class="category-name">${category.name}</div>
                            <div class="category-count">${category.count} —Ü–∏—Ç–∞—Ç</div>
                        </div>
                    `).join('')}
                </div>
            </div>
        `;
    }
    
    /**
     * üìñ –†–µ–Ω–¥–µ—Ä –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —á—Ç–µ–Ω–∏—è
     */
    renderReadingPatterns(patterns) {
        if (!patterns) return '';
        
        return `
            <div class="reading-patterns">
                <h3 class="section-title">‚è∞ –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h3>
                <div class="patterns-info">
                    <div class="pattern-item">
                        <span class="pattern-label">–õ—é–±–∏–º–æ–µ –≤—Ä–µ–º—è:</span>
                        <span class="pattern-value">${patterns.favoriteTime || '–í–µ—á–µ—Ä'}</span>
                    </div>
                    <div class="pattern-item">
                        <span class="pattern-label">–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Ü–∏—Ç–∞—Ç—ã:</span>
                        <span class="pattern-value">${patterns.averageLength || 0} —Å–∏–º–≤–æ–ª–æ–≤</span>
                    </div>
                    <div class="pattern-item">
                        <span class="pattern-label">–°–∞–º—ã–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å:</span>
                        <span class="pattern-value">${patterns.mostActiveDay || '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'}</span>
                    </div>
                </div>
            </div>
        `;
    }
    
    /**
     * ü§ñ –†–µ–Ω–¥–µ—Ä AI –∞–Ω–∞–ª–∏–∑–∞
     */
    renderAIAnalysis(analysis) {
        if (!analysis) return '';
        
        return `
            <div class="ai-analysis">
                <div class="ai-header">
                    <div class="ai-title">
                        <span class="ai-icon">‚ú®</span>
                        <span>–ê–Ω–∞–ª–∏–∑ –æ—Ç –ê–Ω–Ω—ã</span>
                    </div>
                    <div class="ai-avatar">üë©‚Äçüéì</div>
                </div>
                
                <div class="ai-content">
                    <div class="ai-summary">
                        <h4>üí° –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã</h4>
                        <p>${analysis.summary || '–ê–Ω–∞–ª–∏–∑ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω'}</p>
                    </div>
                    
                    ${analysis.insights ? `
                        <div class="ai-insights">
                            <h4>üîç –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑</h4>
                            <ul class="insights-list">
                                ${analysis.insights.map(insight => 
                                    `<li class="insight-item">${insight}</li>`
                                ).join('')}
                            </ul>
                        </div>
                    ` : ''}
                    
                    ${analysis.mood ? `
                        <div class="mood-analysis">
                            <h4>üé≠ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ–Ω</h4>
                            <div class="mood-indicator ${analysis.mood.type}">
                                <span class="mood-emoji">${analysis.mood.emoji}</span>
                                <span class="mood-text">${analysis.mood.description}</span>
                            </div>
                        </div>
                    ` : ''}
                </div>
            </div>
        `;
    }
    
    /**
     * üìö –†–µ–Ω–¥–µ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
     */
    renderRecommendations(recommendations) {
        if (!recommendations || recommendations.length === 0) return '';
        
        return `
            <div class="recommendations-section">
                <div class="recommendations-header">
                    <h3 class="section-title">üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –ê–Ω–Ω—ã</h3>
                    <p class="section-subtitle">–ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Ü–∏—Ç–∞—Ç</p>
                </div>
                
                <div class="recommendations-list">
                    ${recommendations.slice(0, 3).map(book => this.renderBookRecommendation(book)).join('')}
                </div>
                
                <button class="view-all-btn" id="viewAllRecommendationsBtn">
                    üìö –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                </button>
            </div>
        `;
    }
    
    /**
     * üìñ –†–µ–Ω–¥–µ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥–∏
     */
    renderBookRecommendation(book) {
        return `
            <div class="book-recommendation" data-book-id="${book._id || book.id}">
                <div class="book-cover">
                    ${book.coverImage ? 
                        `<img src="${book.coverImage}" alt="${book.title}" loading="lazy">` :
                        `<div class="book-placeholder">üìö</div>`
                    }
                </div>
                
                <div class="book-info">
                    <h4 class="book-title">${book.title}</h4>
                    <p class="book-author">${book.author}</p>
                    <p class="book-reason">${book.recommendationReason || '–ü–æ–¥—Ö–æ–¥–∏—Ç –≤–∞—à–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º'}</p>
                    
                    <div class="book-meta">
                        <span class="book-rating">‚≠ê ${book.rating || '4.5'}</span>
                        <span class="book-price">${book.price || '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ'}</span>
                    </div>
                </div>
                
                <div class="book-actions">
                    <button class="book-action-btn primary" data-action="view">
                        üëÅÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                    <button class="book-action-btn secondary" data-action="buy">
                        üí≥ –ö—É–ø–∏—Ç—å
                    </button>
                </div>
            </div>
        `;
    }
    
    /**
     * üéÅ –†–µ–Ω–¥–µ—Ä –ø—Ä–æ–º–æ —Å–µ–∫—Ü–∏–∏
     */
    renderPromoSection(promoCode) {
        if (!promoCode) return '';
        
        return `
            <div class="promo-section">
                <div class="promo-header">
                    <div class="promo-icon">üéÅ</div>
                    <div class="promo-title">–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å</div>
                </div>
                
                <div class="promo-content">
                    <div class="promo-description">${promoCode.description || '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ –Ω–∞ —Ä–∞–∑–±–æ—Ä—ã'}</div>
                    
                    <div class="promo-code-block">
                        <div class="promo-label">–ü—Ä–æ–º–æ–∫–æ–¥:</div>
                        <div class="promo-code" id="promoCodeText">${promoCode.code}</div>
                        <button class="copy-code-btn" id="copyCodeBtn">üìã</button>
                    </div>
                    
                    <div class="promo-details">
                        <div class="promo-discount">${promoCode.discount || '20'}% —Å–∫–∏–¥–∫–∞</div>
                        <div class="promo-expires">–î–æ ${this.formatDate(promoCode.expiresAt)}</div>
                    </div>
                    
                    <button class="promo-cta-btn" id="usePromoBtn">
                        üõí –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥
                    </button>
                </div>
            </div>
        `;
    }
    
    /**
     * üìö –†–µ–Ω–¥–µ—Ä —Ç–∞–±–∞ –∏—Å—Ç–æ—Ä–∏–∏
     */
    renderHistoryTab() {
        const reports = this.reportHistory.filter(r => 
            this.currentPeriod === 'all' || r.type === this.currentPeriod
        );
        
        if (reports.length === 0) {
            return this.renderEmptyHistory();
        }
        
        return `
            <div class="tab-content history-tab">
                <div class="history-filters">
                    <select class="period-filter" id="historyPeriodFilter">
                        <option value="all">–í—Å–µ –æ—Ç—á–µ—Ç—ã</option>
                        <option value="weekly" ${this.currentPeriod === 'weekly' ? 'selected' : ''}>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ</option>
                        <option value="monthly" ${this.currentPeriod === 'monthly' ? 'selected' : ''}>–ú–µ—Å—è—á–Ω—ã–µ</option>
                    </select>
                </div>
                
                <div class="reports-list">
                    ${reports.map(report => this.renderHistoryItem(report)).join('')}
                </div>
            </div>
        `;
    }
    
    /**
     * üìÑ –†–µ–Ω–¥–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏
     */
    renderHistoryItem(report) {
        const date = this.formatDate(report.createdAt);
        const periodText = report.type === 'weekly' ? '–ù–µ–¥–µ–ª—è' : '–ú–µ—Å—è—Ü';
        
        return `
            <div class="history-item" data-report-id="${report._id}">
                <div class="history-header">
                    <div class="history-title">
                        <span class="history-type">${periodText}</span>
                        <span class="history-date">${date}</span>
                    </div>
                    <div class="history-stats">
                        <span class="stat-badge">${report.statistics?.quotesCount || 0} —Ü–∏—Ç–∞—Ç</span>
                    </div>
                </div>
                
                <div class="history-preview">
                    ${report.aiAnalysis?.summary ? 
                        `<p class="preview-text">${report.aiAnalysis.summary.slice(0, 120)}...</p>` :
                        '<p class="preview-text">–û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É</p>'
                    }
                </div>
                
                <div class="history-actions">
                    <button class="history-action-btn" data-action="view">
                        üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                    </button>
                    <button class="history-action-btn" data-action="share">
                        üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                    </button>
                </div>
            </div>
        `;
    }
    
    /**
     * üí° –†–µ–Ω–¥–µ—Ä —Ç–∞–±–∞ –∏–Ω—Å–∞–π—Ç–æ–≤
     */
    renderInsightsTab() {
        return `
            <div class="tab-content insights-tab">
                <div class="insights-header">
                    <h2>üí° –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã</h2>
                    <p>–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤–∞—à–µ–≥–æ —á—Ç–µ–Ω–∏—è</p>
                </div>
                
                ${this.renderProgressChart()}
                ${this.renderReadingTrends()}
                ${this.renderPersonalGrowth()}
                ${this.renderGoalTracking()}
            </div>
        `;
    }
    
    /**
     * üìà –†–µ–Ω–¥–µ—Ä –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
     */
    renderProgressChart() {
        return `
            <div class="progress-chart-section">
                <h3 class="section-title">üìà –î–∏–Ω–∞–º–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h3>
                <div class="chart-placeholder">
                    <div class="chart-info">
                        üìä –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    </div>
                </div>
            </div>
        `;
    }
    
    /**
     * üìñ –†–µ–Ω–¥–µ—Ä —Ç—Ä–µ–Ω–¥–æ–≤ —á—Ç–µ–Ω–∏—è
     */
    renderReadingTrends() {
        return `
            <div class="reading-trends-section">
                <h3 class="section-title">üìñ –¢—Ä–µ–Ω–¥—ã —á—Ç–µ–Ω–∏—è</h3>
                <div class="trends-grid">
                    <div class="trend-card">
                        <div class="trend-title">üïí –í—Ä–µ–º—è —á—Ç–µ–Ω–∏—è</div>
                        <div class="trend-value">–í–µ—á–µ—Ä–æ–º</div>
                        <div class="trend-change">+15% –∫ –ø—Ä–æ—à–ª–æ–º—É –º–µ—Å—è—Ü—É</div>
                    </div>
                    
                    <div class="trend-card">
                        <div class="trend-title">üìö –õ—é–±–∏–º—ã–π –∂–∞–Ω—Ä</div>
                        <div class="trend-value">–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è</div>
                        <div class="trend-change">40% –≤—Å–µ—Ö —Ü–∏—Ç–∞—Ç</div>
                    </div>
                    
                    <div class="trend-card">
                        <div class="trend-title">‚úçÔ∏è –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞</div>
                        <div class="trend-value">85 —Å–∏–º–≤–æ–ª–æ–≤</div>
                        <div class="trend-change">–û–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</div>
                    </div>
                </div>
            </div>
        `;
    }
    
    /**
     * üå± –†–µ–Ω–¥–µ—Ä –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞
     */
    renderPersonalGrowth() {
        return `
            <div class="personal-growth-section">
                <h3 class="section-title">üå± –õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç</h3>
                <div class="growth-indicators">
                    <div class="growth-item">
                        <div class="growth-icon">üéØ</div>
                        <div class="growth-content">
                            <div class="growth-title">–§–æ–∫—É—Å –Ω–∞ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–∏</div>
                            <div class="growth-description">
                                –í–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å –∫ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–º—É —Ä–æ—Å—Ç—É
                            </div>
                        </div>
                    </div>
                    
                    <div class="growth-item">
                        <div class="growth-icon">üí´</div>
                        <div class="growth-content">
                            <div class="growth-title">–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑—Ä–µ–ª–æ—Å—Ç—å</div>
                            <div class="growth-description">
                                –ó–∞–º–µ—Ç–µ–Ω —Ä–æ—Å—Ç –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –≤ –≤—ã–±–æ—Ä–µ –º—É–¥—Ä—ã—Ö –º—ã—Å–ª–µ–π
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }
    
    /**
     * üéØ –†–µ–Ω–¥–µ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ü–µ–ª–µ–π
     */
    renderGoalTracking() {
        return `
            <div class="goal-tracking-section">
                <h3 class="section-title">üéØ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–ª–µ–π</h3>
                <div class="goals-list">
                    <div class="goal-item">
                        <div class="goal-progress">
                            <div class="goal-title">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Ü–µ–ª—å</div>
                            <div class="goal-bar">
                                <div class="goal-fill" style="width: 85%"></div>
                            </div>
                            <div class="goal-text">6 –∏–∑ 7 —Ü–∏—Ç–∞—Ç</div>
                        </div>
                    </div>
                    
                    <div class="goal-item">
                        <div class="goal-progress">
                            <div class="goal-title">–ú–µ—Å—è—á–Ω–∞—è —Ü–µ–ª—å</div>
                            <div class="goal-bar">
                                <div class="goal-fill" style="width: 60%"></div>
                            </div>
                            <div class="goal-text">18 –∏–∑ 30 —Ü–∏—Ç–∞—Ç</div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }
    
    /**
     * üì≠ –†–µ–Ω–¥–µ—Ä –ø—É—Å—Ç–æ–≥–æ –æ—Ç—á–µ—Ç–∞
     */
    renderEmptyReport() {
        return `
            <div class="empty-state">
                <div class="empty-icon">üìä</div>
                <div class="empty-title">–û—Ç—á–µ—Ç –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤</div>
                <div class="empty-text">
                    –î–æ–±–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–∏—Ç–∞—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
                </div>
                <button class="empty-action" onclick="this.app.router.navigate('/diary')">
                    ‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å —Ü–∏—Ç–∞—Ç—ã
                </button>
            </div>
        `;
    }
    
    /**
     * üì≠ –†–µ–Ω–¥–µ—Ä –ø—É—Å—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–∏
     */
    renderEmptyHistory() {
        return `
            <div class="empty-state">
                <div class="empty-icon">üìö</div>
                <div class="empty-title">–ò—Å—Ç–æ—Ä–∏—è –æ—Ç—á–µ—Ç–æ–≤ –ø—É—Å—Ç–∞</div>
                <div class="empty-text">
                    –í–∞—à–∏ –æ—Ç—á–µ—Ç—ã –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –∑–¥–µ—Å—å –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é
                </div>
            </div>
        `;
    }
    
    /**
     * üéØ –ù–∞–≤–µ—à–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    attachEventListeners() {
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞
        this.attachPeriodListeners();
        
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤
        this.attachTabListeners();
        
        // –î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏
        this.attachReportActionListeners();
        
        // –î–µ–π—Å—Ç–≤–∏—è —Å –∫–Ω–∏–≥–∞–º–∏
        this.attachBookActionListeners();
        
        // –ü—Ä–æ–º–æ–∫–æ–¥
        this.attachPromoListeners();
        
        // –ò—Å—Ç–æ—Ä–∏—è –æ—Ç—á–µ—Ç–æ–≤
        this.attachHistoryListeners();
    }
    
    /**
     * üîÑ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–µ—Ä–∏–æ–¥–∞
     */
    attachPeriodListeners() {
        const periodBtns = document.querySelectorAll('.period-btn[data-period]');
        periodBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                const period = btn.dataset.period;
                this.switchPeriod(period);
            });
        });
    }
    
    /**
     * üìë –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–∞–±–æ–≤
     */
    attachTabListeners() {
        const tabs = document.querySelectorAll('.tab[data-tab]');
        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                const tabName = tab.dataset.tab;
                this.switchTab(tabName);
            });
        });
    }
    
    /**
     * üìä –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π —Å –æ—Ç—á–µ—Ç–∞–º–∏
     */
    attachReportActionListeners() {
        const shareBtn = document.getElementById('shareReportBtn');
        const exportBtn = document.getElementById('exportReportBtn');
        
        if (shareBtn) {
            shareBtn.addEventListener('click', () => this.shareReport());
        }
        
        if (exportBtn) {
            exportBtn.addEventListener('click', () => this.exportReport());
        }
    }
    
    /**
     * üìö –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–Ω–∏–≥–∞–º–∏
     */
    attachBookActionListeners() {
        const bookActions = document.querySelectorAll('.book-action-btn[data-action]');
        bookActions.forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.stopPropagation();
                const action = btn.dataset.action;
                const bookCard = btn.closest('.book-recommendation');
                const bookId = bookCard?.dataset.bookId;
                
                if (bookId) {
                    this.handleBookAction(action, bookId);
                }
            });
        });
    }
    
    /**
     * üéÅ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    attachPromoListeners() {
        const copyBtn = document.getElementById('copyCodeBtn');
        const useBtn = document.getElementById('usePromoBtn');
        
        if (copyBtn) {
            copyBtn.addEventListener('click', () => this.copyPromoCode());
        }
        
        if (useBtn) {
            useBtn.addEventListener('click', () => this.usePromoCode());
        }
    }
    
    /**
     * üìö –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
     */
    attachHistoryListeners() {
        const historyItems = document.querySelectorAll('.history-action-btn[data-action]');
        historyItems.forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.stopPropagation();
                const action = btn.dataset.action;
                const historyItem = btn.closest('.history-item');
                const reportId = historyItem?.dataset.reportId;
                
                if (reportId) {
                    this.handleHistoryAction(action, reportId);
                }
            });
        });
        
        const periodFilter = document.getElementById('historyPeriodFilter');
        if (periodFilter) {
            periodFilter.addEventListener('change', (e) => {
                this.filterHistory(e.target.value);
            });
        }
    }
    
    /**
     * üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞
     */
    async switchPeriod(period) {
        this.currentPeriod = period;
        if (this.telegram && typeof this.telegram.hapticFeedback === 'function') {
            this.telegram.hapticFeedback('light');
        }
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
        await this.loadCurrentReport();
        this.rerender();
    }
    
    /**
     * üìë –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–∞
     */
    switchTab(tabName) {
        this.activeTab = tabName;
        if (this.telegram && typeof this.telegram.hapticFeedback === 'function') {
            this.telegram.hapticFeedback('light');
        }
        this.rerender();
    }
    
    /**
     * üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –æ—Ç—á–µ—Ç–æ–º
     * –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã Telegram Web App
     */
    shareReport() {
        if (this.telegram && typeof this.telegram.hapticFeedback === 'function') {
            this.telegram.hapticFeedback('medium');
        }
        
        const shareText = `üìä –ú–æ–π –æ—Ç—á–µ—Ç –≤ Reader Bot:\\n‚Ä¢ ${this.currentReport?.statistics?.quotesCount || 0} —Ü–∏—Ç–∞—Ç\\n‚Ä¢ ${this.currentReport?.statistics?.uniqueAuthors || 0} –∞–≤—Ç–æ—Ä–æ–≤\\n\\n–°–æ–±–∏—Ä–∞—é –º—É–¥—Ä–æ—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! üìö`;
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram Web App shareUrl
        if (window.Telegram?.WebApp?.shareUrl) {
            window.Telegram.WebApp.shareUrl(window.location.href, shareText);
        } else if (navigator.share) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º Web Share API –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
            navigator.share({
                title: '–ú–æ–π –æ—Ç—á–µ—Ç –≤ Reader Bot',
                text: shareText,
                url: window.location.href
            });
        } else {
            // Fallback: –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä
            navigator.clipboard.writeText(shareText);
            this.showSuccess('‚úÖ –û—Ç—á–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
        }
    }
    
    /**
     * üíæ –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞
     */
    exportReport() {
        if (this.telegram && typeof this.telegram.hapticFeedback === 'function') {
            this.telegram.hapticFeedback('medium');
        }
        
        // –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç–∫—Å–ø–æ—Ä—Ç –≤ PDF –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        this.showSuccess('üíæ –§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏');
    }
    
    /**
     * üìö –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–Ω–∏–≥–∞–º–∏
     */
    handleBookAction(action, bookId) {
        if (this.telegram && typeof this.telegram.hapticFeedback === 'function') {
            this.telegram.hapticFeedback('light');
        }
        
        switch (action) {
            case 'view':
                this.app.router.navigate(`/catalog?book=${bookId}`);
                break;
            case 'buy':
                // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∫—É–ø–∫–µ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º
                this.buyBook(bookId);
                break;
        }
    }
    
    /**
     * üí≥ –ü–æ–∫—É–ø–∫–∞ –∫–Ω–∏–≥–∏
     */
    buyBook(bookId) {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –ø–æ–∫—É–ø–æ–∫
        const promoCode = this.currentReport?.promoCode?.code;
        const buyUrl = `https://annabusel.org/catalog/${bookId}${promoCode ? `?promo=${promoCode}` : ''}`;
        
        if (this.telegram && typeof this.telegram.openLink === 'function') {
            this.telegram.openLink(buyUrl);
        } else {
            window.open(buyUrl, '_blank');
        }
    }
    
    /**
     * üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    copyPromoCode() {
        const promoCodeText = document.getElementById('promoCodeText');
        if (promoCodeText) {
            const code = promoCodeText.textContent;
            navigator.clipboard.writeText(code);
            
            if (this.telegram && typeof this.telegram.hapticFeedback === 'function') {
                this.telegram.hapticFeedback('success');
            }
            this.showSuccess('‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
        }
    }
    
    /**
     * üõí –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    usePromoCode() {
        if (this.telegram && typeof this.telegram.hapticFeedback === 'function') {
            this.telegram.hapticFeedback('medium');
        }
        this.app.router.navigate('/catalog?promo=true');
    }
    
    /**
     * üìö –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∏—Å—Ç–æ—Ä–∏–µ–π
     */
    handleHistoryAction(action, reportId) {
        if (this.telegram && typeof this.telegram.hapticFeedback === 'function') {
            this.telegram.hapticFeedback('light');
        }
        
        switch (action) {
            case 'view':
                this.viewHistoryReport(reportId);
                break;
            case 'share':
                this.shareHistoryReport(reportId);
                break;
        }
    }
    
    /**
     * üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞
     */
    async viewHistoryReport(reportId) {
        try {
            const report = await this.api.getReportById(reportId);
            this.currentReport = report;
            this.activeTab = 'current';
            this.rerender();
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞:', error);
            this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç');
        }
    }
    
    /**
     * üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º –æ—Ç—á–µ—Ç–æ–º
     */
    shareHistoryReport(reportId) {
        // –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ shareReport, –Ω–æ –¥–ª—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        this.shareReport();
    }
    
    /**
     * üîß –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
     */
    
    calculateGoalProgress(stats) {
        const goal = this.currentPeriod === 'weekly' ? 7 : 30;
        return Math.min(Math.round((stats.quotesCount / goal) * 100), 100);
    }
    
    getChangeClass(change) {
        if (!change) return '';
        return change > 0 ? 'positive' : change < 0 ? 'negative' : '';
    }
    
    formatChange(change) {
        if (!change) return '';
        const sign = change > 0 ? '+' : '';
        return `${sign}${change}`;
    }
    
    formatDate(dateString) {
        return new Date(dateString).toLocaleDateString('ru-RU');
    }
    
    formatDateRange(range) {
        if (!range) return '';
        const start = this.formatDate(range.start);
        const end = this.formatDate(range.end);
        return `${start} - ${end}`;
    }
    
    renderProgressBar(current, total) {
        const percent = Math.round((current / total) * 100);
        return `
            <div class="mini-progress-bar">
                <div class="mini-progress-fill" style="width: ${percent}%"></div>
            </div>
        `;
    }
    
    updateReportsUI(reports) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–æ–≤
        if (reports.current && this.activeTab === 'current') {
            this.currentReport = reports.current;
            this.rerender();
        }
    }
    
    updateStatsUI(stats) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        const statCards = document.querySelectorAll('.stat-number');
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π...
    }
    
    filterHistory(period) {
        this.currentPeriod = period;
        this.rerender();
    }
    
    rerender() {
        const container = document.querySelector('.reports-page .content');
        if (container) {
            container.innerHTML = `
                ${this.renderPeriodSelector()}
                ${this.renderTabs()}
                ${this.renderTabContent()}
            `;
            this.attachEventListeners();
        }
    }
    
    showSuccess(message) {
        if (this.telegram && typeof this.telegram.showAlert === 'function') {
            this.telegram.showAlert(message);
        } else {
            alert(message);
        }
    }
    
    showError(message) {
        if (this.telegram && typeof this.telegram.showAlert === 'function') {
            this.telegram.showAlert(message);
        } else {
            alert(message);
        }
    }
    
    /**
     * üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏
     */
    destroy() {
        this.subscriptions.forEach(unsubscribe => {
            if (typeof unsubscribe === 'function') {
                unsubscribe();
            }
        });
        this.subscriptions = [];
    }
}

// üì§ –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞
window.ReportsPage = ReportsPage;