/**
 * üìä –û–¢–ß–ï–¢–´ - ReportsPage.js (–¢–û–ß–ù–û –ü–û –ö–û–ù–¶–ï–ü–¢–£!)
 * 
 * ‚úÖ –ü–û–õ–ù–û–ï –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –ö–û–ù–¶–ï–ü–¢–£ –ò–ó "–∫–æ–Ω—Ü–µ–ø—Ç 5 —Å—Ç—Ä–∞–Ω–∏—Ü app.txt":
 * - –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–µ–∑ —Ç–∞–±–æ–≤
 * - –ö–∞—Ä—Ç–æ—á–∫–∞ —Å 4 –∫–æ–ª–æ–Ω–∫–∞–º–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * - AI –∞–Ω–∞–ª–∏–∑ –æ—Ç –ê–Ω–Ω—ã –≤ —Å—Ç–∏–ª–µ ai-insight
 * - –ü—Ä–æ–º–æ —Å–µ–∫—Ü–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
 */

class ReportsPage {
    constructor(app) {
        this.app = app;
        this.api = app.api;
        this.state = app.state;
        this.telegram = app.telegram;
        
        // –î–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞ (–ø—Ä–∏–º–µ—Ä—ã –∏–∑ –∫–æ–Ω—Ü–µ–ø—Ç–∞)
        this.reportData = {
            statistics: {
                quotes: 7,
                authors: 5,
                days: 6,
                goal: 85
            },
            topics: "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è, —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ, –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
            aiAnalysis: "–í–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É—é —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ —Ç–µ–º—É —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è.",
            recommendations: "–ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Ü–∏—Ç–∞—Ç –∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞"
        };
        
        this.init();
    }
    
    init() {
        this.loadReportData();
    }
    
    async loadReportData() {
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
            const stats = await this.api.getStats();
            if (stats) {
                this.reportData.statistics = {
                    quotes: stats.thisWeek || 7,
                    authors: stats.uniqueAuthors || 5,
                    days: stats.activeDays || 6,
                    goal: Math.min(Math.round((stats.thisWeek / 7) * 100), 100) || 85
                };
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞:', error);
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –∫–æ–Ω—Ü–µ–ø—Ç–∞ –∫–∞–∫ fallback
        }
    }
    
    /**
     * üé® –†–ï–ù–î–ï–† –°–¢–†–ê–ù–ò–¶–´ (–¢–û–ß–ù–û –ü–û –ö–û–ù–¶–ï–ü–¢–£!)
     */
    render() {
        return `
            <div class="content">
                ${this.renderWeeklyReport()}
                ${this.renderAIAnalysis()}
                ${this.renderRecommendations()}
            </div>
        `;
    }
    
    /**
     * üìä –ï–ñ–ï–ù–ï–î–ï–õ–¨–ù–´–ô –û–¢–ß–ï–¢ (–¢–û–ß–ù–û –ò–ó –ö–û–ù–¶–ï–ü–¢–ê!)
     */
    renderWeeklyReport() {
        const { quotes, authors, days, goal } = this.reportData.statistics;
        
        return `
            <div style="background: var(--surface); border-radius: 12px; padding: 16px; margin-bottom: 16px; border: 1px solid var(--border); transition: all var(--transition-normal);">
                <div style="font-weight: bold; margin-bottom: 10px; font-size: 13px; color: var(--text-primary); transition: color var(--transition-normal);">üìà –í–∞—à –æ—Ç—á–µ—Ç –∑–∞ –Ω–µ–¥–µ–ª—é</div>
                <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 8px; margin-bottom: 10px;">
                    <div style="text-align: center;">
                        <div style="font-size: 16px; font-weight: bold; color: var(--text-primary); transition: color var(--transition-normal);">${quotes}</div>
                        <div style="font-size: 9px; color: var(--text-secondary); transition: color var(--transition-normal);">–¶–∏—Ç–∞—Ç</div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 16px; font-weight: bold; color: var(--text-primary); transition: color var(--transition-normal);">${authors}</div>
                        <div style="font-size: 9px; color: var(--text-secondary); transition: color var(--transition-normal);">–ê–≤—Ç–æ—Ä–æ–≤</div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 16px; font-weight: bold; color: var(--text-primary); transition: color var(--transition-normal);">${days}</div>
                        <div style="font-size: 9px; color: var(--text-secondary); transition: color var(--transition-normal);">–î–Ω–µ–π</div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 16px; font-weight: bold; color: var(--primary-color); transition: color var(--transition-normal);">${goal}%</div>
                        <div style="font-size: 9px; color: var(--text-secondary); transition: color var(--transition-normal);">–¶–µ–ª—å</div>
                    </div>
                </div>
                <div style="font-size: 10px; color: var(--text-secondary); margin-bottom: 8px; transition: color var(--transition-normal);">–¢–µ–º—ã: ${this.reportData.topics}</div>
            </div>
        `;
    }
    
    /**
     * üí° AI –ê–ù–ê–õ–ò–ó –û–¢ –ê–ù–ù–´ (–¢–û–ß–ù–û –ò–ó –ö–û–ù–¶–ï–ü–¢–ê!)
     */
    renderAIAnalysis() {
        return `
            <div class="ai-insight">
                <div class="ai-title">üí° –ê–Ω–∞–ª–∏–∑ –æ—Ç –ê–Ω–Ω—ã</div>
                <div class="ai-text">${this.reportData.aiAnalysis}</div>
            </div>
        `;
    }
    
    /**
     * üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò (–¢–û–ß–ù–û –ò–ó –ö–û–ù–¶–ï–ü–¢–ê!)
     */
    renderRecommendations() {
        return `
            <div class="promo-section">
                <div class="promo-title">üéØ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å</div>
                <div class="promo-text">${this.reportData.recommendations}</div>
                <button class="promo-btn" id="getRecommendationsBtn">–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</button>
            </div>
        `;
    }
    
    /**
     * üéØ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô
     */
    attachEventListeners() {
        const getRecommendationsBtn = document.getElementById('getRecommendationsBtn');
        
        if (getRecommendationsBtn) {
            getRecommendationsBtn.addEventListener('click', () => {
                this.handleGetRecommendations();
            });
        }
    }
    
    /**
     * üìö –ü–ï–†–ï–•–û–î –ö –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø–ú
     */
    handleGetRecommendations() {
        this.telegram.hapticFeedback('medium');
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
        this.app.router.navigate('/catalog?recommendations=true');
    }
    
    /**
     * üì± LIFECYCLE –ú–ï–¢–û–î–´
     */
    onShow() {
        const homeHeader = document.getElementById('home-header');
        const pageHeader = document.getElementById('page-header');
        const pageTitle = document.getElementById('pageTitle');
        
        if (homeHeader) homeHeader.style.display = 'none';
        if (pageHeader) pageHeader.style.display = 'block';
        if (pageTitle) pageTitle.textContent = 'üìã –û—Ç—á–µ—Ç—ã + –ê–Ω–∞–ª–∏–∑';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.loadReportData().then(() => {
            this.rerender();
        });
    }
    
    onHide() {
        const pageHeader = document.getElementById('page-header');
        if (pageHeader) pageHeader.style.display = 'none';
    }
    
    rerender() {
        const container = document.getElementById('page-content');
        if (container) {
            container.innerHTML = this.render();
            this.attachEventListeners();
        }
    }
    
    destroy() {
        // –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
    }
}

// üì§ –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞
window.ReportsPage = ReportsPage;
