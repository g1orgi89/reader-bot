/**
 * üë• –°–û–û–ë–©–ï–°–¢–í–û –ß–ò–¢–ê–¢–ï–õ–ï–ô - CommunityPage.js (–ò–°–ü–†–ê–í–õ–ï–ù–û - –ë–ï–ó –®–ê–ü–ö–ò!)
 * 
 * ‚úÖ –ü–û–õ–ù–û–ï –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –ö–û–ù–¶–ï–ü–¢–£ –ò–ó "–∫–æ–Ω—Ü–µ–ø—Ç 5 —Å—Ç—Ä–∞–Ω–∏—Ü app.txt":
 * - 3 —Ç–∞–±–∞: üì∞ –õ–µ–Ω—Ç–∞, üèÜ –¢–æ–ø –Ω–µ–¥–µ–ª–∏, üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
 * - MVP –≤–µ—Ä—Å–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
 * - –¢–æ—á–Ω–∞—è HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–∑ –∫–æ–Ω—Ü–µ–ø—Ç–∞
 * - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–∞–∫ –≤ –º–∞–∫–µ—Ç–µ
 * 
 * ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–ï–ó –®–ê–ü–ö–ò –°–í–ï–†–•–£ - –ß–ò–°–¢–´–ô –î–ò–ó–ê–ô–ù!
 * ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è API –≤—ã–∑–æ–≤—ã –∫–∞–∫ –≤ HomePage –∏ DiaryPage
 */

class CommunityPage {
    constructor(app) {
        this.app = app;
        this.api = app.api;
        this.state = app.state;
        this.telegram = app.telegram;
        this.statisticsService = app.statistics || window.statisticsService;
        
        // ‚úÖ –ù–û–í–û–ï: –§–ª–∞–≥–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∑–∞–≥—Ä—É–∑–æ–∫
        this.communityLoaded = false;
        this.communityLoading = false;
        
        // –î–∞–Ω–Ω—ã–µ –¥–ª—è "–°–µ–π—á–∞—Å –∏–∑—É—á–∞—é—Ç" –∏–∑ StatisticsService
        this.topAnalyses = [];
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –∫–æ–Ω—Ü–µ–ø—Ç–µ)
        this.activeTab = 'feed'; // feed, top, stats
        
        // ‚úÖ –ù–û–í–û–ï: –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API (PR-3)
        this.communityData = {
            activeReaders: 127,
            newQuotes: 89,
            totalReaders: 1247,
            totalQuotes: 8156,
            totalAuthors: 342,
            daysActive: 67
        };

        // ‚úÖ –ù–û–í–û–ï: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–µ–∫—Ü–∏–π (PR-3)
        this.latestQuotes = [];
        this.popularQuotes = [];
        this.popularBooks = [];
        this.recentClicks = [];
        this.leaderboard = [];
        this.communityMessage = null;
        this.communityTrend = null;

        // ‚úÖ –ù–û–í–û–ï: –°–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ–∫—Ü–∏–∏ (PR-3)
        this.loadingStates = {
            latestQuotes: false,
            popularQuotes: false,
            popularBooks: false,
            recentClicks: false,
            leaderboard: false,
            stats: false
        };

        // ‚úÖ –ù–û–í–û–ï: –°–æ—Å—Ç–æ—è–Ω–∏—è –æ—à–∏–±–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ–∫—Ü–∏–∏ (PR-3)
        this.errorStates = {
            latestQuotes: null,
            popularQuotes: null,
            popularBooks: null,
            recentClicks: null,
            leaderboard: null,
            stats: null
        };
        
        this.init();
    }
    
    init() {
        this.setupSubscriptions();
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ init()
    }
    
    setupSubscriptions() {
        // –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    }
    
    async loadCommunityData() {
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –≤—ã–∑–æ–≤—ã
        if (this.communityLoading) {
            console.log('üîÑ CommunityPage: –°–æ–æ–±—â–µ—Å—Ç–≤–æ —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }
        
        try {
            this.communityLoading = true;
            console.log('üë• CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞...');
            
            const stats = await this.api.getCommunityStats();
            if (stats && stats.success) {
                this.communityData = { ...this.communityData, ...stats.data };
                this.errorStates.stats = null;
            }
            
            this.communityLoaded = true;
            this.state.set('community.lastUpdate', Date.now());
            console.log('‚úÖ CommunityPage: –î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞:', error);
            this.errorStates.stats = error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏';
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ü–µ–ø—Ç–∞ –∫–∞–∫ fallback
        } finally {
            this.communityLoading = false;
        }
    }

    /**
     * üì∞ –ó–ê–ì–†–£–ó–ö–ê –ü–û–°–õ–ï–î–ù–ò–• –¶–ò–¢–ê–¢ –°–û–û–ë–©–ï–°–¢–í–ê (PR-3)
     */
    async loadLatestQuotes(limit = 5) {
        if (this.loadingStates.latestQuotes) return;
        
        try {
            this.loadingStates.latestQuotes = true;
            this.errorStates.latestQuotes = null;
            console.log('üì∞ CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã...');
            
            const response = await this.api.getCommunityLatestQuotes({ limit });
            if (response && response.success) {
                // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: —á–∏—Ç–∞–µ–º –∏–∑ resp.data, –µ—Å–ª–∏ –Ω–µ—Ç - –∏–∑ resp.quotes/resp.data.quotes/resp
                this.latestQuotes = response.data || response.quotes || response.data?.quotes || [];
                console.log('‚úÖ CommunityPage: –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.latestQuotes.length);
            } else {
                this.latestQuotes = [];
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ü–∏—Ç–∞—Ç:', error);
            this.errorStates.latestQuotes = error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–∏—Ç–∞—Ç';
            this.latestQuotes = [];
        } finally {
            this.loadingStates.latestQuotes = false;
        }
    }

    /**
     * üî• –ó–ê–ì–†–£–ó–ö–ê –ü–û–ü–£–õ–Ø–†–ù–´–• –¶–ò–¢–ê–¢ –°–û–û–ë–©–ï–°–¢–í–ê (PR-3)
     */
    async loadPopularQuotes(period = '7d', limit = 10) {
        if (this.loadingStates.popularQuotes) return;
        
        try {
            this.loadingStates.popularQuotes = true;
            this.errorStates.popularQuotes = null;
            console.log('üî• CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã...');
            
            const response = await this.api.getCommunityPopularQuotes({ period, limit });
            if (response && response.success) {
                this.popularQuotes = response.quotes || [];
                console.log('‚úÖ CommunityPage: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.popularQuotes.length);
            } else {
                this.popularQuotes = [];
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ü–∏—Ç–∞—Ç:', error);
            this.errorStates.popularQuotes = error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ü–∏—Ç–∞—Ç';
            this.popularQuotes = [];
        } finally {
            this.loadingStates.popularQuotes = false;
        }
    }

    /**
     * üìö –ó–ê–ì–†–£–ó–ö–ê –ü–û–ü–£–õ–Ø–†–ù–´–• –ö–ù–ò–ì –°–û–û–ë–©–ï–°–¢–í–ê (–û–ë–ù–û–í–õ–ï–ù–û –î–õ–Ø –¢–û–ü–ê –ù–ï–î–ï–õ–ò)
     */
    async loadPopularBooks(period = '7d', limit = 10) {
        if (this.loadingStates.popularBooks) return;
        
        try {
            this.loadingStates.popularBooks = true;
            this.errorStates.popularBooks = null;
            console.log('üìö CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–Ω–∏–≥–∏ –Ω–µ–¥–µ–ª–∏...');
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º getTopBooks –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ä–∞–∑–±–æ—Ä–æ–≤ –Ω–µ–¥–µ–ª–∏
            const response = await this.api.getTopBooks({ period, limit });
            if (response && response.success) {
                // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: —á–∏—Ç–∞–µ–º –∏–∑ resp.data –∏–ª–∏ resp.books
                this.popularBooks = response.data || response.books || [];
                console.log('‚úÖ CommunityPage: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–Ω–∏–≥–∏ –Ω–µ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.popularBooks.length);
            } else {
                this.popularBooks = [];
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–Ω–∏–≥ –Ω–µ–¥–µ–ª–∏:', error);
            this.errorStates.popularBooks = error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–Ω–∏–≥';
            this.popularBooks = [];
        } finally {
            this.loadingStates.popularBooks = false;
        }
    }

    /**
     * üëÜ –ó–ê–ì–†–£–ó–ö–ê –ü–û–°–õ–ï–î–ù–ò–• –ö–õ–ò–ö–û–í –ü–û –ö–ê–¢–ê–õ–û–ì–£ (PR-3)
     */
    async loadRecentClicks(limit = 5) {
        if (this.loadingStates.recentClicks) return;
        
        try {
            this.loadingStates.recentClicks = true;
            this.errorStates.recentClicks = null;
            console.log('üëÜ CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–ª–∏–∫–∏...');
            
            const response = await this.api.getCatalogRecentClicks({ limit });
            if (response && response.success) {
                // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: —á–∏—Ç–∞–µ–º –∏–∑ resp.clicks, –µ—Å–ª–∏ –Ω–µ—Ç - –∏–∑ resp.data/items
                this.recentClicks = response.clicks || response.data || response.items || [];
                console.log('‚úÖ CommunityPage: –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–ª–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.recentClicks.length);
            } else {
                this.recentClicks = [];
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–ª–∏–∫–æ–≤:', error);
            this.errorStates.recentClicks = error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–∫–æ–≤';
            this.recentClicks = [];
        } finally {
            this.loadingStates.recentClicks = false;
        }
    }

    /**
     * üèÜ –ó–ê–ì–†–£–ó–ö–ê –¢–ê–ë–õ–ò–¶–´ –õ–ò–î–ï–†–û–í (PR-3)
     */
    async loadLeaderboard(limit = 10) {
        if (this.loadingStates.leaderboard) return;
        
        try {
            this.loadingStates.leaderboard = true;
            this.errorStates.leaderboard = null;
            console.log('üèÜ CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤...');
            
            const response = await this.api.getLeaderboard({ limit });
            if (response && response.success) {
                // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: —á–∏—Ç–∞–µ–º –∏–∑ resp.data –∏–ª–∏ resp.items
                this.leaderboard = response.data || response.items || [];
                console.log('‚úÖ CommunityPage: –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', this.leaderboard.length);
            } else {
                this.leaderboard = [];
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤:', error);
            this.errorStates.leaderboard = error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–∏–¥–µ—Ä–æ–≤';
            this.leaderboard = [];
        } finally {
            this.loadingStates.leaderboard = false;
        }
    }
    
    /**
     * üìö –ó–ê–ì–†–£–ó–ö–ê –¢–û–ü–û–í–´–• –ê–ù–ê–õ–ò–ó–û–í –ò–ó STATISTICSSERVICE
     */
    async loadTopAnalyses() {
        if (!this.statisticsService || typeof this.statisticsService.getTopAnalyses !== 'function') {
            console.warn('‚ö†Ô∏è CommunityPage: StatisticsService –∏–ª–∏ getTopAnalyses –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            return;
        }
        
        try {
            console.log('üìö CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ø–æ–≤—ã–µ –∞–Ω–∞–ª–∏–∑—ã —á–µ—Ä–µ–∑ StatisticsService...');
            this.topAnalyses = await this.statisticsService.getTopAnalyses(3);
            console.log('‚úÖ CommunityPage: –¢–æ–ø–æ–≤—ã–µ –∞–Ω–∞–ª–∏–∑—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.topAnalyses);
        } catch (error) {
            console.error('‚ùå CommunityPage: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–ø–æ–≤—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤:', error);
            this.topAnalyses = []; // Fallback to empty array
        }
    }

    /**
     * üí¨ –ó–ê–ì–†–£–ó–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –û–¢ –ê–ù–ù–´ (–ù–û–í–û–ï)
     */
    async loadCommunityMessage() {
        try {
            console.log('üí¨ CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ê–Ω–Ω—ã...');
            const response = await this.api.getCommunityMessage();
            if (response && response.success && response.data) {
                this.communityMessage = response.data;
                console.log('‚úÖ CommunityPage: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ê–Ω–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω–æ');
                return response.data;
            } else {
                // Fallback to static message
                this.communityMessage = {
                    text: "–î–æ—Ä–æ–≥–∏–µ —á–∏—Ç–∞—Ç–µ–ª–∏! –í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–æ–±–∏—Ä–∞—Ç—å –º—É–¥—Ä–æ—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!",
                    time: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥"
                };
                return this.communityMessage;
            }
        } catch (error) {
            console.error('‚ùå CommunityPage: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ê–Ω–Ω—ã:', error);
            // Fallback to static message
            this.communityMessage = {
                text: "–î–æ—Ä–æ–≥–∏–µ —á–∏—Ç–∞—Ç–µ–ª–∏! –í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–æ–±–∏—Ä–∞—Ç—å –º—É–¥—Ä–æ—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!",
                time: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥"
            };
            return this.communityMessage;
        }
    }

    /**
     * üìà –ó–ê–ì–†–£–ó–ö–ê –¢–†–ï–ù–î–ê –ù–ï–î–ï–õ–ò (–ù–û–í–û–ï)
     */
    async loadCommunityTrend() {
        try {
            console.log('üìà CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–µ–Ω–¥ –Ω–µ–¥–µ–ª–∏...');
            const response = await this.api.getCommunityTrend();
            if (response && response.success && response.data) {
                this.communityTrend = response.data;
                console.log('‚úÖ CommunityPage: –¢—Ä–µ–Ω–¥ –Ω–µ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω');
                return response.data;
            } else {
                // Fallback to static trend
                this.communityTrend = {
                    title: "–¢—Ä–µ–Ω–¥ –Ω–µ–¥–µ–ª–∏",
                    text: '–¢–µ–º–∞ "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π" –Ω–∞–±–∏—Ä–∞–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å',
                    buttonText: "–ò–∑—É—á–∏—Ç—å —Ä–∞–∑–±–æ—Ä—ã"
                };
                return this.communityTrend;
            }
        } catch (error) {
            console.error('‚ùå CommunityPage: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ–Ω–¥–∞ –Ω–µ–¥–µ–ª–∏:', error);
            // Fallback to static trend
            this.communityTrend = {
                title: "–¢—Ä–µ–Ω–¥ –Ω–µ–¥–µ–ª–∏",
                text: '–¢–µ–º–∞ "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π" –Ω–∞–±–∏—Ä–∞–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å',
                buttonText: "–ò–∑—É—á–∏—Ç—å —Ä–∞–∑–±–æ—Ä—ã"
            };
            return this.communityTrend;
        }
    }
    
    /**
     * üé® –†–ï–ù–î–ï–† –°–¢–†–ê–ù–ò–¶–´ (–¢–û–ß–ù–û –ü–û –ö–û–ù–¶–ï–ü–¢–£!) - –ë–ï–ó –®–ê–ü–ö–ò!
     */
    render() {
        return `
            <div class="content">
                ${this.renderTabs()}
                ${this.renderTabContent()}
            </div>
        `;
    }
    
    /**
     * üìë –¢–ê–ë–´ (–¢–û–ß–ù–û –ò–ó –ö–û–ù–¶–ï–ü–¢–ê!)
     */
    renderTabs() {
        return `
            <div class="tabs">
                <button class="tab ${this.activeTab === 'feed' ? 'active' : ''}" data-tab="feed">üì∞ –õ–µ–Ω—Ç–∞</button>
                <button class="tab ${this.activeTab === 'top' ? 'active' : ''}" data-tab="top">üèÜ –¢–æ–ø –Ω–µ–¥–µ–ª–∏</button>
                <button class="tab ${this.activeTab === 'stats' ? 'active' : ''}" data-tab="stats">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</button>
            </div>
        `;
    }
    
    renderTabContent() {
        switch (this.activeTab) {
            case 'feed':
                return this.renderFeedTab();
            case 'top':
                return this.renderTopTab();
            case 'stats':
                return this.renderStatsTab();
            default:
                return this.renderFeedTab();
        }
    }
    
    /**
     * üì∞ –¢–ê–ë –õ–ï–ù–¢–ê (–û–ë–ù–û–í–õ–ï–ù –î–õ–Ø PR-3 - –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –ò–ó API!)
     */
    renderFeedTab() {
        // "–°–µ–π—á–∞—Å –∏–∑—É—á–∞—é—Ç" —Å–µ–∫—Ü–∏—è —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –∫–ª–∏–∫–∞–º–∏ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É
        const currentlyStudyingSection = this.renderCurrentlyStudyingSection();
        
        // ‚úÖ –ù–û–í–û–ï: –°–µ–∫—Ü–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ü–∏—Ç–∞—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (PR-3)
        const latestQuotesSection = this.renderLatestQuotesSection();
        
        // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ê–Ω–Ω—ã —Å fallback
        const annaMessageSection = this.renderAnnaMessageSection();
        
        // –¢—Ä–µ–Ω–¥ –Ω–µ–¥–µ–ª–∏ —Å fallback
        const trendSection = this.renderTrendSection();
        
        return `
            <div class="stats-summary">
                üìä –°–µ–≥–æ–¥–Ω—è: ${this.communityData.activeReaders} –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∏—Ç–∞—Ç–µ–ª–µ–π ‚Ä¢ ${this.communityData.newQuotes} –Ω–æ–≤—ã—Ö —Ü–∏—Ç–∞—Ç
            </div>
            
            ${currentlyStudyingSection}
            
            ${latestQuotesSection}
            
            ${annaMessageSection}
            
            ${trendSection}
        `;
    }

    /**
     * üì∞ –°–ï–ö–¶–ò–Ø –ü–û–°–õ–ï–î–ù–ò–• –¶–ò–¢–ê–¢ –°–û–û–ë–©–ï–°–¢–í–ê (–û–ë–ù–û–í–õ–ï–ù–û –î–õ–Ø PR-3)
     */
    renderLatestQuotesSection() {
        if (this.loadingStates.latestQuotes) {
            return `
                <div class="mvp-community-item">
                    <div class="mvp-community-title">üí´ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</div>
                    <div class="loading-state">
                        <div class="loading-spinner"></div>
                        <div class="loading-text">–ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–∏—Ç–∞—Ç—ã...</div>
                    </div>
                </div>
            `;
        }

        if (this.errorStates.latestQuotes) {
            return `
                <div class="error-state">
                    <div class="error-icon">‚ùå</div>
                    <div class="error-title">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</div>
                    <div class="error-description">${this.errorStates.latestQuotes}</div>
                    <button class="error-retry-btn" data-retry="latest-quotes" style="min-height: var(--touch-target-min);">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
                </div>
            `;
        }

        if (!this.latestQuotes || this.latestQuotes.length === 0) {
            return `
                <div class="empty-state">
                    <div class="empty-icon">üìù</div>
                    <div class="empty-title">–ü–æ–∫–∞ –Ω–µ—Ç —Ü–∏—Ç–∞—Ç</div>
                    <div class="empty-description">–°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –ø–æ–¥–µ–ª–∏—Ç—Å—è –º—É–¥—Ä–æ—Å—Ç—å—é!</div>
                </div>
            `;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Ü–∏—Ç–∞—Ç—ã —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∫–∞–∫ –∫–∞—Ä—Ç–æ—á–∫–∏
        const quotesCards = this.latestQuotes.slice(0, 3).map((quote, index) => {
            return `
                <div class="quote-card" data-quote-id="${quote.id || index}">
                    <div class="quote-card__content">
                        <div class="quote-card__text">"${quote.text || quote.content || ''}"</div>
                        <div class="quote-card__author">‚Äî ${quote.author || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä'}</div>
                        <div class="quote-card__meta">
                            <span class="quote-card__date">${this.formatDate(quote.createdAt || quote.date)}</span>
                            <button class="quote-card__add-btn" 
                                    data-quote-id="${quote.id || index}"
                                    data-quote-text="${(quote.text || quote.content || '').replace(/"/g, '&quot;')}"
                                    data-quote-author="${(quote.author || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä').replace(/"/g, '&quot;')}"
                                    style="min-height: var(--touch-target-min);"
                                    aria-label="–î–æ–±–∞–≤–∏—Ç—å —Ü–∏—Ç–∞—Ç—É –≤ –¥–Ω–µ–≤–Ω–∏–∫">
                                <span class="add-icon">+</span>
                            </button>
                        </div>
                    </div>
                </div>
            `;
        }).join('');
        
        return `
            <div class="latest-quotes-section">
                <div class="mvp-community-title">üí´ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</div>
                <div class="quotes-grid">
                    ${quotesCards}
                </div>
            </div>
        `;
    }
    
    /**
     * üìö –°–ï–ö–¶–ò–Ø "–°–ï–ô–ß–ê–° –ò–ó–£–ß–ê–Æ–¢" (–û–ë–ù–û–í–õ–ï–ù–û: –ü–û–ö–ê–ó–´–í–ê–ï–¢ –ü–û–°–õ–ï–î–ù–ò–ï –ö–õ–ò–ö–ò –ü–û –ö–ê–¢–ê–õ–û–ì–£)
     */
    renderCurrentlyStudyingSection() {
        if (this.loadingStates.recentClicks) {
            return `
                <div class="mvp-community-item">
                    <div class="mvp-community-title">üìö –°–µ–π—á–∞—Å –∏–∑—É—á–∞—é—Ç</div>
                    <div class="loading-state">
                        <div class="loading-spinner"></div>
                        <div class="loading-text">–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∞–∑–±–æ—Ä—ã...</div>
                    </div>
                </div>
            `;
        }

        if (this.errorStates.recentClicks) {
            return `
                <div class="error-state">
                    <div class="error-icon">‚ùå</div>
                    <div class="error-title">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</div>
                    <div class="error-description">${this.errorStates.recentClicks}</div>
                    <button class="error-retry-btn" data-retry="recent-clicks" style="min-height: var(--touch-target-min);">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
                </div>
            `;
        }

        if (!this.recentClicks || this.recentClicks.length === 0) {
            return `
                <div class="mvp-community-item">
                    <div class="mvp-community-title">üìö –°–µ–π—á–∞—Å –∏–∑—É—á–∞—é—Ç</div>
                    <div class="mvp-community-text">–ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</div>
                    <div class="mvp-community-author">–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è</div>
                </div>
            `;
        }
        
        const recentClicksCards = this.recentClicks.slice(0, 3).map((click, index) => `
            <div class="currently-studying-item" data-book-id="${click.book?.id || click.bookId || click.id}" style="margin-bottom: var(--spacing-sm); min-height: var(--touch-target-min);">
                <div class="studying-rank">${index + 1}</div>
                <div class="studying-content">
                    <div class="studying-title">${click.book?.title || click.bookTitle || click.title || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–Ω–∏–≥–∞'}</div>
                    <div class="studying-author">${click.book?.author || click.bookAuthor || click.author || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä'}</div>
                    <div class="studying-stats">${this.formatClickTime(click.timestamp || click.clickTime || click.createdAt)}</div>
                </div>
            </div>
        `).join('');
        
        return `
            <div class="currently-studying-section">
                <div class="mvp-community-title">üìö –°–µ–π—á–∞—Å –∏–∑—É—á–∞—é—Ç</div>
                <div class="currently-studying-list">
                    ${recentClicksCards}
                </div>
            </div>
        `;
    }
    
    /**
     * üí¨ –°–ï–ö–¶–ò–Ø –°–û–û–ë–©–ï–ù–ò–Ø –û–¢ –ê–ù–ù–´ (–ù–û–í–ê–Ø –° API –ò FALLBACK)
     */
    renderAnnaMessageSection() {
        const message = this.communityMessage || {
            text: "–î–æ—Ä–æ–≥–∏–µ —á–∏—Ç–∞—Ç–µ–ª–∏! –í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–æ–±–∏—Ä–∞—Ç—å –º—É–¥—Ä–æ—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!",
            time: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥"
        };

        return `
            <div class="anna-message-block">
                <div class="anna-message-header">üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ê–Ω–Ω—ã</div>
                <div class="anna-message-text">"${message.text}"</div>
                <div class="anna-message-time">${message.time}</div>
            </div>
        `;
    }

    /**
     * üìà –°–ï–ö–¶–ò–Ø –¢–†–ï–ù–î–ê –ù–ï–î–ï–õ–ò (–ù–û–í–ê–Ø –° API –ò FALLBACK)
     */
    renderTrendSection() {
        const trend = this.communityTrend || {
            title: "–¢—Ä–µ–Ω–¥ –Ω–µ–¥–µ–ª–∏",
            text: '–¢–µ–º–∞ "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π" –Ω–∞–±–∏—Ä–∞–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å',
            buttonText: "–ò–∑—É—á–∏—Ç—å —Ä–∞–∑–±–æ—Ä—ã"
        };

        return `
            <div class="promo-section">
                <div class="promo-title">üéØ ${trend.title}</div>
                <div class="promo-text">${trend.text}</div>
                <button class="promo-btn" 
                        id="exploreBtn"
                        style="min-height: var(--touch-target-min);">
                    ${trend.buttonText}
                </button>
            </div>
        `;
    }
    
    /**
     * üèÜ –¢–ê–ë –¢–û–ü –ù–ï–î–ï–õ–ò (–û–ë–ù–û–í–õ–ï–ù –î–õ–Ø PR-3 - –¢–û–õ–¨–ö–û –ü–û–ü–£–õ–Ø–†–ù–´–ï –†–ê–ó–ë–û–†–´ –ù–ï–î–ï–õ–ò!)
     */
    renderTopTab() {
        // –¢–æ–ª—å–∫–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–Ω–∏–≥–∏ –Ω–µ–¥–µ–ª–∏ (–±–µ–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–ª–∏–∫–æ–≤)
        const popularBooksSection = this.renderPopularBooksSection();

        return `
            <div class="community-stats-grid">
                <div class="community-stat-card">
                    <div class="community-stat-number">${this.communityData.activeReaders}</div>
                    <div class="community-stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∏—Ç–∞—Ç–µ–ª–µ–π</div>
                </div>
                <div class="community-stat-card">
                    <div class="community-stat-number">${this.communityData.newQuotes}</div>
                    <div class="community-stat-label">–ù–æ–≤—ã—Ö —Ü–∏—Ç–∞—Ç</div>
                </div>
            </div>
            
            ${popularBooksSection}
            
            <div class="user-progress-section">
                <div class="progress-header">üéØ –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ —Ç–æ–ø–∞—Ö</div>
                <div class="progress-stats">üëë –ß–∏—Ç–∞—Ç–µ–ª–∏: #2 –º–µ—Å—Ç–æ ‚Ä¢ ‚≠ê –¶–∏—Ç–∞—Ç—ã: —Ç–æ–ø-5 ‚Ä¢ üìö –ò–Ω—Ç–µ—Ä–µ—Å –∫ —Ä–∞–∑–±–æ—Ä–∞–º: –∞–∫—Ç–∏–≤–Ω—ã–π</div>
                <div class="progress-bar-white">
                    <div class="progress-fill-white" style="width: 78%;"></div>
                </div>
                <div class="progress-description">–î–æ–±–∞–≤—å—Ç–µ –µ—â–µ 5 —Ü–∏—Ç–∞—Ç –¥–æ –ª–∏–¥–µ—Ä—Å—Ç–≤–∞!</div>
            </div>
        `;
    }

    /**
     * üèÜ –°–ï–ö–¶–ò–Ø –õ–ò–î–ï–†–ë–û–†–î–ê (–ù–û–í–ê–Ø –î–õ–Ø PR-3)
     */
    renderLeaderboardSection() {
        if (this.loadingStates.leaderboard) {
            return `
                <div class="leaders-week-section">
                    <div class="leaders-week-title">üèÜ –õ–∏–¥–µ—Ä—ã –Ω–µ–¥–µ–ª–∏</div>
                    <div class="loading-state">
                        <div class="loading-spinner"></div>
                        <div class="loading-text">–ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∏–¥–µ—Ä–±–æ—Ä–¥...</div>
                    </div>
                </div>
            `;
        }

        if (this.errorStates.leaderboard) {
            return `
                <div class="error-state">
                    <div class="error-icon">‚ùå</div>
                    <div class="error-title">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞</div>
                    <div class="error-description">${this.errorStates.leaderboard}</div>
                    <button class="error-retry-btn" data-retry="leaderboard" style="min-height: var(--touch-target-min);">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
                </div>
            `;
        }

        if (!this.leaderboard || this.leaderboard.length === 0) {
            return `
                <div class="empty-state">
                    <div class="empty-icon">üèÜ</div>
                    <div class="empty-title">–ü–æ–∫–∞ –Ω–µ—Ç –ª–∏–¥–µ—Ä–æ–≤</div>
                    <div class="empty-description">–°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º –≤ —Ç–æ–ø–µ —á–∏—Ç–∞—Ç–µ–ª–µ–π!</div>
                </div>
            `;
        }

        const leaderboardItems = this.leaderboard.slice(0, 3).map((leader, index) => {
            const rankClass = index === 0 ? 'gold' : index === 1 ? 'silver' : 'bronze';
            return `
                <div class="leaderboard-item">
                    <div class="rank-badge ${rankClass}">${index + 1}</div>
                    <div class="user-info">
                        <div class="user-name">${leader.name || '–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∏—Ç–∞—Ç–µ–ª—å'}</div>
                        <div class="user-stats">${leader.quotesCount || 0} —Ü–∏—Ç–∞—Ç –∑–∞ –Ω–µ–¥–µ–ª—é</div>
                        <div class="user-achievement">${leader.achievement || 'üìö "–ê–∫—Ç–∏–≤–Ω—ã–π —á–∏—Ç–∞—Ç–µ–ª—å"'}</div>
                    </div>
                </div>
            `;
        }).join('');

        return `
            <div class="leaders-week-section">
                <div class="leaders-week-title">üèÜ –õ–∏–¥–µ—Ä—ã –Ω–µ–¥–µ–ª–∏</div>
                <div class="leaders-week-subtitle">–°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∏—Ç–∞—Ç–µ–ª–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</div>
            </div>
            ${leaderboardItems}
        `;
    }

    /**
     * ‚≠ê –°–ï–ö–¶–ò–Ø –ü–û–ü–£–õ–Ø–†–ù–´–• –¶–ò–¢–ê–¢ (–ù–û–í–ê–Ø –î–õ–Ø PR-3)
     */
    renderPopularQuotesSection() {
        if (this.loadingStates.popularQuotes) {
            return `
                <div class="popular-quotes-section">
                    <div class="popular-quotes-title">‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –Ω–µ–¥–µ–ª–∏</div>
                    <div class="loading-state">
                        <div class="loading-spinner"></div>
                        <div class="loading-text">–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã...</div>
                    </div>
                </div>
            `;
        }

        if (this.errorStates.popularQuotes) {
            return `
                <div class="error-state">
                    <div class="error-icon">‚ùå</div>
                    <div class="error-title">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–∏—Ç–∞—Ç</div>
                    <div class="error-description">${this.errorStates.popularQuotes}</div>
                    <button class="error-retry-btn" data-retry="popular-quotes" style="min-height: var(--touch-target-min);">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
                </div>
            `;
        }

        if (!this.popularQuotes || this.popularQuotes.length === 0) {
            return `
                <div class="empty-state">
                    <div class="empty-icon">‚≠ê</div>
                    <div class="empty-title">–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ü–∏—Ç–∞—Ç</div>
                    <div class="empty-description">–î–æ–±–∞–≤–ª—è–π—Ç–µ —Ü–∏—Ç–∞—Ç—ã —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ!</div>
                </div>
            `;
        }

        const quotesItems = this.popularQuotes.slice(0, 3).map(quote => `
            <div class="quote-item">
                <div class="quote-text">"${quote.text}"</div>
                <div class="quote-meta">${quote.author} ‚Ä¢ –¥–æ–±–∞–≤–∏–ª–∏ ${quote.count || 0} —á–µ–ª–æ–≤–µ–∫</div>
            </div>
        `).join('');

        return `
            <div class="popular-quotes-section">
                <div class="popular-quotes-title">‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –Ω–µ–¥–µ–ª–∏</div>
                ${quotesItems}
            </div>
        `;
    }

    /**
     * üìö –°–ï–ö–¶–ò–Ø –ü–û–ü–£–õ–Ø–†–ù–´–• –ö–ù–ò–ì (–ù–û–í–ê–Ø –î–õ–Ø PR-3)
     */
    renderPopularBooksSection() {
        if (this.loadingStates.popularBooks) {
            return `
                <div class="popular-books-section">
                    <div class="popular-books-title">üìö –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –Ω–µ–¥–µ–ª–∏</div>
                    <div class="loading-state">
                        <div class="loading-spinner"></div>
                        <div class="loading-text">–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–Ω–∏–≥–∏...</div>
                    </div>
                </div>
            `;
        }

        if (this.errorStates.popularBooks) {
            return `
                <div class="error-state">
                    <div class="error-icon">‚ùå</div>
                    <div class="error-title">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥</div>
                    <div class="error-description">${this.errorStates.popularBooks}</div>
                    <button class="error-retry-btn" data-retry="popular-books" style="min-height: var(--touch-target-min);">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
                </div>
            `;
        }

        if (!this.popularBooks || this.popularBooks.length === 0) {
            return `
                <div class="empty-state">
                    <div class="empty-icon">üìö</div>
                    <div class="empty-title">–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–Ω–∏–≥</div>
                    <div class="empty-description">–ò–∑—É—á–∞–π—Ç–µ —Ä–∞–∑–±–æ—Ä—ã —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ!</div>
                </div>
            `;
        }

        const booksItems = this.popularBooks.slice(0, 3).map((book, index) => `
            <div class="book-item">
                <div class="book-title-line">${index + 1}. "${book.title}" ${book.author}</div>
                <div class="book-interest-line">üí´ ${book.clicksCount || 0} —á–µ–ª–æ–≤–µ–∫ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–æ—Å—å</div>
            </div>
        `).join('');

        return `
            <div class="popular-books-section">
                <div class="popular-books-title">üìö –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –Ω–µ–¥–µ–ª–∏</div>
                ${booksItems}
            </div>
        `;
    }
    
    /**
     * üìä –¢–ê–ë –°–¢–ê–¢–ò–°–¢–ò–ö–ê (–ò–ó –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ì–û –ö–û–ù–¶–ï–ü–¢–ê!)
     */
    renderStatsTab() {
        return `
            <div class="community-stats-overview">
                <div class="community-stats-title">üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</div>
                <div class="community-stats-2x2-grid">
                    <div class="community-stat-big">
                        <div class="community-stat-value">${this.communityData.totalReaders.toLocaleString()}</div>
                        <div class="community-stat-small-label">–í—Å–µ–≥–æ —á–∏—Ç–∞—Ç–µ–ª–µ–π</div>
                    </div>
                    <div class="community-stat-big">
                        <div class="community-stat-value">${this.communityData.totalQuotes.toLocaleString()}</div>
                        <div class="community-stat-small-label">–¶–∏—Ç–∞—Ç —Å–æ–±—Ä–∞–Ω–æ</div>
                    </div>
                    <div class="community-stat-big">
                        <div class="community-stat-value">${this.communityData.totalAuthors}</div>
                        <div class="community-stat-small-label">–ê–≤—Ç–æ—Ä–æ–≤</div>
                    </div>
                    <div class="community-stat-big">
                        <div class="community-stat-value">${this.communityData.daysActive}</div>
                        <div class="community-stat-small-label">–î–Ω–µ–π —Ä–∞–±–æ—Ç—ã</div>
                    </div>
                </div>
            </div>
            
            <div class="stats-detail-section">
                <div class="stats-detail-title">üìö –ò–Ω—Ç–µ—Ä–µ—Å –∫ —Ä–∞–∑–±–æ—Ä–∞–º</div>
                <div class="stats-detail-item">üî• –õ–∏–¥–µ—Ä –Ω–µ–¥–µ–ª–∏: "–ò—Å–∫—É—Å—Å—Ç–≤–æ –ª—é–±–∏—Ç—å"</div>
                <div class="stats-detail-item">üìà –†–æ—Å—Ç –∏–Ω—Ç–µ—Ä–µ—Å–∞: +23% –∫ –ø—Ä–æ—à–ª–æ–π –Ω–µ–¥–µ–ª–µ</div>
                <div class="stats-detail-item">üìñ –ê–∫—Ç–∏–≤–Ω–æ –∏–∑—É—á–∞—é—Ç 12 —Ä–∞–∑–±–æ—Ä–æ–≤</div>
            </div>
            
            <div class="stats-detail-section">
                <div class="stats-detail-title">‚úçÔ∏è –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–≤—Ç–æ—Ä—ã –≤ —Ü–∏—Ç–∞—Ç–∞—Ö</div>
                <div class="stats-detail-item">1. –≠—Ä–∏—Ö –§—Ä–æ–º–º ‚Äî 89 —Ü–∏—Ç–∞—Ç</div>
                <div class="stats-detail-item">2. –ê–Ω–Ω–∞ –ë—É—Å–µ–ª ‚Äî 67 —Ü–∏—Ç–∞—Ç</div>
                <div class="stats-detail-item">3. –ú–∞—Ä–∏–Ω–∞ –¶–≤–µ—Ç–∞–µ–≤–∞ ‚Äî 45 —Ü–∏—Ç–∞—Ç</div>
                <div class="stats-detail-item">4. –ë—É–¥–¥–∞ ‚Äî 34 —Ü–∏—Ç–∞—Ç—ã</div>
                <div class="stats-detail-item">5. –û—à–æ ‚Äî 29 —Ü–∏—Ç–∞—Ç</div>
            </div>
            
            <div class="stats-detail-section">
                <div class="stats-detail-title">üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</div>
                <div class="stats-detail-item">üî• "–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä –º—É–¥—Ä–æ—Å—Ç–∏" ‚Äî 23 —á–µ–ª–æ–≤–µ–∫–∞</div>
                <div class="stats-detail-item">üìö "–§–∏–ª–æ—Å–æ—Ñ –Ω–µ–¥–µ–ª–∏" ‚Äî 15 —á–µ–ª–æ–≤–µ–∫</div>
                <div class="stats-detail-item">üíé "–ú—ã—Å–ª–∏—Ç–µ–ª—å" ‚Äî 11 —á–µ–ª–æ–≤–µ–∫</div>
                <div class="stats-detail-item">üìñ "–õ—é–±–∏—Ç–µ–ª—å –∫–ª–∞—Å—Å–∏–∫–∏" ‚Äî 8 —á–µ–ª–æ–≤–µ–∫</div>
                <div class="stats-detail-item">‚≠ê "–í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å" ‚Äî 3 —á–µ–ª–æ–≤–µ–∫–∞</div>
            </div>
            
            <div class="user-rating-section">
                <div class="user-rating-title">üìä –í–∞—à —Ä–µ–π—Ç–∏–Ω–≥</div>
                <div class="user-rating-grid">
                    <div class="user-rating-item">
                        <div class="user-rating-value">#2</div>
                        <div class="user-rating-label">–ú–µ—Å—Ç–æ –≤ —Ç–æ–ø–µ</div>
                    </div>
                    <div class="user-rating-item">
                        <div class="user-rating-value">78%</div>
                        <div class="user-rating-label">–ê–∫—Ç–∏–≤–Ω–µ–µ –¥—Ä—É–≥–∏—Ö</div>
                    </div>
                </div>
            </div>
            
            <div class="fact-section">
                <div class="fact-title">‚ú® –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç</div>
                <div class="fact-text">–¶–∏—Ç–∞—Ç—ã –≠—Ä–∏—Ö–∞ –§—Ä–æ–º–º–∞ —á–∞—â–µ –≤—Å–µ–≥–æ –¥–æ–±–∞–≤–ª—è—é—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ!</div>
            </div>
        `;
    }
    
    /**
     * üéØ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô (–û–ë–ù–û–í–õ–ï–ù –î–õ–Ø PR-3)
     */
    attachEventListeners() {
        this.attachTabListeners();
        this.attachExploreButton();
        this.attachCurrentlyStudyingListeners();
        this.attachCommunityCardListeners(); // ‚úÖ –ù–û–í–û–ï: Haptic feedback –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
        this.attachRetryButtons(); // ‚úÖ –ù–û–í–û–ï PR-3
        this.attachQuoteCardListeners(); // ‚úÖ –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ü–∏—Ç–∞—Ç
        this.setupQuoteChangeListeners();
    }

    /**
     * üí¨ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –ö–ê–†–¢–û–ß–ï–ö –¶–ò–¢–ê–¢ (–ù–û–í–û–ï –î–õ–Ø PR-3)
     */
    attachQuoteCardListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç
        const addButtons = document.querySelectorAll('.quote-card__add-btn');
        addButtons.forEach(button => {
            button.addEventListener('click', (event) => {
                this.addQuoteToJournal(event);
            });
        });
    }
    
    /**
     * üì≥ –ï–î–ò–ù–´–ô –ú–ï–¢–û–î –î–õ–Ø HAPTIC FEEDBACK
     * @param {string} type - –¢–∏–ø –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: 'light', 'medium', 'heavy', 'success', 'error'
     */
    triggerHapticFeedback(type = 'light') {
        if (this.telegram?.HapticFeedback) {
            switch (type) {
                case 'light':
                    this.telegram.HapticFeedback.impactOccurred('light');
                    break;
                case 'medium':
                    this.telegram.HapticFeedback.impactOccurred('medium');
                    break;
                case 'heavy':
                    this.telegram.HapticFeedback.impactOccurred('heavy');
                    break;
                case 'success':
                    this.telegram.HapticFeedback.notificationOccurred('success');
                    break;
                case 'error':
                    this.telegram.HapticFeedback.notificationOccurred('error');
                    break;
                case 'warning':
                    this.telegram.HapticFeedback.notificationOccurred('warning');
                    break;
            }
        }
    }

    attachTabListeners() {
        const tabs = document.querySelectorAll('.tab[data-tab]');
        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                const tabName = tab.dataset.tab;
                this.switchTab(tabName);
            });
        });
    }

    attachExploreButton() {
        const exploreBtn = document.getElementById('exploreBtn');
        if (exploreBtn) {
            exploreBtn.addEventListener('click', () => {
                this.triggerHapticFeedback('medium');
                this.app.router.navigate('/catalog');
            });
        }
    }

    /**
     * üìö –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–ï–ö–¶–ò–ò "–°–ï–ô–ß–ê–° –ò–ó–£–ß–ê–Æ–¢" –° HAPTIC FEEDBACK
     */
    attachCurrentlyStudyingListeners() {
        const studyingItems = document.querySelectorAll('.currently-studying-item');
        studyingItems.forEach(item => {
            // –î–æ–±–∞–≤–ª—è–µ–º haptic feedback –Ω–∞ –∫–∞—Å–∞–Ω–∏–µ
            item.addEventListener('touchstart', () => {
                this.triggerHapticFeedback('light');
            }, { passive: true });
            
            item.addEventListener('click', () => {
                this.triggerHapticFeedback('medium');
                const bookId = item.dataset.bookId;
                if (bookId) {
                    // Navigate to catalog with selected book
                    this.app.router.navigate(`/catalog?book=${bookId}`);
                }
            });
        });
    }
    
    /**
     * üéØ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò COMMUNITY –ö–ê–†–¢–û–ß–ï–ö –° –£–õ–£–ß–®–ï–ù–ù–´–ú HAPTIC FEEDBACK
     */
    attachCommunityCardListeners() {
        // –ö–∞—Ä—Ç–æ—á–∫–∏ —Ü–∏—Ç–∞—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
        const communityItems = document.querySelectorAll('.mvp-community-item');
        communityItems.forEach(item => {
            // Haptic feedback –Ω–∞ –∫–∞—Å–∞–Ω–∏–µ
            item.addEventListener('touchstart', () => {
                this.triggerHapticFeedback('light');
            }, { passive: true });
            
            // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            item.addEventListener('click', () => {
                this.triggerHapticFeedback('medium');
                // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
            });
        });
        
        // –ö–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        const statCards = document.querySelectorAll('.community-stat-card');
        statCards.forEach(card => {
            card.addEventListener('touchstart', () => {
                this.triggerHapticFeedback('light');
            }, { passive: true });
        });
        
        // –≠–ª–µ–º–µ–Ω—Ç—ã –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        const leaderboardItems = document.querySelectorAll('.leaderboard-item');
        leaderboardItems.forEach(item => {
            item.addEventListener('touchstart', () => {
                this.triggerHapticFeedback('light');
            }, { passive: true });
            
            item.addEventListener('click', () => {
                this.triggerHapticFeedback('medium');
                // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
            });
        });
    }

    /**
     * üîÑ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ù–û–ü–û–ö –ü–û–í–¢–û–†–ê (–ù–û–í–û–ï –î–õ–Ø PR-3)
     */
    attachRetryButtons() {
        // –ï–¥–∏–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –ø–æ–≤—Ç–æ—Ä–∞ —Å data-retry –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏
        const retryButtons = document.querySelectorAll('[data-retry]');
        retryButtons.forEach(button => {
            button.addEventListener('click', (event) => {
                event.preventDefault();
                this.triggerHapticFeedback('medium');
                
                const retryType = button.dataset.retry;
                switch (retryType) {
                    case 'latest-quotes':
                        this.retryLoadLatestQuotes();
                        break;
                    case 'recent-clicks':
                        this.retryLoadRecentClicks();
                        break;
                    case 'popular-books':
                        this.retryLoadPopularBooks();
                        break;
                    case 'popular-quotes':
                        this.retryLoadPopularQuotes();
                        break;
                    case 'leaderboard':
                        this.retryLoadLeaderboard();
                        break;
                    default:
                        // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ
                        this.loadAllSections();
                        break;
                }
            });
        });
    }
    
    /**
     * üîÑ –ù–ê–°–¢–†–û–ô–ö–ê –°–õ–£–®–ê–¢–ï–õ–ï–ô –ò–ó–ú–ï–ù–ï–ù–ò–ô –¶–ò–¢–ê–¢
     */
    setupQuoteChangeListeners() {
        // Listen for quote changes to refresh community data
        if (typeof document !== 'undefined') {
            const handleQuoteChange = (event) => {
                console.log('üë• CommunityPage: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ quotes:changed:', event.detail);
                // Refresh top analyses when quotes change
                this.loadTopAnalyses().then(() => {
                    this.rerender();
                });
            };
            
            // Remove existing listener to avoid duplicates
            document.removeEventListener('quotes:changed', handleQuoteChange);
            document.addEventListener('quotes:changed', handleQuoteChange);
            
            // Store reference for cleanup
            this._quoteChangeHandler = handleQuoteChange;
        }
    }
    
    switchTab(tabName) {
        this.activeTab = tabName;
        this.triggerHapticFeedback('light');
        this.rerender();
    }
    
    /**
     * üì± LIFECYCLE –ú–ï–¢–û–î–´ - –û–ë–ù–û–í–õ–ï–ù –î–õ–Ø PR-3!
     */
    async onShow() {
        console.log('üë• CommunityPage: onShow - –ë–ï–ó –®–ê–ü–ö–ò!');
        
        // ‚úÖ –ù–û–í–û–ï: –í—ã–∑–æ–≤ warmupInitialStats –ø—Ä–∏ –≤—Ö–æ–¥–µ –Ω–∞ —ç–∫—Ä–∞–Ω
        if (this.statisticsService && typeof this.statisticsService.warmupInitialStats === 'function') {
            try {
                await this.statisticsService.warmupInitialStats();
                console.log('‚úÖ CommunityPage: warmupInitialStats completed');
            } catch (error) {
                console.warn('‚ö†Ô∏è CommunityPage: warmupInitialStats failed:', error);
            }
        }
        
        // ‚úÖ –ù–û–í–û–ï PR-3: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö —Å–µ–∫—Ü–∏–π
        await this.loadAllSections();
        
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–º–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞–∫ –≤ HomePage
        if (!this.communityLoaded) {
            console.log('üîÑ CommunityPage: –ü–µ—Ä–≤—ã–π –ø–æ–∫–∞–∑, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ');
            this.loadCommunityData().then(() => {
                this.rerender();
            });
        } else {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö (10 –º–∏–Ω—É—Ç)
            const lastUpdate = this.state.get('community.lastUpdate');
            const now = Date.now();
            const tenMinutes = 10 * 60 * 1000;
            
            if (!lastUpdate || (now - lastUpdate) > tenMinutes) {
                console.log('üîÑ CommunityPage: –î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏, –æ–±–Ω–æ–≤–ª—è–µ–º');
                this.loadCommunityData().then(() => {
                    this.rerender();
                });
            } else {
                console.log('‚úÖ CommunityPage: –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã');
                this.rerender(); // Rerender to show loaded data
            }
        }
    }

    /**
     * üîÑ –ó–ê–ì–†–£–ó–ö–ê –í–°–ï–• –°–ï–ö–¶–ò–ô (–û–ë–ù–û–í–õ–ï–ù–ê –î–õ–Ø PR-3)
     */
    async loadAllSections() {
        console.log('üîÑ CommunityPage: –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏...');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        const loadPromises = [
            this.loadLatestQuotes(3), // –¢–æ–ª—å–∫–æ 3 —Ü–∏—Ç–∞—Ç—ã —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
            this.loadPopularBooks('7d', 10), // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –Ω–µ–¥–µ–ª–∏ –¥–ª—è "–¢–æ–ø –Ω–µ–¥–µ–ª–∏"
            this.loadRecentClicks(3), // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∫–ª–∏–∫–∞ –¥–ª—è "–°–µ–π—á–∞—Å –∏–∑—É—á–∞—é—Ç"
            this.loadCommunityMessage(), // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ê–Ω–Ω—ã
            this.loadCommunityTrend() // –¢—Ä–µ–Ω–¥ –Ω–µ–¥–µ–ª–∏
        ];

        try {
            await Promise.allSettled(loadPromises);
            console.log('‚úÖ CommunityPage: –í—Å–µ —Å–µ–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            this.rerender();
        } catch (error) {
            console.error('‚ùå CommunityPage: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ–∫—Ü–∏–π:', error);
            this.rerender(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
        }
    }

    /**
     * üîÑ –ú–ï–¢–û–î–´ –ü–û–í–¢–û–†–ê –ó–ê–ì–†–£–ó–ö–ò –î–õ–Ø –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö (PR-3)
     */
    retryLoadLatestQuotes() {
        this.triggerHapticFeedback('medium');
        this.loadLatestQuotes(5).then(() => this.rerender());
    }

    retryLoadPopularQuotes() {
        this.triggerHapticFeedback('medium');
        this.loadPopularQuotes('7d', 10).then(() => this.rerender());
    }

    retryLoadPopularBooks() {
        this.triggerHapticFeedback('medium');
        this.loadPopularBooks('7d', 10).then(() => this.rerender());
    }

    retryLoadLeaderboard() {
        this.triggerHapticFeedback('medium');
        this.loadLeaderboard(10).then(() => this.rerender());
    }

    retryLoadRecentClicks() {
        this.triggerHapticFeedback('medium');
        this.loadRecentClicks(5).then(() => this.rerender());
    }

    /**
     * ‚ûï –î–û–ë–ê–í–ò–¢–¨ –¶–ò–¢–ê–¢–£ –í –î–ù–ï–í–ù–ò–ö (–ù–û–í–û–ï –î–õ–Ø PR-3)
     */
    async addQuoteToJournal(event) {
        event.preventDefault();
        event.stopPropagation();
        
        const button = event.target.closest('.quote-card__add-btn');
        if (!button) return;
        
        const quoteId = button.dataset.quoteId;
        const quoteCard = button.closest('.quote-card');
        
        if (!quoteCard) return;
        
        try {
            // Haptic feedback
            this.triggerHapticFeedback('medium');
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∏–∑ data-–∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∏–ª–∏ –∏–∑ DOM
            const quoteText = button.dataset.quoteText || quoteCard.querySelector('.quote-card__text')?.textContent?.replace(/"/g, '') || '';
            const quoteAuthor = button.dataset.quoteAuthor || quoteCard.querySelector('.quote-card__author')?.textContent?.replace('‚Äî ', '') || '';
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            button.innerHTML = '<span class="loading-spinner-small"></span>';
            button.disabled = true;
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ü–∏—Ç–∞—Ç—É —á–µ—Ä–µ–∑ API
            const response = await this.api.addQuote({
                text: quoteText,
                author: quoteAuthor,
                source: 'community'
            });
            
            if (response && response.success) {
                // –£—Å–ø–µ—Ö - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É
                button.innerHTML = '<span class="add-icon">‚úì</span>';
                button.classList.add('added');
                this.triggerHapticFeedback('success');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                this.showNotification('–¶–∏—Ç–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –≤–∞—à –¥–Ω–µ–≤–Ω–∏–∫!', 'success');
                
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    button.innerHTML = '<span class="add-icon">+</span>';
                    button.classList.remove('added');
                    button.disabled = false;
                }, 2000);
            } else {
                throw new Error(response?.message || '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã:', error);
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            button.innerHTML = '<span class="add-icon">+</span>';
            button.disabled = false;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ü–∏—Ç–∞—Ç—ã', 'error');
            this.triggerHapticFeedback('error');
        }
    }

    /**
     * üéØ –ò–ó–£–ß–ò–¢–¨ –¢–†–ï–ù–î (–ù–û–í–û–ï –î–õ–Ø PR-3)
     */
    exploreTrend(event) {
        event.preventDefault();
        this.triggerHapticFeedback('medium');
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∏–∑—É—á–µ–Ω–∏—é —Ç—Ä–µ–Ω–¥–∞
        console.log('üéØ –ò–∑—É—á–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞ –Ω–µ–¥–µ–ª–∏');
        this.showNotification('–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
    }

    /**
     * üîî –ü–û–ö–ê–ó–ê–¢–¨ –£–í–ï–î–û–ú–õ–ï–ù–ò–ï
     */
    showNotification(message, type = 'info') {
        // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.className = `notification notification--${type}`;
        notification.textContent = message;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        document.body.appendChild(notification);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º
        setTimeout(() => notification.classList.add('show'), 100);
        
        // –£–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }

    /**
     * üïí –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ò –ö–õ–ò–ö–ê
     */
    formatClickTime(clickTime) {
        if (!clickTime) return '–Ω–µ–¥–∞–≤–Ω–æ';
        
        try {
            const now = new Date();
            const clickDate = new Date(clickTime);
            const diffMs = now - clickDate;
            const diffMins = Math.floor(diffMs / (1000 * 60));
            const diffHours = Math.floor(diffMs / (1000 * 60 * 60));
            const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
            
            if (diffMins < 60) {
                return `${diffMins} –º–∏–Ω –Ω–∞–∑–∞–¥`;
            } else if (diffHours < 24) {
                return `${diffHours} —á –Ω–∞–∑–∞–¥`;
            } else if (diffDays < 7) {
                return `${diffDays} –¥–Ω –Ω–∞–∑–∞–¥`;
            } else {
                return clickDate.toLocaleDateString('ru-RU');
            }
        } catch (error) {
            return '–Ω–µ–¥–∞–≤–Ω–æ';
        }
    }

    /**
     * üìÖ –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –î–ê–¢–´
     */
    formatDate(date) {
        if (!date) return '';
        
        try {
            const dateObj = new Date(date);
            const now = new Date();
            const diffMs = now - dateObj;
            const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
            
            if (diffDays === 0) {
                return '—Å–µ–≥–æ–¥–Ω—è';
            } else if (diffDays === 1) {
                return '–≤—á–µ—Ä–∞';
            } else if (diffDays < 7) {
                return `${diffDays} –¥–Ω –Ω–∞–∑–∞–¥`;
            } else {
                return dateObj.toLocaleDateString('ru-RU');
            }
        } catch (error) {
            return '';
        }
    }
    
    onHide() {
        console.log('üë• CommunityPage: onHide');
        // Cleanup event listeners
        if (this._quoteChangeHandler) {
            document.removeEventListener('quotes:changed', this._quoteChangeHandler);
        }
    }

    rerender() {
        const container = document.getElementById('page-content');
        if (container) {
            container.innerHTML = this.render();
            this.attachEventListeners();
            
            // ‚úÖ –ù–û–í–û–ï: –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ CSS –∫–ª–∞—Å—Å—ã
            this.triggerContentAnimations();
        }
    }
    
    /**
     * üé¨ –ü–õ–ê–í–ù–´–ï –ê–ù–ò–ú–ê–¶–ò–ò –ü–û–Ø–í–õ–ï–ù–ò–Ø –ß–ï–†–ï–ó CSS –ö–õ–ê–°–°–´
     */
    triggerContentAnimations() {
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
        const contentContainer = document.querySelector('.content');
        if (!contentContainer) return;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π
        setTimeout(() => {
            contentContainer.classList.add('animate-content');
        }, 50); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
        setTimeout(() => {
            contentContainer.classList.remove('animate-content');
        }, 1000);
    }

    /**
     * üßπ –û–ß–ò–°–¢–ö–ê –†–ï–°–£–†–°–û–í
     */
    destroy() {
        console.log('üßπ CommunityPage: –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤');
        // Remove event listeners
        if (this._quoteChangeHandler) {
            document.removeEventListener('quotes:changed', this._quoteChangeHandler);
            this._quoteChangeHandler = null;
        }

        // ‚úÖ –ù–û–í–û–ï: –°–±—Ä–æ—Å —Ñ–ª–∞–≥–æ–≤
        this.communityLoaded = false;
        this.communityLoading = false;

        // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–∞–≥—Ä—É–∑–∫–∏
        Object.keys(this.loadingStates).forEach(key => {
            this.loadingStates[key] = false;
        });

        // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –æ—à–∏–±–æ–∫
        Object.keys(this.errorStates).forEach(key => {
            this.errorStates[key] = null;
        });
    }
}

// üì§ –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞
window.CommunityPage = CommunityPage;