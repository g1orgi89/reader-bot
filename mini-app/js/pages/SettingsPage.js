/**
 * ‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò - SettingsPage.js
 * 
 * –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 * - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * - –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 * - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
 * - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –∏ State Management
 * - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—É
 */

class SettingsPage {
    constructor(app) {
        this.app = app;
        this.api = app.api;
        this.state = app.state;
        this.telegram = app.telegram;
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        this.loading = false;
        this.error = null;
        this.settings = {};
        this.saving = false;
        
        // –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        this.subscriptions = [];
        
        this.init();
    }
    
    /**
     * üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    init() {
        this.setupSubscriptions();
        this.loadSettings();
    }
    
    /**
     * üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    setupSubscriptions() {
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        const settingsSubscription = this.state.subscribe('settings', (settings) => {
            this.settings = { ...this.settings, ...settings };
            this.updateSettingsUI();
        });
        
        this.subscriptions.push(settingsSubscription);
    }
    
    /**
     * üìä –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    async loadSettings() {
        if (this.loading) return;
        
        try {
            this.loading = true;
            
            // Load from local state first
            this.settings = this.state.get('settings') || this.getDefaultSettings();
            
            const userId = this.state.getCurrentUserId();
            if (!userId || userId === 'demo-user') {
                return;
            }
            
            // Load from API if available
            try {
                const serverSettings = await this.api.getSettings(userId);
                if (serverSettings) {
                    this.settings = { ...this.settings, ...serverSettings };
                    this.state.set('settings', this.settings);
                }
            } catch (apiError) {
                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
            this.error = error.message;
        } finally {
            this.loading = false;
        }
    }
    
    /**
     * üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —Ä–∞–∑–º–µ—Ç–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    render() {
        return `
            <div class="content">
                ${this.renderHeader()}
                ${this.renderNotificationSettings()}
                ${this.renderPersonalizationSettings()}
                ${this.renderPrivacySettings()}
                ${this.renderDataSettings()}
                ${this.renderError()}
            </div>
        `;
    }
    
    /**
     * üìã –†–µ–Ω–¥–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    renderHeader() {
        return `
            <div class="page-header">
                <h1>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
                <p>–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤–∞—à –æ–ø—ã—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</p>
            </div>
        `;
    }
    
    /**
     * üîî –†–µ–Ω–¥–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    renderNotificationSettings() {
        return `
            <div class="settings-section">
                <h3>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                
                <div class="setting-item">
                    <div class="setting-info">
                        <h4>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</h4>
                        <p>–ü–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ü–∏—Ç–∞—Ç</p>
                    </div>
                    <div class="form-toggle">
                        <input type="checkbox" id="dailyReminders" ${this.settings.dailyReminders ? 'checked' : ''}>
                        <div class="toggle-switch"></div>
                    </div>
                </div>
                
                <div class="setting-item">
                    <div class="setting-info">
                        <h4>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö</h4>
                        <p>–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –Ω–∞–≥—Ä–∞–¥–∞—Ö</p>
                    </div>
                    <div class="form-toggle">
                        <input type="checkbox" id="achievementNotifications" ${this.settings.achievementNotifications ? 'checked' : ''}>
                        <div class="toggle-switch"></div>
                    </div>
                </div>
                
                <div class="setting-item">
                    <div class="setting-info">
                        <h4>–í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π</h4>
                        <p>–í–æ —Å–∫–æ–ª—å–∫–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</p>
                    </div>
                    <select class="form-select" id="reminderTime">
                        <option value="09:00" ${this.settings.reminderTime === '09:00' ? 'selected' : ''}>09:00</option>
                        <option value="12:00" ${this.settings.reminderTime === '12:00' ? 'selected' : ''}>12:00</option>
                        <option value="18:00" ${this.settings.reminderTime === '18:00' ? 'selected' : ''}>18:00</option>
                        <option value="21:00" ${this.settings.reminderTime === '21:00' ? 'selected' : ''}>21:00</option>
                    </select>
                </div>
            </div>
        `;
    }
    
    /**
     * üé® –†–µ–Ω–¥–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
     */
    renderPersonalizationSettings() {
        return `
            <div class="settings-section">
                <h3>üé® –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è</h3>
                
                <div class="setting-item">
                    <div class="setting-info">
                        <h4>–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</h4>
                        <p>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—É—é —Ç–µ–º—É</p>
                    </div>
                    <select class="form-select" id="theme">
                        <option value="auto" ${this.settings.theme === 'auto' ? 'selected' : ''}>–ö–∞–∫ –≤ —Å–∏—Å—Ç–µ–º–µ</option>
                        <option value="light" ${this.settings.theme === 'light' ? 'selected' : ''}>–°–≤–µ—Ç–ª–∞—è</option>
                        <option value="dark" ${this.settings.theme === 'dark' ? 'selected' : ''}>–¢–µ–º–Ω–∞—è</option>
                    </select>
                </div>
                
                <div class="setting-item">
                    <div class="setting-info">
                        <h4>–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞</h4>
                        <p>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–¥–æ–±–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞</p>
                    </div>
                    <select class="form-select" id="fontSize">
                        <option value="small" ${this.settings.fontSize === 'small' ? 'selected' : ''}>–ú–∞–ª–µ–Ω—å–∫–∏–π</option>
                        <option value="medium" ${this.settings.fontSize === 'medium' ? 'selected' : ''}>–°—Ä–µ–¥–Ω–∏–π</option>
                        <option value="large" ${this.settings.fontSize === 'large' ? 'selected' : ''}>–ë–æ–ª—å—à–æ–π</option>
                    </select>
                </div>
                
                <div class="setting-item">
                    <div class="setting-info">
                        <h4>–ê–Ω–∏–º–∞—Ü–∏–∏</h4>
                        <p>–í–∫–ª—é—á–∏—Ç—å –ø–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏</p>
                    </div>
                    <div class="form-toggle">
                        <input type="checkbox" id="animations" ${this.settings.animations ? 'checked' : ''}>
                        <div class="toggle-switch"></div>
                    </div>
                </div>
            </div>
        `;
    }
    
    /**
     * üîí –†–µ–Ω–¥–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
     */
    renderPrivacySettings() {
        return `
            <div class="settings-section">
                <h3>üîí –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</h3>
                
                <div class="setting-item">
                    <div class="setting-info">
                        <h4>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</h4>
                        <p>–ü–æ–º–æ–≥–∞—Ç—å —É–ª—É—á—à–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏</p>
                    </div>
                    <div class="form-toggle">
                        <input type="checkbox" id="analytics" ${this.settings.analytics ? 'checked' : ''}>
                        <div class="toggle-switch"></div>
                    </div>
                </div>
                
                <div class="setting-item">
                    <div class="setting-info">
                        <h4>–ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å</h4>
                        <p>–†–∞–∑—Ä–µ—à–∏—Ç—å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤–∏–¥–µ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å</p>
                    </div>
                    <div class="form-toggle">
                        <input type="checkbox" id="publicProfile" ${this.settings.publicProfile ? 'checked' : ''}>
                        <div class="toggle-switch"></div>
                    </div>
                </div>
            </div>
        `;
    }
    
    /**
     * üìä –†–µ–Ω–¥–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–∞–Ω–Ω—ã—Ö
     */
    renderDataSettings() {
        return `
            <div class="settings-section">
                <h3>üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏</h3>
                
                <button class="btn btn-secondary btn-block" id="exportDataBtn">
                    üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                </button>
                
                <button class="btn btn-secondary btn-block" id="clearCacheBtn">
                    üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
                </button>
                
                <button class="btn btn-error btn-block" id="deleteAccountBtn">
                    ‚ö†Ô∏è –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                </button>
                
                <div class="setting-info">
                    <small>–≠–∫—Å–ø–æ—Ä—Ç –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –≤–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</small>
                </div>
            </div>
        `;
    }
    
    /**
     * ‚ö†Ô∏è –†–µ–Ω–¥–µ—Ä –æ—à–∏–±–∫–∏
     */
    renderError() {
        if (!this.error) return '';
        
        return `
            <div class="error-message" id="errorMessage">
                <span>‚ö†Ô∏è ${this.error}</span>
                <button onclick="this.parentElement.style.display='none'">‚úï</button>
            </div>
        `;
    }
    
    /**
     * üì± –ù–∞–≤–µ—à–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    attachEventListeners() {
        // Toggle switches
        const toggles = document.querySelectorAll('.form-toggle input[type="checkbox"]');
        toggles.forEach(toggle => {
            toggle.addEventListener('change', (e) => this.handleToggleChange(e));
        });
        
        // Select dropdowns
        const selects = document.querySelectorAll('.form-select');
        selects.forEach(select => {
            select.addEventListener('change', (e) => this.handleSelectChange(e));
        });
        
        // Action buttons
        const exportBtn = document.getElementById('exportDataBtn');
        if (exportBtn) {
            exportBtn.addEventListener('click', () => this.handleExportData());
        }
        
        const clearCacheBtn = document.getElementById('clearCacheBtn');
        if (clearCacheBtn) {
            clearCacheBtn.addEventListener('click', () => this.handleClearCache());
        }
        
        const deleteAccountBtn = document.getElementById('deleteAccountBtn');
        if (deleteAccountBtn) {
            deleteAccountBtn.addEventListener('click', () => this.handleDeleteAccount());
        }
    }
    
    /**
     * üîÑ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π
     */
    handleToggleChange(event) {
        const { id, checked } = event.target;
        
        // Haptic feedback
        if (this.telegram?.hapticFeedback) {
            this.telegram.hapticFeedback('light');
        }
        
        this.updateSetting(id, checked);
    }
    
    /**
     * üìù –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
     */
    handleSelectChange(event) {
        const { id, value } = event.target;
        
        // Haptic feedback
        if (this.telegram?.hapticFeedback) {
            this.telegram.hapticFeedback('light');
        }
        
        this.updateSetting(id, value);
    }
    
    /**
     * üíæ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
     */
    async updateSetting(key, value) {
        try {
            this.settings[key] = value;
            this.state.set(`settings.${key}`, value);
            
            // Save to server if possible
            await this.saveSettings();
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', error);
            this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É');
        }
    }
    
    /**
     * üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
     */
    async saveSettings() {
        if (this.saving) return;
        
        try {
            this.saving = true;
            
            const userId = this.state.getCurrentUserId();
            if (!userId || userId === 'demo-user') {
                return; // Only save locally for demo users
            }
            
            await this.api.saveSettings(userId, this.settings);
            
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', error);
        } finally {
            this.saving = false;
        }
    }
    
    /**
     * üì§ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
     */
    handleExportData() {
        if (this.telegram?.hapticFeedback) {
            this.telegram.hapticFeedback('medium');
        }
        
        // TODO: Implement data export
        if (this.telegram?.showAlert) {
            this.telegram.showAlert('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
        }
    }
    
    /**
     * üóëÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
     */
    async handleClearCache() {
        if (this.telegram?.hapticFeedback) {
            this.telegram.hapticFeedback('medium');
        }
        
        try {
            // Clear local storage cache
            const keys = Object.keys(localStorage);
            keys.forEach(key => {
                if (key.startsWith('reader-bot-')) {
                    localStorage.removeItem(key);
                }
            });
            
            if (this.telegram?.showAlert) {
                this.telegram.showAlert('–ö—ç—à —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞:', error);
            this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à');
        }
    }
    
    /**
     * ‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
     */
    handleDeleteAccount() {
        if (this.telegram?.hapticFeedback) {
            this.telegram.hapticFeedback('error');
        }
        
        if (this.telegram?.showConfirm) {
            this.telegram.showConfirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.', (confirmed) => {
                if (confirmed) {
                    // TODO: Implement account deletion
                    this.telegram.showAlert('–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
                }
            });
        } else {
            const confirmed = confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.');
            if (confirmed) {
                // TODO: Implement account deletion
                alert('–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
            }
        }
    }
    
    /**
     * üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    updateSettingsUI() {
        // Update toggles
        Object.keys(this.settings).forEach(key => {
            const element = document.getElementById(key);
            if (element) {
                if (element.type === 'checkbox') {
                    element.checked = this.settings[key];
                } else {
                    element.value = this.settings[key];
                }
            }
        });
    }
    
    /**
     * ‚ö†Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
     */
    showError(message) {
        this.error = message;
        
        if (this.telegram?.showAlert) {
            this.telegram.showAlert(message);
        }
    }
    
    /**
     * üîß –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    getDefaultSettings() {
        return {
            dailyReminders: true,
            achievementNotifications: true,
            reminderTime: '18:00',
            theme: 'auto',
            fontSize: 'medium',
            animations: true,
            analytics: true,
            publicProfile: false
        };
    }
    
    /**
     * üßπ –û—á–∏—Å—Ç–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏
     */
    destroy() {
        // –û—Ç–ø–∏—Å–∫–∞ –æ—Ç –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫
        this.subscriptions.forEach(unsubscribe => {
            if (typeof unsubscribe === 'function') {
                unsubscribe();
            }
        });
        this.subscriptions = [];
        
        // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        this.loading = false;
        this.error = null;
        this.saving = false;
        this.settings = {};
    }
    
    /**
     * üì± Lifecycle –º–µ—Ç–æ–¥—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ä–æ—É—Ç–µ—Ä–æ–º
     */
    
    /**
     * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    onShow() {
        console.log('‚öôÔ∏è SettingsPage: onShow');
        // Refresh settings if needed
        if (Object.keys(this.settings).length === 0) {
            this.loadSettings();
        }
    }
    
    /**
     * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    onHide() {
        console.log('‚öôÔ∏è SettingsPage: onHide');
    }
}

// üì§ –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞
window.SettingsPage = SettingsPage;