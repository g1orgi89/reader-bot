/**
 * üóÇÔ∏è STATE MANAGEMENT - –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Telegram Mini App
 * 
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:
 * - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –ø—Ä–æ—Ñ–∏–ª—å
 * - –¶–∏—Ç–∞—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
 * - –û—Ç—á–µ—Ç—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
 * - UI —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è
 * - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
 * 
 * –†–µ–∞–∫—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–¥–ø–∏—Å–æ–∫ –∏ —Å–æ–±—ã—Ç–∏–π
 * –†–∞–∑–º–µ—Ä: ~2KB —Å–æ–≥–ª–∞—Å–Ω–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ
 */

class AppState {
    constructor() {
        // üìä –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
        this.store = {
            // üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            user: {
                profile: null,
                isAuthenticated: false,
                telegramData: null
            },

            // üìù –¶–∏—Ç–∞—Ç—ã
            quotes: {
                items: [],
                recent: [],
                total: 0,
                loading: false,
                lastUpdate: null
            },

            // üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            stats: {
                totalQuotes: 0,
                thisWeek: 0,
                currentStreak: 0,
                longestStreak: 0,
                favoriteAuthors: [],
                loading: false
            },

            // üìà –û—Ç—á–µ—Ç—ã
            reports: {
                weekly: [],
                monthly: [],
                current: null,
                loading: false
            },

            // üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
            achievements: {
                items: [],
                recent: [],
                progress: {},
                loading: false
            },

            // üìö –ö–∞—Ç–∞–ª–æ–≥
            catalog: {
                books: [],
                categories: [],
                recommendations: [],
                promoCodes: [],
                loading: false
            },

            // üë• –°–æ–æ–±—â–µ—Å—Ç–≤–æ
            community: {
                messages: [],
                loading: false
            },

            // üé® UI —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            ui: {
                currentPage: 'home',
                loading: false,
                theme: 'light',
                bottomNavVisible: true,
                activeModal: null,
                notifications: []
            },

            // üåê –°–µ—Ç—å –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
            network: {
                isOnline: navigator.onLine,
                lastSync: null,
                pendingRequests: []
            }
        };

        // üìã –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        this.subscribers = new Map();

        // üîÑ –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π (–¥–ª—è debug)
        this.history = [];
        this.maxHistorySize = 50;

        // üîç Debug —Ä–µ–∂–∏–º
        this.debug = window.location.hostname === 'localhost';

        // üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        this.init();
    }

    /**
     * üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    init() {
        // üåê –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏
        this.networkHandlers = {
            online: () => this.setNetwork({ isOnline: true }),
            offline: () => this.setNetwork({ isOnline: false })
        };
        
        window.addEventListener('online', this.networkHandlers.online);
        window.addEventListener('offline', this.networkHandlers.offline);

        // üíæ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.loadPersistedState();

        this.log('üöÄ AppState –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * üßπ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
     */
    cleanup() {
        // –£–¥–∞–ª—è–µ–º event listeners
        if (this.networkHandlers) {
            window.removeEventListener('online', this.networkHandlers.online);
            window.removeEventListener('offline', this.networkHandlers.offline);
        }

        // –û—á–∏—â–∞–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∏
        this.subscribers.clear();

        // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        this.history = [];

        this.log('üßπ AppState –æ—á–∏—â–µ–Ω');
    }

    // ===========================================
    // üìã –°–ò–°–¢–ï–ú–ê –ü–û–î–ü–ò–°–û–ö –ò –†–ï–ê–ö–¢–ò–í–ù–û–°–¢–ò
    // ===========================================

    /**
     * üìª –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —á–∞—Å—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    subscribe(path, callback) {
        if (!this.subscribers.has(path)) {
            this.subscribers.set(path, new Set());
        }
        
        this.subscribers.get(path).add(callback);

        // üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø–∏—Å–∫–∏
        return () => {
            const pathSubscribers = this.subscribers.get(path);
            if (pathSubscribers) {
                pathSubscribers.delete(callback);
                if (pathSubscribers.size === 0) {
                    this.subscribers.delete(path);
                }
            }
        };
    }

    /**
     * üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
     */
    notify(path, newValue, oldValue) {
        // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ç–æ—á–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
        if (this.subscribers.has(path)) {
            this.subscribers.get(path).forEach(callback => {
                try {
                    callback(newValue, oldValue, path);
                } catch (error) {
                    console.error(`[State] –û—à–∏–±–∫–∞ –≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–µ ${path}:`, error);
                }
            });
        }

        // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—É—Ç–∏
        const parts = path.split('.');
        for (let i = parts.length - 1; i > 0; i--) {
            const parentPath = parts.slice(0, i).join('.');
            if (this.subscribers.has(parentPath)) {
                const parentValue = this.get(parentPath);
                this.subscribers.get(parentPath).forEach(callback => {
                    try {
                        callback(parentValue, null, parentPath);
                    } catch (error) {
                        console.error(`[State] –û—à–∏–±–∫–∞ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–µ ${parentPath}:`, error);
                    }
                });
            }
        }
    }

    // ===========================================
    // üìä –û–°–ù–û–í–ù–´–ï –ú–ï–¢–û–î–´ –†–ê–ë–û–¢–´ –° –°–û–°–¢–û–Ø–ù–ò–ï–ú
    // ===========================================

    /**
     * üìñ –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –ø—É—Ç–∏
     */
    get(path) {
        return this.getNestedValue(this.store, path);
    }

    /**
     * ‚úèÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –ø—É—Ç–∏
     */
    set(path, value) {
        const oldValue = this.get(path);
        this.setNestedValue(this.store, path, value);
        
        // üì¢ –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
        this.notify(path, value, oldValue);

        // üìù –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        this.addToHistory('SET', path, value, oldValue);

        // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–ª—é—á–µ–π)
        this.persistState(path);

        this.log(`üìù Set ${path}:`, value);
    }

    /**
     * üîÑ –û–±–Ω–æ–≤–∏—Ç—å —á–∞—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞
     */
    update(path, updates) {
        const currentValue = this.get(path) || {};
        const newValue = { ...currentValue, ...updates };
        this.set(path, newValue);
    }

    /**
     * ‚ûï –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤
     */
    push(path, item) {
        const currentArray = this.get(path) || [];
        const newArray = [...currentArray, item];
        this.set(path, newArray);
    }

    /**
     * üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
     */
    remove(path, predicate) {
        const currentArray = this.get(path) || [];
        const newArray = currentArray.filter(item => !predicate(item));
        this.set(path, newArray);
    }

    /**
     * üßπ –°–±—Ä–æ—Å–∏—Ç—å —á–∞—Å—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    reset(path) {
        const defaultValue = this.getDefaultValue(path);
        this.set(path, defaultValue);
    }

    // ===========================================
    // üë§ –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú
    // ===========================================

    /**
     * üîë –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    setUser(userData) {
        this.update('user', {
            profile: userData,
            isAuthenticated: true
        });
    }

    /**
     * üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Telegram –¥–∞–Ω–Ω—ã–µ
     */
    setTelegramData(telegramData) {
        this.set('user.telegramData', telegramData);
    }

    /**
 * üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram –¥–∞–Ω–Ω—ã—Ö
 * @param {Object} telegramData - –î–∞–Ω–Ω—ã–µ –æ—Ç Telegram
 * @returns {boolean} - –£—Å–ø–µ—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
 */
initializeFromTelegram(telegramData) {
    if (!telegramData || !telegramData.id) {
        console.warn('‚ö†Ô∏è State: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç Telegram');
        return false;
    }

    const firstName = telegramData.first_name || '';
    const lastName = telegramData.last_name || '';
    const fullName = `${firstName} ${lastName}`.trim();

    // üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–û–•–†–ê–ù–Ø–ï–ú telegramData –í STATE!
    this.update('user', {
        profile: {
            id: telegramData.id,
            firstName: firstName,
            lastName: lastName,
            fullName: fullName,
            username: telegramData.username,
            language: telegramData.language_code || 'ru'
        },
        telegramData: telegramData,  // ‚Üê –í–û–¢ –≠–¢–û –î–û–ë–ê–í–ò–¢–¨!
        isAuthenticated: true
    });

    console.log('‚úÖ State: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å Telegram –¥–∞–Ω–Ω—ã–º–∏:', {
        id: telegramData.id,
        fullName: fullName,
        firstName: firstName,
        username: telegramData.username
    });

    return true;
}
        
    /**
 * üÜî –ù–û–í–û–ï: –ü–æ–ª—É—á–∏—Ç—å ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è API –≤—ã–∑–æ–≤–æ–≤
 * @returns {number|null} - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ null
 */
getCurrentUserId() {
    const profile = this.get('user.profile');
    const telegramData = this.get('user.telegramData');
    
    // üîç –ü–û–ö–ê–ó–´–í–ê–ï–ú –ß–¢–û –í–ù–£–¢–†–ò
    if (window.Telegram?.WebApp?.showAlert) {
        window.Telegram.WebApp.showAlert(
            `Profile: ${JSON.stringify(profile)}\n` +
            `TelegramData: ${JSON.stringify(telegramData)}`
        );
    }
    
    // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞
    return profile?.id || telegramData?.id || null;
}

    /**
     * üö™ –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    logout() {
        this.update('user', {
            profile: null,
            isAuthenticated: false,
            telegramData: null
        });
        
        // –û—á–∏—â–∞–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        this.reset('quotes');
        this.reset('stats');
        this.reset('reports');
        this.reset('achievements');
    }

    /**
     * üë§ –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    getUser() {
        return this.get('user.profile');
    }

    /**
     * ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
     */
    isAuthenticated() {
        return this.get('user.isAuthenticated');
    }

    // ===========================================
    // üìù –£–ü–†–ê–í–õ–ï–ù–ò–ï –¶–ò–¢–ê–¢–ê–ú–ò
    // ===========================================

    /**
     * üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–∏—Ç–∞—Ç—ã
     */
    setQuotes(quotes, total = null) {
        this.update('quotes', {
            items: quotes,
            total: total || quotes.length,
            lastUpdate: Date.now(),
            loading: false
        });
    }

    /**
     * ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–∏—Ç–∞—Ç—É
     */
    addQuote(quote) {
        this.push('quotes.items', quote);
        this.update('quotes', {
            total: this.get('quotes.total') + 1,
            lastUpdate: Date.now()
        });
    }

    /**
     * ‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å —Ü–∏—Ç–∞—Ç—É
     */
    updateQuote(quoteId, updates) {
        const quotes = this.get('quotes.items');
        const updatedQuotes = quotes.map(quote => 
            quote.id === quoteId ? { ...quote, ...updates } : quote
        );
        this.set('quotes.items', updatedQuotes);
    }

    /**
     * üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ü–∏—Ç–∞—Ç—É
     */
    removeQuote(quoteId) {
        this.remove('quotes.items', quote => quote.id === quoteId);
        this.update('quotes', {
            total: this.get('quotes.total') - 1,
            lastUpdate: Date.now()
        });
    }

    /**
     * üïê –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã
     */
    setRecentQuotes(quotes) {
        this.set('quotes.recent', quotes);
    }

    // ===========================================
    // üìä –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–û–ô
    // ===========================================

    /**
     * üìà –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
     */
    setStats(stats) {
        this.update('stats', {
            ...stats,
            loading: false
        });
    }

    /**
     * üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
     */
    updateStats(updates) {
        this.update('stats', updates);
    }

    // ===========================================
    // üìã –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–ß–ï–¢–ê–ú–ò
    // ===========================================

    /**
     * üìÖ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
     */
    setWeeklyReports(reports) {
        this.set('reports.weekly', reports);
    }

    /**
     * üìä –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–µ—Å—è—á–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
     */
    setMonthlyReports(reports) {
        this.set('reports.monthly', reports);
    }

    /**
     * üìà –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π –æ—Ç—á–µ—Ç
     */
    setCurrentReport(report) {
        this.set('reports.current', report);
    }

    // ===========================================
    // üé® –£–ü–†–ê–í–õ–ï–ù–ò–ï UI
    // ===========================================

    /**
     * üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
     */
    setCurrentPage(page) {
        this.set('ui.currentPage', page);
    }

    /**
     * üé® –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É
     */
    setTheme(theme) {
        this.set('ui.theme', theme);
    }

    /**
     * üîÑ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
     */
    setLoading(isLoading, path = 'ui') {
        this.set(`${path}.loading`, isLoading);
    }

    /**
     * üîî –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é
     */
    showBottomNav() {
        this.set('ui.bottomNavVisible', true);
    }

    /**
     * üôà –°–∫—Ä—ã—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é
     */
    hideBottomNav() {
        this.set('ui.bottomNavVisible', false);
    }

    /**
     * üì± –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
     */
    showModal(modalType, modalData = {}) {
        this.update('ui', {
            activeModal: {
                type: modalType,
                data: modalData
            }
        });
    }

    /**
     * ‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
     */
    closeModal() {
        this.set('ui.activeModal', null);
    }

    /**
     * üîî –£–õ–£–ß–®–ï–ù–û: –î–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
     */
    addNotification(message, type = 'info', duration = 5000) {
        const notification = {
            id: Date.now(),
            message,
            type, // 'success', 'error', 'warning', 'info'
            timestamp: Date.now(),
            duration
        };
        this.push('ui.notifications', notification);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (duration > 0) {
            setTimeout(() => {
                this.removeNotification(notification.id);
            }, duration);
        }

        return notification.id;
    }

    /**
     * üéØ –ù–û–í–û–ï: –î–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ API
     */
    addApiErrorNotification(error, context = '') {
        const message = this.formatApiError(error, context);
        return this.addNotification(message, 'error', 8000);
    }

    /**
     * üõ†Ô∏è –ù–û–í–û–ï: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    formatApiError(error, context = '') {
        let message = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞';
        
        if (context) {
            message = `–û—à–∏–±–∫–∞ ${context}`;
        }

        if (error?.response?.data?.message) {
            message = error.response.data.message;
        } else if (error?.message) {
            if (error.message.includes('Network Error')) {
                message = '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É';
            } else if (error.message.includes('timeout')) {
                message = '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è';
            } else {
                message = error.message;
            }
        }

        return message;
    }

    /**
     * üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    removeNotification(notificationId) {
        this.remove('ui.notifications', notification => notification.id === notificationId);
    }

    // ===========================================
    // üåê –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ï–¢–¨–Æ
    // ===========================================

    /**
     * üåê –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏
     */
    setNetwork(networkState) {
        this.update('network', networkState);
    }

    /**
     * üîÑ –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
     */
    updateLastSync() {
        this.set('network.lastSync', Date.now());
    }

    // ===========================================
    // üõ†Ô∏è –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
    // ===========================================

    /**
     * üîç –ü–æ–ª—É—á–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
     */
    getNestedValue(obj, path) {
        return path.split('.').reduce((current, key) => current?.[key], obj);
    }

    /**
     * ‚úèÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
     */
    setNestedValue(obj, path, value) {
        const keys = path.split('.');
        const lastKey = keys.pop();
        const target = keys.reduce((current, key) => {
            if (!(key in current)) current[key] = {};
            return current[key];
        }, obj);
        target[lastKey] = value;
    }

    /**
     * üéØ –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    getDefaultValue(path) {
        const defaults = {
            'quotes.items': [],
            'quotes.loading': false,
            'stats.loading': false,
            'reports.loading': false,
            'ui.loading': false
        };
        return defaults[path] || null;
    }

    /**
     * üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é
     */
    addToHistory(action, path, newValue, oldValue) {
        if (!this.debug) return;

        this.history.push({
            timestamp: Date.now(),
            action,
            path,
            newValue,
            oldValue
        });

        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏
        if (this.history.length > this.maxHistorySize) {
            this.history.shift();
        }
    }

    /**
     * üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ localStorage
     */
    persistState(path) {
        const persistentPaths = ['user.profile', 'ui.theme'];
        
        if (persistentPaths.some(p => path.startsWith(p))) {
            try {
                const dataToSave = {};
                persistentPaths.forEach(p => {
                    const value = this.get(p);
                    if (value !== null) {
                        dataToSave[p] = value;
                    }
                });
                
                localStorage.setItem('reader-app-state', JSON.stringify(dataToSave));
            } catch (error) {
                console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', error);
            }
        }
    }

    /**
     * üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
     */
    loadPersistedState() {
        try {
            const saved = localStorage.getItem('reader-app-state');
            if (saved) {
                const data = JSON.parse(saved);
                Object.entries(data).forEach(([path, value]) => {
                    this.setNestedValue(this.store, path, value);
                });
                this.log('üíæ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ localStorage');
            }
        } catch (error) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', error);
        }
    }

    /**
     * üìä –ü–æ–ª—É—á–∏—Ç—å —Å–Ω–∞–ø—à–æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    getSnapshot() {
        return JSON.parse(JSON.stringify(this.store));
    }

    /**
     * üîç –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ)
     */
    log(message, data = null) {
        if (this.debug) {
            console.log(`[State] ${message}`, data || '');
        }
    }

    /**
     * üï∞Ô∏è –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π
     */
    getHistory() {
        return [...this.history];
    }

    /**
     * üõ°Ô∏è –ù–û–í–û–ï: –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    validateInput(data, rules) {
        const errors = [];
        
        for (const [field, rule] of Object.entries(rules)) {
            const value = data[field];
            
            if (rule.required && (!value || (typeof value === 'string' && value.trim() === ''))) {
                errors.push(`${field} –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è`);
                continue;
            }
            
            if (value && rule.maxLength && value.length > rule.maxLength) {
                errors.push(`${field} –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å ${rule.maxLength} —Å–∏–º–≤–æ–ª–æ–≤`);
            }
            
            if (value && rule.minLength && value.length < rule.minLength) {
                errors.push(`${field} –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º ${rule.minLength} —Å–∏–º–≤–æ–ª–æ–≤`);
            }
            
            if (value && rule.pattern && !rule.pattern.test(value)) {
                errors.push(`${field} –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç`);
            }
        }
        
        return {
            isValid: errors.length === 0,
            errors
        };
    }

    /**
     * üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
     */
    clearHistory() {
        this.history = [];
    }
}

// üåç –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è
const appState = new AppState();

// üåç –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç
window.AppState = AppState;
window.appState = appState;

// üì± –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
if (typeof module !== 'undefined' && module.exports) {
    module.exports = AppState;
}
