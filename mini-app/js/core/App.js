/**
 * üöÄ –ì–õ–ê–í–ù–´–ô –ö–õ–ê–°–° –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø READER BOT
 * 
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º Telegram Mini App
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, —Ä–æ—É—Ç–∏–Ω–≥, —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram
 * 
 * @filesize 3 KB - –≥–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @author Claude Assistant
 * @version 1.0.7 - –ò–°–ü–†–ê–í–õ–ï–ù–ê –ü–ï–†–ï–î–ê–ß–ê APP –í ROUTER
 */

/**
 * @typedef {Object} AppConfig
 * @property {string} apiBaseUrl - –ë–∞–∑–æ–≤—ã–π URL API
 * @property {boolean} debugMode - –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
 * @property {string} version - –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

/**
 * @typedef {Object} UserData
 * @property {number} id - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @property {string} firstName - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @property {string} username - Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @property {boolean} isCompleted - –ü—Ä–æ—à–µ–ª –ª–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
 */

/**
 * üèóÔ∏è –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Reader Bot
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π, —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–µ—Ä–µ–¥–∞—á–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ App –≤ Router –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã showTopMenu
 */
class ReaderApp {
    /**
     * üèóÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    constructor() {
        console.log('üöÄ Reader App: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞—Ç–∞ - VERSION 1.0.7');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤–æ–π—Å—Ç–≤ –∫–ª–∞—Å—Å–∞
        this.router = null;
        this.state = null;
        this.telegram = null;
        this.api = null;
        this.isInitialized = false;
        this.appContainer = null;
        this.loadingScreen = null;
        this.topMenu = null;
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã DOM
        this.appContainer = document.getElementById('app');
        this.loadingScreen = document.getElementById('loading-screen');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        if (!this.appContainer || !this.loadingScreen) {
            throw new Error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã DOM –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }

        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥—ã –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        this.handleError = this.handleError.bind(this);
        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);
        
        console.log('‚úÖ Reader App: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω - –ò–°–ü–†–ê–í–õ–ï–ù–ê –ü–ï–†–ï–î–ê–ß–ê APP –í ROUTER!');
    }

    /**
     * üöÄ –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
     */
    async init() {
        try {
            console.log('üîÑ Reader App: –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
            this.showLoadingScreen();
            
            // –≠—Ç–∞–ø 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
            await this.initializeServices();
            
            // –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –æ–∫—Ä—É–∂–µ–Ω–∏—è
            await this.initializeTelegram();
            
            // –≠—Ç–∞–ø 3: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await this.authenticateUser();
            
            // –≠—Ç–∞–ø 4: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            await this.loadUserData();
            
            // –≠—Ç–∞–ø 5: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
            await this.initializeUI();
            
            // –≠—Ç–∞–ø 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞
            await this.initializeRouting();
            
            // –≠—Ç–∞–ø 7: –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
            await this.finalizeInitialization();
            
            console.log('‚úÖ Reader App: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            
        } catch (error) {
            console.error('‚ùå Reader App: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.showErrorMessage(error.message);
        }
    }

    /**
     * üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    async initializeServices() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...');
        
        // –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.state = new AppState();
        await this.state.init();
        
        // –°–æ–∑–¥–∞–µ–º API —Å–µ—Ä–≤–∏—Å
        this.api = new ApiService();
        
        // –°–æ–∑–¥–∞–µ–º Telegram —Å–µ—Ä–≤–∏—Å
        if (typeof TelegramService !== 'undefined') {
            this.telegram = new TelegramService();
        } else {
            console.warn('‚ö†Ô∏è TelegramService –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∑–∞–≥–ª—É—à–∫–∞');
            this.telegram = null;
        }
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä —Å –ø–µ—Ä–µ–¥–∞—á–µ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ App
        if (typeof AppRouter !== 'undefined') {
            this.router = new AppRouter({
                container: document.getElementById('page-content'),
                state: this.state,
                api: this.api,
                telegram: this.telegram,
                app: this // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–µ–±—è
            });
        } else {
            console.warn('‚ö†Ô∏è AppRouter –Ω–µ –Ω–∞–π–¥–µ–Ω');
            this.router = null;
        }
        
        console.log('‚úÖ –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }

    /**
     * üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
     */
    async initializeTelegram() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram...');
        
        if (!window.Telegram?.WebApp) {
            console.warn('‚ö†Ô∏è Telegram Web App –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–ø—É—Å–∫ –≤ debug —Ä–µ–∂–∏–º–µ');
            this.state.set('debugMode', true);
            return;
        }
        
        try {
            if (this.telegram && typeof this.telegram.init === 'function') {
                await this.telegram.init();
                
                // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                this.telegram.expand();
                this.telegram.ready();
            } else {
                console.warn('‚ö†Ô∏è Telegram —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            }
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É Telegram
            this.applyTelegramTheme();
            
            console.log('‚úÖ Telegram –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram, –ø–µ—Ä–µ—Ö–æ–¥ –≤ debug —Ä–µ–∂–∏–º:', error);
            this.state.set('debugMode', true);
        }
    }

    /**
     * üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Telegram
     */
    async authenticateUser() {
        console.log('üîÑ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        try {
            const isDebugMode = this.state.get('debugMode');
            
            if (isDebugMode) {
                console.log('üß™ Debug —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                await this.createDebugUser();
                return;
            }
            
            let telegramUser = null;
            let initData = '';
            
            if (this.telegram && typeof this.telegram.getUserWithRetry === 'function') {
                console.log('üîÑ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å retry –ª–æ–≥–∏–∫–æ–π...');
                
                try {
                    telegramUser = await this.telegram.getUserWithRetry(5, 1000);
                    initData = this.telegram.getInitData();
                } catch (error) {
                    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ retry:', error);
                }
            } else if (this.telegram && typeof this.telegram.getUser === 'function') {
                telegramUser = this.telegram.getUser();
                initData = this.telegram.getInitData();
            }
            
            if (!telegramUser || !telegramUser.id || telegramUser.is_debug) {
                console.warn('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–ª–∏ —ç—Ç–æ debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
                
                const isDevelopment = this.isEnvironmentDevelopment();
                
                if (window.Telegram?.WebApp && isDevelopment) {
                    console.log('üß™ Development —Ä–µ–∂–∏–º: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ debug —Ä–µ–∂–∏–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
                    this.state.set('debugMode', true);
                    await this.createDebugUser();
                    return;
                } else if (!window.Telegram?.WebApp && isDevelopment) {
                    console.log('üß™ Development —Ä–µ–∂–∏–º: Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ debug —Ä–µ–∂–∏–º');
                    this.state.set('debugMode', true);
                    await this.createDebugUser();
                    return;
                } else {
                    throw new Error('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram.');
                }
            }
            
            console.log('üìä –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ Telegram –Ω–∞ backend –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', {
                userId: telegramUser.id,
                firstName: telegramUser.first_name,
                username: telegramUser.username
            });
            
            const stateInitialized = this.state.initializeWithTelegramUser(telegramUser);
            if (!stateInitialized) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ Telegram');
            }
            
            const authResponse = await this.api.authenticateWithTelegram(initData, telegramUser);
            
            if (!authResponse || !authResponse.success) {
                throw new Error('Backend –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é');
            }
            
            console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');

            const firstName = authResponse.user.firstName || telegramUser.first_name || '';
            const lastName = authResponse.user.lastName || telegramUser.last_name || '';
            const fullName = (firstName && lastName) ? `${firstName} ${lastName}` : (firstName || lastName);
            const name = fullName || authResponse.user.username || telegramUser.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
            
            this.state.update('user', {
                profile: {
                    ...authResponse.user,
                    id: telegramUser.id,
                    telegramId: telegramUser.id,
                    firstName,
                    lastName,
                    fullName,
                    name, // <-- –¥–æ–±–∞–≤—å —ç—Ç–æ –ø–æ–ª–µ!
                    username: authResponse.user.username || telegramUser.username || '',
                    isOnboardingCompleted: authResponse.isOnboardingCompleted || false
                },
                isAuthenticated: true
            });
            
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω:', {
                name: authResponse.user.firstName || telegramUser.first_name,
                username: authResponse.user.username || telegramUser.username
            });
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
            
            const isDevelopment = this.isEnvironmentDevelopment();
            
            if (isDevelopment) {
                console.log('üß™ Development —Ä–µ–∂–∏–º: –æ—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ debug —Ä–µ–∂–∏–º');
                this.state.set('debugMode', true);
                await this.createDebugUser();
                this.showErrorMessage(`Development —Ä–µ–∂–∏–º: –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (${error.message}). –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.`);
            } else {
                console.error('üö® Production —Ä–µ–∂–∏–º: –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
                this.showCriticalError('–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏', 
                    `–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É: ${error.message}). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.`);
                return;
            }
        }
    }

    /**
     * üìä –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    async loadUserData() {
        console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...');
        
        const isDebugMode = this.state.get('debugMode');
        
        // –í debug —Ä–µ–∂–∏–º–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
        if (isDebugMode) {
            console.log('üß™ Debug —Ä–µ–∂–∏–º: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞');
            return;
        }
        
        try {
            // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ñ–¥–µ–º –≤–∞–ª–∏–¥–Ω—ã–π userId –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
            let userId = null;
            try {
                userId = this.state.getCurrentUserId();
                if (!userId || userId === 'demo-user') {
                    console.log('‚ö†Ô∏è App: –ù–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ userId –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
                    return; // –ù–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –≤–∞–ª–∏–¥–Ω–æ–≥–æ userId
                }
            } catch (error) {
                console.log('‚ö†Ô∏è App: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å userId –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', error);
                return;
            }
            
            console.log('üìä App: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è userId:', userId);
            
            // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –Ø–≤–Ω–æ –ø–µ—Ä–µ–¥–∞–µ–º userId –≤–æ –≤—Å–µ API –≤—ã–∑–æ–≤—ã
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const profile = await this.api.getProfile(userId);
            console.log('[DEBUG] App.js loadUserData: Profile loaded from backend:', profile);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            const stats = await this.api.getStats(userId);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã
            const recentQuotes = await this.api.getRecentQuotes(5, userId);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            const prevProfile = this.state.get('user.profile') || {};
            const newProfile = { ...prevProfile, ...profile.user };
            if (!newProfile.name) {
            newProfile.name = prevProfile.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
            }
            console.log('[DEBUG] App.js loadUserData: Profile merged - prevProfile:', prevProfile, 'newProfile:', newProfile);
            this.state.update('user', { profile: newProfile });
            console.log('[DEBUG] App.js loadUserData: State updated with profile:', this.state.get('user.profile'));
            
            this.state.setStats(stats);
            this.state.setRecentQuotes(recentQuotes.quotes || []);
            
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            
        } catch (error) {
            console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        }
    }

    /**
     * üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
     */
    async initializeUI() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if (typeof BottomNavigation !== 'undefined') {
            const bottomNav = new BottomNavigation();
            if (typeof bottomNav.init === 'function') {
                bottomNav.init();
            }
        } else {
            console.warn('‚ö†Ô∏è BottomNavigation –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ—Ä—Ö–Ω–µ–≥–æ –º–µ–Ω—é
        if (typeof TopMenu !== 'undefined') {
            this.topMenu = new TopMenu({
                app: this,
                api: this.api,
                state: this.state,
                telegram: this.telegram
            });
            console.log('‚úÖ TopMenu –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å drawer pattern');
        } else {
            console.warn('‚ö†Ô∏è TopMenu –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.setupEventListeners();
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
        this.applyThemeStyles();
        
        console.log('‚úÖ UI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * üß≠ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–∏–Ω–≥–∞
     */
    async initializeRouting() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–∏–Ω–≥–∞...');
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const profile = this.state.get('user.profile');
        let initialRoute = '/home';
        
        try {
            // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ñ–¥–µ–º –≤–∞–ª–∏–¥–Ω—ã–π userId –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
            const profile = this.state.get('user.profile');
            let userId = null;
            
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å userId, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            try {
                userId = this.state.getCurrentUserId();
                if (!userId || userId === 'demo-user') {
                    console.log('‚ö†Ô∏è App: –ù–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ userId, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è');
                }
            } catch (error) {
                console.log('‚ö†Ô∏è App: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å userId –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', error);
            }
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω—ã–π userId, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ API
            if (userId && userId !== 'demo-user') {
                console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º userId –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞:', userId);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ API
                const onboardingStatus = await this.api.checkOnboardingStatus(userId);
                console.log('üìä –°—Ç–∞—Ç—É—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –æ—Ç API:', onboardingStatus);
                
                // –ï—Å–ª–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
                if (!onboardingStatus.completed) {
                    initialRoute = '/onboarding';
                    console.log('üéØ API: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥');
                } else {
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç API
                    if (onboardingStatus.user) {
                        this.state.update('user.profile', {
                            ...onboardingStatus.user,
                            isOnboardingCompleted: true
                        });
                    }
                    console.log('üè† API: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
                }
            } else {
                // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ
                const isDebugMode = this.state.get('debugMode');
                if (isDebugMode && profile?.isOnboardingCompleted) {
                    console.log('üè† Debug Fallback: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –ª–æ–∫–∞–ª—å–Ω–æ');
                } else if (!profile?.isOnboardingCompleted) {
                    initialRoute = '/onboarding';
                    console.log('üéØ Fallback: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥');
                }
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ API:', error);
            // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ
            const isDebugMode = this.state.get('debugMode');
            if (isDebugMode && profile?.isOnboardingCompleted) {
                console.log('üè† Debug Fallback: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –ª–æ–∫–∞–ª—å–Ω–æ');
            } else if (!profile?.isOnboardingCompleted) {
                initialRoute = '/onboarding';
                console.log('üéØ Fallback: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥');
            }
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω—É–∂–Ω—ã–π hash –ü–ï–†–ï–î –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π —Ä–æ—É—Ç–µ—Ä–∞
        window.location.hash = initialRoute;
        
        if (this.router && typeof this.router.init === 'function') {
            try {
                await this.router.init();
                console.log('‚úÖ –†–æ—É—Ç–∏–Ω–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:', initialRoute);
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞:', error);
                this.showBasicContent();
            }
        } else {
            console.warn('‚ö†Ô∏è Router –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
            this.showBasicContent();
        }
    }

    /**
     * üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–∑–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (fallback)
     */
    showBasicContent() {
        const mainContent = document.getElementById('page-content') || document.getElementById('main-content');
        if (mainContent) {
            mainContent.innerHTML = `
                <div class="welcome-screen">
                    <h1>üìö Reader Bot</h1>
                    <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ —Ü–∏—Ç–∞—Ç!</p>
                    <div class="debug-info">
                        <p>üß™ Debug —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω</p>
                        <p>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ</p>
                    </div>
                </div>
            `;
        }
    }

    /**
     * üèÅ –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    async finalizeInitialization() {
        console.log('üîÑ –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
        
        // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
        this.hideLoadingScreen();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        this.showApp();
        
        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
        this.registerLifecycleHandlers();
        
        // –û—Ç–º–µ—á–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ
        this.isInitialized = true;
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        if (this.telegram && typeof this.telegram.ready === 'function') {
            this.telegram.ready();
        }
        
        console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ');
    }

    // ===========================================
    // üîß UI –ú–ï–¢–û–î–´
    // ===========================================

    /**
     * üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Ö–Ω–µ–µ –º–µ–Ω—é
     */
    showTopMenu() {
        console.log('üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Ä—Ö–Ω–µ–µ –º–µ–Ω—é...');
        
        if (this.topMenu && typeof this.topMenu.open === 'function') {
            this.topMenu.open();
            console.log('‚úÖ –í–µ—Ä—Ö–Ω–µ–µ –º–µ–Ω—é –ø–æ–∫–∞–∑–∞–Ω–æ');
        } else {
            console.warn('‚ö†Ô∏è TopMenu –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ open()');
            
            // Fallback: –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (this.telegram && typeof this.telegram.showAlert === 'function') {
                this.telegram.showAlert('–ú–µ–Ω—é –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ');
            } else {
                console.log('–ú–µ–Ω—é –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ');
            }
        }
    }

    /**
     * üìã –°–∫—Ä—ã—Ç—å –≤–µ—Ä—Ö–Ω–µ–µ –º–µ–Ω—é
     */
    hideTopMenu() {
        if (this.topMenu && typeof this.topMenu.close === 'function') {
            this.topMenu.close();
            console.log('‚úÖ –í–µ—Ä—Ö–Ω–µ–µ –º–µ–Ω—é —Å–∫—Ä—ã—Ç–æ');
        }
    }

    /**
     * üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ—Ä—Ö–Ω–µ–≥–æ –º–µ–Ω—é
     */
    toggleTopMenu() {
        if (this.topMenu && typeof this.topMenu.toggle === 'function') {
            this.topMenu.toggle();
        } else {
            // –ï—Å–ª–∏ –Ω–µ—Ç –º–µ—Ç–æ–¥–∞ toggle, –∏—Å–ø–æ–ª—å–∑—É–µ–º open
            this.showTopMenu();
        }
    }

    /**
     * üîß –ü—Ä–∏–≤—è–∑–∞—Ç—å –≤–µ—Ä—Ö–Ω–µ–µ –º–µ–Ω—é –∫ –∫–Ω–æ–ø–∫–µ
     * @param {HTMLElement} buttonEl - –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏
     */
    attachTopMenuToButton(buttonEl) {
        if (this.topMenu && typeof this.topMenu.attachToButton === 'function') {
            this.topMenu.attachToButton(buttonEl);
        }
    }

    /**
     * üì± –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã Telegram –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
     */
    applyTelegramTheme() {
        if (!this.telegram) return;
        
        try {
            const theme = this.telegram.getThemeParams();
            document.body.setAttribute('data-theme', 'telegram');
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã —á–µ—Ä–µ–∑ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            if (theme.bg_color) {
                document.documentElement.style.setProperty('--tg-theme-bg-color', theme.bg_color);
            }
            if (theme.text_color) {
                document.documentElement.style.setProperty('--tg-theme-text-color', theme.text_color);
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã Telegram:', error);
        }
    }

    /**
     * üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π —Ç–µ–º—ã
     */
    applyThemeStyles() {
        const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        document.body.classList.toggle('dark-theme', isDark);
    }

    /**
     * üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        document.addEventListener('visibilitychange', this.handleVisibilityChange);
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
        window.matchMedia('(prefers-color-scheme: dark)')
              .addEventListener('change', () => this.applyThemeStyles());
        
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        window.addEventListener('error', this.handleError);
        window.addEventListener('unhandledrejection', this.handleError);
    }

    /**
     * üîÑ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
     */
    registerLifecycleHandlers() {
        if (!this.telegram || typeof this.telegram.onClose !== 'function') return;
        
        try {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            this.telegram.onClose(() => {
                console.log('üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è');
                this.cleanup();
            });
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ Telegram:', error);
        }
    }

    /**
     * üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è debug —Ä–µ–∂–∏–º–∞
     */
    async createDebugUser() {
        const debugUserId = 12345 + Math.floor(Math.random() * 1000);
        
        const debugTelegramData = {
            id: debugUserId,
            first_name: '–¢–µ—Å—Ç–µ—Ä Debug',
            last_name: '–†–µ–∂–∏–º',
            username: `debug_user_${debugUserId}`,
            language_code: 'ru',
            is_premium: false,
            is_debug: true
        };

        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            console.log('üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
            
            const authResponse = await this.api.authenticateWithTelegram('debug_init_data', debugTelegramData);
            
            if (authResponse && authResponse.success) {
                console.log('‚úÖ Debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
                
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
                this.state.update('user', {
                    profile: {
                        id: debugTelegramData.id,
                        firstName: authResponse.user.firstName || debugTelegramData.first_name,
                        lastName: authResponse.user.lastName || debugTelegramData.last_name,
                        username: authResponse.user.username || debugTelegramData.username,
                        telegramId: debugTelegramData.id,
                        isDebug: true,
                        isOnboardingCompleted: authResponse.isOnboardingCompleted || false
                    },
                    isAuthenticated: true
                });
                
                console.log('üß™ Debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω:', {
                    name: authResponse.user.firstName,
                    username: authResponse.user.username
                });
                
                return;
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ API:', error);
        }

        // Fallback: —Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('üß™ –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        
        const initialized = this.state.initializeWithTelegramUser(debugTelegramData);
        
        if (initialized) {
            this.state.update('user.profile', {
                isDebug: true,
                isOnboardingCompleted: false // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
            });
            
            console.log('üß™ –°–æ–∑–¥–∞–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', {
                name: debugTelegramData.first_name,
                username: debugTelegramData.username
            });
        } else {
            // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥
            this.state.update('user', {
                profile: {
                    id: 12345,
                    telegramId: 12345, // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª—è–µ–º telegramId –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                    firstName: '–¢–µ—Å—Ç–µ—Ä Debug',
                    username: 'debug_user',
                    isDebug: true,
                    isOnboardingCompleted: false // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
                },
                isAuthenticated: true
            });
            console.log('üß™ –°–æ–∑–¥–∞–Ω debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (fallback)');
        }
    }

    /**
     * üì∫ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–æ–º –∑–∞–≥—Ä—É–∑–∫–∏
     */
    showLoadingScreen() {
        if (this.loadingScreen) {
            this.loadingScreen.style.display = 'flex';
        }
    }

    hideLoadingScreen() {
        if (this.loadingScreen) {
            this.loadingScreen.style.display = 'none';
        }
    }

    /**
     * üì± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
     */
    showApp() {
        if (this.appContainer) {
            this.appContainer.style.display = 'block';
        }
    }

    /**
     * ‚ö†Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    showErrorMessage(message) {
        const mainContent = document.getElementById('page-content') || document.getElementById('main-content');
        if (mainContent) {
            mainContent.innerHTML = `
                <div class="error-screen">
                    <h2>‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏</h2>
                    <p>${message}</p>
                    <button onclick="location.reload()" class="retry-button">
                        üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                    </button>
                </div>
            `;
        }
        
        // –í—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        this.hideLoadingScreen();
        this.showApp();
    }

    /**
     * üëÅÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    handleVisibilityChange() {
        if (document.hidden) {
            console.log('üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ');
        } else {
            console.log('üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ');
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            this.refreshData();
        }
    }

    /**
     * üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    async refreshData() {
        if (!this.isInitialized || this.state.get('debugMode')) return;
        
        try {
            // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ñ–¥–µ–º –≤–∞–ª–∏–¥–Ω—ã–π userId –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
            const userId = this.state.getCurrentUserId();
            
            if (!userId || userId === 'demo-user') {
                console.log('‚ö†Ô∏è App: –ù–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ userId –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
                return;
            }
            
            console.log('üîÑ App: –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è userId:', userId);
            
            // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –Ø–≤–Ω–æ –ø–µ—Ä–µ–¥–∞–µ–º userId –≤ API –≤—ã–∑–æ–≤
            const stats = await this.api.getStats(userId);
            this.state.setStats(stats);
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ:', error);
        }
    }

    /**
     * ‚ùå –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
     * @param {Error|Event} error - –û—à–∏–±–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
     */
    handleError(error) {
        console.error('‚ùå –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
        
        // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ debug —Ä–µ–∂–∏–º–µ
        if (!this.state?.get('debugMode')) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            if (window.showNotification) {
                window.showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
            } else {
                console.warn('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
            }
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫—É (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
        if (this.api && this.isInitialized && !this.state?.get('debugMode')) {
            this.api.post('/errors', {
                message: error.message || 'Unknown error',
                stack: error.stack,
                timestamp: new Date().toISOString()
            }).catch(() => {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–æ–∫
            });
        }
    }

    /**
     * üåç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (development/production)
     */
    isEnvironmentDevelopment() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã development –æ–∫—Ä—É–∂–µ–Ω–∏—è
        return (
            // 1. –Ø–≤–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
            window.location.hostname === 'localhost' ||
            window.location.hostname === '127.0.0.1' ||
            window.location.hostname.includes('dev') ||
            // 2. URL –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            new URLSearchParams(window.location.search).get('debug') === 'true' ||
            // 3. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ Telegram WebApp (–æ–±—ã—á–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É)
            !window.Telegram?.WebApp
        );
    }

    /**
     * üö® –ü–æ–∫–∞–∑ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ (–¥–ª—è production)
     */
    showCriticalError(title, message) {
        console.error('üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', title, message);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
        this.hideLoadingScreen();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É
        const app = document.getElementById('app');
        if (app) {
            app.innerHTML = `
                <div class="critical-error">
                    <div class="error-icon">üö®</div>
                    <h2>${title}</h2>
                    <p>${message}</p>
                    <div class="error-actions">
                        <button onclick="location.reload()" class="retry-button">
                            üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                        </button>
                        <button onclick="window.open('https://t.me/annabusel_support', '_blank')" class="support-button">
                            üí¨ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
                        </button>
                    </div>
                </div>
            `;
        }
    }

    /**
     * üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    cleanup() {
        console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
        
        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        document.removeEventListener('visibilitychange', this.handleVisibilityChange);
        window.removeEventListener('error', this.handleError);
        window.removeEventListener('unhandledrejection', this.handleError);
        
        // –û—á–∏—â–∞–µ–º —Ä–æ—É—Ç–µ—Ä
        if (this.router && typeof this.router.destroy === 'function') {
            this.router.destroy();
        }
        
        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if (this.state && typeof this.state.cleanup === 'function') {
            this.state.cleanup();
        }
        
        this.isInitialized = false;
        console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.ReaderApp = ReaderApp;
