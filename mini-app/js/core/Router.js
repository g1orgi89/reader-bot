/**
 * üß≠ SPA –†–û–£–¢–ï–† –î–õ–Ø READER BOT MINI APP (–£–ë–†–ê–ù–´ –•–ï–î–ï–†–´)
 * 
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–º —Ä–æ—É—Ç–∏–Ω–≥–æ–º –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞–∑–∞–¥
 * 
 * @filesize 2 KB - SPA —Ä–æ—É—Ç–∏–Ω–≥
 * @author Claude Assistant  
 * @version 1.1.0 - –£–ë–†–ê–ù–´ –•–ï–î–ï–†–´ –î–õ–Ø –†–ï–®–ï–ù–ò–Ø VIEWPORT –ü–†–û–ë–õ–ï–ú–´
 */

/**
 * @typedef {Object} RouteConfig
 * @property {string} path - –ü—É—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞
 * @property {Function} component - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @property {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @property {boolean} requiresAuth - –¢—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * @property {boolean} showBottomNav - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∏–∂–Ω—é—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
 */

/**
 * @typedef {Object} NavigationOptions
 * @property {boolean} replace - –ó–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏
 * @property {string} animation - –¢–∏–ø –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞
 * @property {Object} state - –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É
 */

/**
 * üß≠ –ö–ª–∞—Å—Å —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ Mini App
 */
class AppRouter {
    /**
     * @type {HTMLElement} - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
     */
    container = null;

    /**
     * @type {AppState} - –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    state = null;

    /**
     * @type {ApiService} - API —Å–µ—Ä–≤–∏—Å –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
     */
    api = null;

    /**
     * @type {TelegramService} - Telegram —Å–µ—Ä–≤–∏—Å
     */
    telegram = null;

    /**
     * @type {ReaderApp} - –°—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
     */
    app = null;

    /**
     * @type {Map<string, RouteConfig>} - –ö–∞—Ä—Ç–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
     */
    routes = new Map();

    /**
     * @type {string} - –¢–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç
     */
    currentRoute = '';

    /**
     * @type {Object} - –¢–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    currentComponent = null;

    /**
     * @type {Array<string>} - –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    history = [];

    /**
     * @type {boolean} - –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞
     */
    isInitialized = false;

    /**
     * @type {boolean} - –§–ª–∞–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è)
     */
    isNavigating = false;

    /**
     * üèóÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ä–æ—É—Ç–µ—Ä–∞
     * @param {Object} options - –û–ø—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
     * @param {HTMLElement} options.container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
     * @param {AppState} options.state - –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
     * @param {ApiService} options.api - API —Å–µ—Ä–≤–∏—Å
     * @param {TelegramService} options.telegram - Telegram —Å–µ—Ä–≤–∏—Å
     * @param {ReaderApp} options.app - –°—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
     */
    constructor({ container, state, api = null, telegram = null, app = null }) {
        if (!container) {
            throw new Error('‚ùå Router: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω');
        }

        this.container = container;
        this.state = state;
        this.api = api;
        this.telegram = telegram;
        this.app = app;
        
        // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        this._lastNavigationPath = null;
        this._lastNavigationTime = 0;
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥—ã –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        this.handlePopState = this.handlePopState.bind(this);
        this.handleNavigation = this.handleNavigation.bind(this);
        
        console.log('‚úÖ Router: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω - VERSION 1.1.0 - –ë–ï–ó –•–ï–î–ï–†–û–í');
    }

    /**
     * üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
     * @param {string} initialRoute - –ù–∞—á–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
     */
    async init(initialRoute) {
        console.log('üîÑ Router: –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
        
        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã
        this.registerRoutes();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.setupEventListeners();
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π URL —Å –≤–æ–∑–º–æ–∂–Ω—ã–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º
        this.handleInitialRoute(initialRoute);
        
        this.isInitialized = true;
        console.log('‚úÖ Router: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }

    /**
     * üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç API —Å–µ—Ä–≤–∏—Å (–¥–ª—è –ø–æ–∑–¥–Ω–µ–≥–æ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è)
     */
    setAPI(api) {
        this.api = api;
        console.log('‚úÖ Router: API —Å–µ—Ä–≤–∏—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    /**
     * üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Telegram —Å–µ—Ä–≤–∏—Å (–¥–ª—è –ø–æ–∑–¥–Ω–µ–≥–æ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è)
     */
    setTelegram(telegram) {
        this.telegram = telegram;
        console.log('‚úÖ Router: Telegram —Å–µ—Ä–≤–∏—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    /**
     * üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
     */
    setApp(app) {
        this.app = app;
        console.log('‚úÖ Router: App —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    /**
     * üìã –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    registerRoutes() {
        console.log('üîÑ Router: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤');
        
        // ‚úÖ –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ë–ï–ó –•–ï–î–ï–†–û–í - –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Å–∞–º–æ–≥–æ –≤–µ—Ä—Ö–∞!
        
        // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        this.routes.set('/home', {
            path: '/home',
            component: HomePage,
            title: '–ì–ª–∞–≤–Ω–∞—è',
            requiresAuth: true,
            showBottomNav: true
        });

        // –î–Ω–µ–≤–Ω–∏–∫ —Ü–∏—Ç–∞—Ç
        this.routes.set('/diary', {
            path: '/diary', 
            component: DiaryPage,
            title: '–î–Ω–µ–≤–Ω–∏–∫ —Ü–∏—Ç–∞—Ç',
            requiresAuth: true,
            showBottomNav: true
        });

        // –û—Ç—á–µ—Ç—ã
        this.routes.set('/reports', {
            path: '/reports',
            component: ReportsPage, 
            title: '–û—Ç—á–µ—Ç—ã',
            requiresAuth: true,
            showBottomNav: true
        });

        // –ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥
        this.routes.set('/catalog', {
            path: '/catalog',
            component: CatalogPage,
            title: '–ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥', 
            requiresAuth: true,
            showBottomNav: true
        });

        // –°–æ–æ–±—â–µ—Å—Ç–≤–æ
        this.routes.set('/community', {
            path: '/community',
            component: CommunityPage,
            title: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ',
            requiresAuth: true,
            showBottomNav: true
        });

        // –û–Ω–±–æ—Ä–¥–∏–Ω–≥ - –ë–ï–ó –ù–ò–ñ–ù–ï–ô –ù–ê–í–ò–ì–ê–¶–ò–ò
        this.routes.set('/onboarding', {
            path: '/onboarding',
            component: OnboardingPage,
            title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
            requiresAuth: true,
            showBottomNav: false
        });
        
        // ‚ú® NEW ROUTES: Menu navigation pages
        
        // Profile page
        this.routes.set('/profile', {
            path: '/profile',
            component: ProfilePage,
            title: '–ü—Ä–æ—Ñ–∏–ª—å',
            requiresAuth: true,
            showBottomNav: false
        });
        
        // Achievements page  
        this.routes.set('/achievements', {
            path: '/achievements',
            component: AchievementsPage,
            title: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
            requiresAuth: true,
            showBottomNav: false
        });
        
        // Settings page
        this.routes.set('/settings', {
            path: '/settings',
            component: SettingsPage,
            title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', 
            requiresAuth: true,
            showBottomNav: false
        });
        
        // About page
        this.routes.set('/about', {
            path: '/about',
            component: AboutPage,
            title: '–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
            requiresAuth: true,
            showBottomNav: false
        });
        
        // Help page
        this.routes.set('/help', {
            path: '/help',
            component: HelpPage,
            title: '–ü–æ–º–æ—â—å',
            requiresAuth: true,
            showBottomNav: false
        });

        console.log(`‚úÖ Router: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ ${this.routes.size} –º–∞—Ä—à—Ä—É—Ç–æ–≤`);
    }

    /**
     * üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –±—Ä–∞—É–∑–µ—Ä–∞
        window.addEventListener('popstate', this.handlePopState);
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        const bottomNav = document.getElementById('bottom-nav');
        if (bottomNav) {
            bottomNav.addEventListener('click', this.handleNavigation);
        }
    }

    /**
     * üè† –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
     * @param {string} initialOverride - –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ –∏–∑ App
     */
    handleInitialRoute(initialOverride) {
        // –ï—Å–ª–∏ App –ø–µ—Ä–µ–¥–∞–ª –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if (initialOverride) {
            console.log('üéØ Router: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞:', initialOverride);
            this.navigate(initialOverride, { replace: true });
            return;
        }

        // –í Telegram Mini App –∏—Å–ø–æ–ª—å–∑—É–µ–º hash —Ä–æ—É—Ç–∏–Ω–≥
        const rawHash = window.location.hash.slice(1);
        if (rawHash) {
            // Pass the full hash including query parameters to navigate
            this.navigate(rawHash, { replace: true });
        } else {
            // –ï—Å–ª–∏ hash –ø—É—Å—Ç–æ–π ‚Äî —Å—Ç–∞—Ä—Ç—É–µ–º —Å –≥–ª–∞–≤–Ω–æ–π
            this.navigate('/home', { replace: true });
        }
    }
    
    /**
     * üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É
     * @param {string} path - –ü—É—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
     * @param {NavigationOptions} options - –û–ø—Ü–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    async navigate(path, options = {}) {
        const normalizedPath = this.normalizePath(path);
        const query = this.parseQuery(path);
        console.log(`üß≠ Router: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ ${normalizedPath} (–∏—Å—Ö–æ–¥–Ω—ã–π: ${path})`, query);

        // –£—Å–∏–ª–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if (this.isNavigating && !options.force) {
            console.log('‚ö†Ô∏è Router: –ù–∞–≤–∏–≥–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –Ω–∞ —Ç–æ—Ç –∂–µ –ø—É—Ç—å
        if (this._lastNavigationPath === normalizedPath && 
            Date.now() - this._lastNavigationTime < 500 && 
            !options.force) {
            console.log('‚ö†Ô∏è Router: –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ç–æ—Ç –∂–µ –ø—É—Ç—å');
            return;
        }

        // –ù–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ç—É –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (–µ—Å–ª–∏ –Ω–µ force)
        if (this.currentRoute === normalizedPath && !options.replace && !options.force) {
            console.log('‚ö†Ô∏è Router: –£–∂–µ –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º');
            return;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this._lastNavigationPath = normalizedPath;
        this._lastNavigationTime = Date.now();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
        const route = this.routes.get(normalizedPath);
        if (!route) {
            console.warn(`‚ö†Ô∏è Router: –ú–∞—Ä—à—Ä—É—Ç ${normalizedPath} –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /home`);
            return this.navigate('/home', { replace: true });
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
        if (route.requiresAuth && !this.isAuthenticated()) {
            console.warn('‚ö†Ô∏è Router: –¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è');
            return this.navigate('/onboarding', { replace: true });
        }

        try {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            this.isNavigating = true;
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            await this.animatePageExit();
            
            // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            await this.destroyCurrentComponent();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
            this.showPageLoading();
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            const componentState = {
                ...options.state,
                query: query
            };
            await this.createComponent(route, componentState);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º URL –∏ –∏—Å—Ç–æ—Ä–∏—é (—Å–æ—Ö—Ä–∞–Ω—è—è query string)
            this.updateUrl(path, options.replace);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateUI(route);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç
            this.currentRoute = normalizedPath;
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ö–æ–¥–∞ –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            await this.animatePageEnter();
            
            // –í—ã–∑—ã–≤–∞–µ–º onShow –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            if (this.currentComponent && typeof this.currentComponent.onShow === 'function') {
                this.currentComponent.onShow();
                console.log(`‚úÖ Router: onShow –≤—ã–∑–≤–∞–Ω –¥–ª—è ${route.title}`);
            }
            
            console.log(`‚úÖ Router: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ ${normalizedPath} –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
            
        } catch (error) {
            console.error(`‚ùå Router: –û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ ${normalizedPath}:`, error);
            this.handleNavigationError(error);
        } finally {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            this.isNavigating = false;
        }
    }

    /**
     * üé¨ –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã—Ö–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    async animatePageExit() {
        if (!this.container) return;
        
        console.log('üé¨ Router: –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã—Ö–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        
        return new Promise(resolve => {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –≤—ã—Ö–æ–¥–∞
            this.container.classList.add('page-exit');
            this.container.classList.add('page-exit-active');
            
            // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—Ö–æ–¥–∞
            this.container.classList.remove('page-enter', 'page-enter-active', 'animate-slide-in');
            
            // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
            const duration = 200; // –ë—ã—Å—Ç—Ä–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –≤—ã—Ö–æ–¥–∞
            setTimeout(() => {
                this.container.classList.remove('page-exit', 'page-exit-active');
                resolve();
            }, duration);
        });
    }

    /**
     * üé¨ –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ö–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    async animatePageEnter() {
        if (!this.container) return;
        
        console.log('üé¨ Router: –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ö–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        
        return new Promise(resolve => {
            // –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
            this.hidePageLoading();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –≤—Ö–æ–¥–∞
            this.container.classList.add('page-enter');
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ requestAnimationFrame –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏
            requestAnimationFrame(() => {
                this.container.classList.add('page-enter-active');
                this.container.classList.remove('page-enter');
                
                // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
                const duration = 300; // –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –≤—Ö–æ–¥–∞
                setTimeout(() => {
                    this.container.classList.remove('page-enter-active');
                    resolve();
                }, duration);
            });
        });
    }

    /**
     * ‚è≥ –ü–æ–∫–∞–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    showPageLoading() {
        if (this.container) {
            this.container.classList.add('page-loading');
            console.log('‚è≥ Router: –ü–æ–∫–∞–∑–∞–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏');
        }
    }

    /**
     * ‚úÖ –°–∫—Ä—ã—Ç–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    hidePageLoading() {
        if (this.container) {
            this.container.classList.remove('page-loading');
            console.log('‚úÖ Router: –°–∫—Ä—ã—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏');
        }
    }

    /**
     * üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     * @param {RouteConfig} route - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
     * @param {Object} state - –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
     */
    async createComponent(route, state = {}) {
        console.log(`üèóÔ∏è Router: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ${route.title}`);
        
        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç app —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
        const appObject = {
            // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
            state: this.state,
            api: this.api,
            telegram: this.telegram,
            router: this,
            
            // –ú–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–∂–∏–¥–∞—é—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            showTopMenu: () => {
                console.log('üìã App: showTopMenu –≤—ã–∑–≤–∞–Ω');
                if (this.app && typeof this.app.showTopMenu === 'function') {
                    this.app.showTopMenu();
                } else {
                    console.warn('‚ö†Ô∏è showTopMenu –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É');
                    if (this.telegram && typeof this.telegram.showAlert === 'function') {
                        this.telegram.showAlert('–ú–µ–Ω—é –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ');
                    } else {
                        alert('–ú–µ–Ω—é –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ');
                    }
                }
            },
            
            hideTopMenu: () => {
                if (this.app && typeof this.app.hideTopMenu === 'function') {
                    this.app.hideTopMenu();
                }
            },
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            initialState: state
        };

        try {
            // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π app
            this.currentComponent = new route.component(appObject);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            if (this.currentComponent && typeof this.currentComponent.init === 'function') {
                await this.currentComponent.init();
            }
            
            // –†–µ–Ω–¥–µ—Ä–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            if (this.currentComponent && typeof this.currentComponent.render === 'function') {
                const html = await this.currentComponent.render();
                if (html && this.container) {
                    this.container.innerHTML = html;
                    
                    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
                    this.container.classList.remove(
                        'page-enter', 'page-enter-active', 
                        'page-exit', 'page-exit-active',
                        'animate-slide-in', 'animate-slide-out'
                    );
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–∞ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º
                    if (this.currentComponent && typeof this.currentComponent.attachEventListeners === 'function') {
                        this.currentComponent.attachEventListeners();
                    } else {
                        console.warn(`‚ö†Ô∏è Router: attachEventListeners –Ω–µ –Ω–∞–π–¥–µ–Ω —É ${route.title}`);
                    }
                }
            }
            
            console.log(`‚úÖ Router: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${route.title} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
            
        } catch (error) {
            console.error(`‚ùå Router: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ${route.title}:`, error);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
            if (this.container) {
                this.container.innerHTML = `
                    <div class="error-page">
                        <h2>‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h2>
                        <p>${error.message}</p>
                        <button onclick="window.location.reload()">üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
                    </div>
                `;
            }
            
            throw error;
        }
    }

    /**
     * üí• –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    async destroyCurrentComponent() {
        if (!this.currentComponent) return;
        
        console.log('üí• Router: –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
        
        // –í—ã–∑—ã–≤–∞–µ–º onHide –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        if (this.currentComponent && typeof this.currentComponent.onHide === 'function') {
            this.currentComponent.onHide();
            console.log('‚úÖ Router: onHide –≤—ã–∑–≤–∞–Ω –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
        }
        
        // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –æ—á–∏—Å—Ç–∫–∏ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (this.currentComponent && typeof this.currentComponent.destroy === 'function') {
            await this.currentComponent.destroy();
        }
        
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ —É–±–∏—Ä–∞–µ–º –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã
        if (this.container) {
            this.container.innerHTML = '';
            this.container.classList.remove(
                'page-enter', 'page-enter-active', 
                'page-exit', 'page-exit-active',
                'page-loading', 'animate-slide-in', 'animate-slide-out'
            );
        }
        
        this.currentComponent = null;
    }

    updateUrl(path, replace = false) {
        // Don't normalize the path here to preserve query string
        const url = `#${path.startsWith('/') ? path : '/' + path}`;
        const normalizedPath = this.normalizePath(path);
    
        if (replace) {
            window.history.replaceState({ path: normalizedPath }, '', url);
        } else {
            window.history.pushState({ path: normalizedPath }, '', url);
            this.history.push(normalizedPath);
        }

        // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º Telegram BackButton (–ø–æ—Å–∫–æ–ª—å–∫—É hashchange –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç)
        if (this.app && typeof this.app.updateBackButtonVisibility === 'function') {
        try {
            this.app.updateBackButtonVisibility(normalizedPath);
            } catch (e) {
            console.warn('Router: updateBackButtonVisibility failed:', e);
            }
        }
    }

    /**
     * üé® –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
     * @param {RouteConfig} route - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
     */
    updateUI(route) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        document.title = `${route.title} - –ß–∏—Ç–∞—Ç–µ–ª—å`;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –Ω–∏–∂–Ω—é—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        const bottomNav = document.getElementById('bottom-nav');
        if (bottomNav) {
            bottomNav.style.display = route.showBottomNav ? 'flex' : 'none';
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.updateActiveNavigation(route.path);
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram –æ —Å–º–µ–Ω–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        if (window.Telegram?.WebApp) {
            window.Telegram.WebApp.setHeaderColor('bg_color');
        }
    }

    /**
     * üéØ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     * @param {string} path - –ê–∫—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å
     */
    updateActiveNavigation(path) {
        const navButtons = document.querySelectorAll('.nav-item');
        
        navButtons.forEach(button => {
            const buttonPath = '/' + button.dataset.page;
            button.classList.toggle('active', buttonPath === path);
        });
    }

    /**
     * ‚¨ÖÔ∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞–∑–∞–¥
     */
    goBack() {
        console.log('‚¨ÖÔ∏è Router: –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞–∑–∞–¥');
        
        if (this.history.length > 1) {
            // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
            this.history.pop();
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π
            const previousPath = this.history.pop();
            this.navigate(previousPath);
        } else {
            // –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç, –∏–¥–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
            this.navigate('/home', { replace: true });
        }
    }

    /**
     * üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    reload() {
        console.log('üîÑ Router: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        this.navigate(this.currentRoute, { replace: true });
    }

    /**
     * üì° –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è popstate (–∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥")
     * @param {PopStateEvent} event - –°–æ–±—ã—Ç–∏–µ popstate
     */
    handlePopState(event) {
        console.log('üì° Router: –û–±—Ä–∞–±–æ—Ç–∫–∞ popstate');
        
        // Use current hash to preserve query parameters
        const rawHash = window.location.hash.slice(1);
        const path = rawHash || '/home';
        
        // –ù–∞–≤–∏–≥–∏—Ä—É–µ–º –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
        this.navigate(path, { replace: true });
    }

    /**
     * üñ±Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
     */
    handleNavigation(event) {
        const navItem = event.target.closest('.nav-item');
        if (!navItem) return;
        
        event.preventDefault();
        
        const page = navItem.dataset.page;
        if (page) {
            this.navigate(`/${page}`);
            
            // Haptic feedback –¥–ª—è Telegram
            if (window.Telegram?.WebApp?.HapticFeedback) {
                window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
            }
        }
    }

    /**
     * üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {boolean} - –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     */
    isAuthenticated() {
        return this.state?.get('user.isAuthenticated') || false;
    }

    /**
     * ‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     * @param {Error} error - –û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    handleNavigationError(error) {
        console.error('‚ùå Router: –û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (window.showNotification) {
            showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã', 'error');
        }
        
        // –ü—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        setTimeout(() => {
            this.navigate('/home', { replace: true });
        }, 1000);
    }

    /**
     * üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –º–∞—Ä—à—Ä—É—Ç–µ
     * @returns {RouteConfig|null} - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
     */
    getCurrentRoute() {
        return this.routes.get(this.currentRoute) || null;
    }

    /**
     * üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
     * @returns {Array<RouteConfig>} - –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
     */
    getAllRoutes() {
        return Array.from(this.routes.values());
    }

    /**
     * üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ —Ä–æ—É—Ç–µ—Ä–∞
     */
    destroy() {
        console.log('üßπ Router: –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤');
        
        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        window.removeEventListener('popstate', this.handlePopState);
        
        const bottomNav = document.getElementById('bottom-nav');
        if (bottomNav) {
            bottomNav.removeEventListener('click', this.handleNavigation);
        }
        
        // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        this.destroyCurrentComponent();
        
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        this.routes.clear();
        this.history = [];
        this.currentRoute = '';
        this.isInitialized = false;
        this.isNavigating = false;
        
        console.log('‚úÖ Router: –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }

    /**
     * üîÑ Normalize path for consistent routing
     * @param {string} path - Raw path (may include # and query string)
     * @returns {string} - Normalized path with leading / but without query string
     */
    normalizePath(path) {
        if (!path || typeof path !== 'string') {
            return '/home';
        }
        
        // Strip any leading #
        let normalized = path.replace(/^#+/, '');
        
        // Strip query string for route matching
        const queryIndex = normalized.indexOf('?');
        if (queryIndex !== -1) {
            normalized = normalized.substring(0, queryIndex);
        }
        
        // Ensure starts with /
        if (!normalized.startsWith('/')) {
            normalized = '/' + normalized;
        }
        
        // Fall back to /home when empty
        if (normalized === '/' || normalized === '') {
            normalized = '/home';
        }
        
        return normalized;
    }

    /**
     * üîç Parse query string from path
     * @param {string} path - Path that may include query string
     * @returns {Object} - Parsed query parameters
     */
    parseQuery(path) {
        if (!path || typeof path !== 'string') {
            return {};
        }
        
        // Strip any leading #
        let cleanPath = path.replace(/^#+/, '');
        
        const queryIndex = cleanPath.indexOf('?');
        if (queryIndex === -1) {
            return {};
        }
        
        const queryString = cleanPath.substring(queryIndex + 1);
        const query = {};
        
        if (queryString) {
            const pairs = queryString.split('&');
            for (const pair of pairs) {
                const [key, value] = pair.split('=');
                if (key) {
                    query[decodeURIComponent(key)] = value ? decodeURIComponent(value) : '';
                }
            }
        }
        
        return query;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.AppRouter = AppRouter;
