/**
 * ‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø - SettingsModal.js
 * 
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏
 * - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º–Ω–æ–π/—Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
 * - –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å—é
 * - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
 * - –ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞
 * - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
 */

class SettingsModal {
    constructor(app) {
        this.app = app;
        this.api = app.api;
        this.state = app.state;
        this.telegram = app.telegram;
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        this.modal = null;
        this.isVisible = false;
        this.settings = {};
        this.saving = false;
        
        // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        this.defaultSettings = this.getDefaultSettings();
        
        // –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        this.subscriptions = [];
        
        this.init();
    }
    
    /**
     * üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    init() {
        this.setupSubscriptions();
        this.loadSettings();
    }
    
    /**
     * üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    setupSubscriptions() {
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        const settingsSubscription = this.state.subscribe('settings', (settings) => {
            this.settings = { ...this.defaultSettings, ...settings };
            this.updateUI();
        });
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
        const themeSubscription = this.state.subscribe('theme', (theme) => {
            this.settings.theme = theme;
            this.updateThemeUI();
        });
        
        this.subscriptions.push(settingsSubscription, themeSubscription);
    }
    
    /**
     * ‚öôÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async loadSettings() {
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
            const serverSettings = await this.api.getSettings();
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            const localSettings = this.loadLocalSettings();
            
            // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            this.settings = {
                ...this.defaultSettings,
                ...serverSettings,
                ...localSettings
            };
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            this.state.set('settings', this.settings);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            this.settings = { ...this.defaultSettings };
        }
    }
    
    /**
     * üîì –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    show() {
        if (this.isVisible) return;
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.modal = new Modal({
            title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
            content: this.renderContent(),
            size: 'medium',
            showCloseButton: true,
            onOpen: () => {
                this.isVisible = true;
                this.attachEventListeners();
            },
            onClose: () => {
                this.isVisible = false;
                this.cleanup();
            }
        });
        
        this.modal.open();
        
        // Haptic feedback
        this.triggerHaptic('medium');
    }
    
    /**
     * üîí –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    hide() {
        if (this.modal && this.isVisible) {
            this.modal.close();
        }
    }
    
    /**
     * üé® –†–µ–Ω–¥–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    renderContent() {
        return `
            <div class="settings-modal">
                ${this.renderNotificationsGroup()}
                ${this.renderAppearanceGroup()}
                ${this.renderDataGroup()}
                ${this.renderAccountGroup()}
                ${this.renderSupportGroup()}
                ${this.renderAboutGroup()}
            </div>
        `;
    }
    
    /**
     * üîî –†–µ–Ω–¥–µ—Ä –≥—Ä—É–ø–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    renderNotificationsGroup() {
        const { notifications } = this.settings;
        
        return `
            <div class="settings-group">
                <div class="settings-group-title">üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-icon">üîî</span>
                        <div class="settings-text">
                            <div class="settings-label">–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</div>
                            <div class="settings-description">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–æ–±–∞–≤–∏—Ç—å —Ü–∏—Ç–∞—Ç—É</div>
                        </div>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" id="dailyReminders" ${notifications.daily ? 'checked' : ''}>
                        <span class="slider"></span>
                    </label>
                </div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-icon">üìä</span>
                        <div class="settings-text">
                            <div class="settings-label">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã</div>
                            <div class="settings-description">–ü–æ–ª—É—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑ –æ—Ç –ê–Ω–Ω—ã</div>
                        </div>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" id="weeklyReports" ${notifications.weekly ? 'checked' : ''}>
                        <span class="slider"></span>
                    </label>
                </div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-icon">üèÜ</span>
                        <div class="settings-text">
                            <div class="settings-label">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</div>
                            <div class="settings-description">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –Ω–∞–≥—Ä–∞–¥–∞—Ö</div>
                        </div>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" id="achievements" ${notifications.achievements ? 'checked' : ''}>
                        <span class="slider"></span>
                    </label>
                </div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-icon">üìö</span>
                        <div class="settings-text">
                            <div class="settings-label">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥</div>
                            <div class="settings-description">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –æ—Ç –ê–Ω–Ω—ã</div>
                        </div>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" id="bookRecommendations" ${notifications.books ? 'checked' : ''}>
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
        `;
    }
    
    /**
     * üé® –†–µ–Ω–¥–µ—Ä –≥—Ä—É–ø–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
     */
    renderAppearanceGroup() {
        const { theme, fontSize, compactMode } = this.settings;
        
        return `
            <div class="settings-group">
                <div class="settings-group-title">üé® –í–Ω–µ—à–Ω–∏–π –≤–∏–¥</div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-icon">${theme === 'dark' ? 'üåô' : '‚òÄÔ∏è'}</span>
                        <div class="settings-text">
                            <div class="settings-label">–¢–µ–º–Ω–∞—è —Ç–µ–º–∞</div>
                            <div class="settings-description">–¢–µ–º–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</div>
                        </div>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" id="darkTheme" ${theme === 'dark' ? 'checked' : ''}>
                        <span class="slider"></span>
                    </label>
                </div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-icon">üìè</span>
                        <div class="settings-text">
                            <div class="settings-label">–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞</div>
                            <div class="settings-description">–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞</div>
                        </div>
                    </div>
                    <div class="font-size-controls">
                        <button class="font-size-btn ${fontSize === 'small' ? 'active' : ''}" data-size="small">–ê</button>
                        <button class="font-size-btn ${fontSize === 'medium' ? 'active' : ''}" data-size="medium">–ê</button>
                        <button class="font-size-btn ${fontSize === 'large' ? 'active' : ''}" data-size="large">–ê</button>
                    </div>
                </div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-icon">üì±</span>
                        <div class="settings-text">
                            <div class="settings-label">–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º</div>
                            <div class="settings-description">–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ</div>
                        </div>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" id="compactMode" ${compactMode ? 'checked' : ''}>
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
        `;
    }
    
    /**
     * üìä –†–µ–Ω–¥–µ—Ä –≥—Ä—É–ø–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–∞–Ω–Ω—ã—Ö
     */
    renderDataGroup() {
        return `
            <div class="settings-group">
                <div class="settings-group-title">üìä –î–∞–Ω–Ω—ã–µ</div>
                
                <div class="settings-item clickable" id="exportData">
                    <div class="settings-item-info">
                        <span class="settings-icon">üì§</span>
                        <div class="settings-text">
                            <div class="settings-label">–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</div>
                            <div class="settings-description">–°–∫–∞—á–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
                
                <div class="settings-item clickable" id="importData">
                    <div class="settings-item-info">
                        <span class="settings-icon">üì•</span>
                        <div class="settings-text">
                            <div class="settings-label">–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</div>
                            <div class="settings-description">–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ü–∏—Ç–∞—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
                
                <div class="settings-item clickable" id="dataUsage">
                    <div class="settings-item-info">
                        <span class="settings-icon">üìà</span>
                        <div class="settings-text">
                            <div class="settings-label">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</div>
                            <div class="settings-description">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
            </div>
        `;
    }
    
    /**
     * üë§ –†–µ–Ω–¥–µ—Ä –≥—Ä—É–ø–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–∫–∫–∞—É–Ω—Ç–∞
     */
    renderAccountGroup() {
        return `
            <div class="settings-group">
                <div class="settings-group-title">üë§ –ê–∫–∫–∞—É–Ω—Ç</div>
                
                <div class="settings-item clickable" id="privacy">
                    <div class="settings-item-info">
                        <span class="settings-icon">üîí</span>
                        <div class="settings-text">
                            <div class="settings-label">–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</div>
                            <div class="settings-description">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å—é</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
                
                <div class="settings-item clickable" id="resetData">
                    <div class="settings-item-info">
                        <span class="settings-icon">üîÑ</span>
                        <div class="settings-text">
                            <div class="settings-label">–°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å</div>
                            <div class="settings-description">–ù–∞—á–∞—Ç—å —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
                
                <div class="settings-item clickable danger" id="deleteAccount">
                    <div class="settings-item-info">
                        <span class="settings-icon">üóëÔ∏è</span>
                        <div class="settings-text">
                            <div class="settings-label">–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</div>
                            <div class="settings-description">–ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
            </div>
        `;
    }
    
    /**
     * üí¨ –†–µ–Ω–¥–µ—Ä –≥—Ä—É–ø–ø—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
     */
    renderSupportGroup() {
        return `
            <div class="settings-group">
                <div class="settings-group-title">üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞</div>
                
                <div class="settings-item clickable" id="help">
                    <div class="settings-item-info">
                        <span class="settings-icon">‚ùì</span>
                        <div class="settings-text">
                            <div class="settings-label">–ü–æ–º–æ—â—å</div>
                            <div class="settings-description">FAQ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
                
                <div class="settings-item clickable" id="contact">
                    <div class="settings-item-info">
                        <span class="settings-icon">üìß</span>
                        <div class="settings-text">
                            <div class="settings-label">–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</div>
                            <div class="settings-description">–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
                
                <div class="settings-item clickable" id="feedback">
                    <div class="settings-item-info">
                        <span class="settings-icon">‚≠ê</span>
                        <div class="settings-text">
                            <div class="settings-label">–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</div>
                            <div class="settings-description">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–Ω–µ–Ω–∏–µ–º</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
            </div>
        `;
    }
    
    /**
     * ‚ÑπÔ∏è –†–µ–Ω–¥–µ—Ä –≥—Ä—É–ø–ø—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
     */
    renderAboutGroup() {
        return `
            <div class="settings-group">
                <div class="settings-group-title">‚ÑπÔ∏è –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-icon">üì±</span>
                        <div class="settings-text">
                            <div class="settings-label">–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</div>
                            <div class="settings-description">1.0.2</div>
                        </div>
                    </div>
                </div>
                
                <div class="settings-item clickable" id="about">
                    <div class="settings-item-info">
                        <span class="settings-icon">üë©‚Äçüíº</span>
                        <div class="settings-text">
                            <div class="settings-label">–û–± –ê–Ω–Ω–µ –ë—É—Å–µ–ª</div>
                            <div class="settings-description">–ê–≤—Ç–æ—Ä –∏ –ø—Å–∏—Ö–æ–ª–æ–≥</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
                
                <div class="settings-item clickable" id="terms">
                    <div class="settings-item-info">
                        <span class="settings-icon">üìÑ</span>
                        <div class="settings-text">
                            <div class="settings-label">–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</div>
                            <div class="settings-description">–ü—Ä–∞–≤–∏–ª–∞ –∏ –ø–æ–ª–∏—Ç–∏–∫–∞</div>
                        </div>
                    </div>
                    <span class="chevron-icon">‚Ä∫</span>
                </div>
            </div>
        `;
    }
    
    /**
     * üì± –ù–∞–≤–µ—à–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    attachEventListeners() {
        // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ (toggle switches)
        this.attachToggleListeners();
        
        // –ö–Ω–æ–ø–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
        this.attachFontSizeListeners();
        
        // –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.attachClickableListeners();
    }
    
    /**
     * üîÑ –ù–∞–≤–µ—à–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π
     */
    attachToggleListeners() {
        const toggles = [
            { id: 'dailyReminders', setting: 'notifications.daily' },
            { id: 'weeklyReports', setting: 'notifications.weekly' },
            { id: 'achievements', setting: 'notifications.achievements' },
            { id: 'bookRecommendations', setting: 'notifications.books' },
            { id: 'darkTheme', setting: 'theme', handler: this.handleThemeToggle.bind(this) },
            { id: 'compactMode', setting: 'compactMode' }
        ];
        
        toggles.forEach(toggle => {
            const element = document.getElementById(toggle.id);
            if (element) {
                element.addEventListener('change', (e) => {
                    if (toggle.handler) {
                        toggle.handler(e.target.checked);
                    } else {
                        this.updateSetting(toggle.setting, e.target.checked);
                    }
                });
            }
        });
    }
    
    /**
     * üìè –ù–∞–≤–µ—à–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
     */
    attachFontSizeListeners() {
        const fontSizeButtons = document.querySelectorAll('.font-size-btn');
        fontSizeButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                const size = e.target.dataset.size;
                this.handleFontSizeChange(size);
            });
        });
    }
    
    /**
     * üñ±Ô∏è –ù–∞–≤–µ—à–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    attachClickableListeners() {
        const clickableItems = [
            { id: 'exportData', handler: this.handleExportData.bind(this) },
            { id: 'importData', handler: this.handleImportData.bind(this) },
            { id: 'dataUsage', handler: this.handleDataUsage.bind(this) },
            { id: 'privacy', handler: this.handlePrivacy.bind(this) },
            { id: 'resetData', handler: this.handleResetData.bind(this) },
            { id: 'deleteAccount', handler: this.handleDeleteAccount.bind(this) },
            { id: 'help', handler: this.handleHelp.bind(this) },
            { id: 'contact', handler: this.handleContact.bind(this) },
            { id: 'feedback', handler: this.handleFeedback.bind(this) },
            { id: 'about', handler: this.handleAbout.bind(this) },
            { id: 'terms', handler: this.handleTerms.bind(this) }
        ];
        
        clickableItems.forEach(item => {
            const element = document.getElementById(item.id);
            if (element) {
                element.addEventListener('click', item.handler);
            }
        });
    }
    
    /**
     * üåô –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
     */
    handleThemeToggle(isDark) {
        const newTheme = isDark ? 'dark' : 'light';
        this.updateSetting('theme', newTheme);
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
        this.applyTheme(newTheme);
        
        // Haptic feedback
        this.triggerHaptic('medium');
    }
    
    /**
     * üìè –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
     */
    handleFontSizeChange(size) {
        this.updateSetting('fontSize', size);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
        document.querySelectorAll('.font-size-btn').forEach(btn => {
            btn.classList.remove('active');
        });
        document.querySelector(`[data-size="${size}"]`).classList.add('active');
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
        this.applyFontSize(size);
        
        // Haptic feedback
        this.triggerHaptic('light');
    }
    
    /**
     * üì§ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
     */
    async handleExportData() {
        try {
            // Haptic feedback
            this.triggerHaptic('medium');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            this.showExportLoading(true);
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
            const exportData = await this.api.exportUserData();
            
            // –°–æ–∑–¥–∞–µ–º –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            this.downloadExportFile(exportData);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
            this.showMessage('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö:', error);
            this.showMessage('–ù–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ', 'error');
        } finally {
            this.showExportLoading(false);
        }
    }
    
    /**
     * üì• –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
     */
    handleImportData() {
        // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä—ã—Ç—ã–π input –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        const fileInput = document.createElement('input');
        fileInput.type = 'file';
        fileInput.accept = '.json,.csv,.txt';
        fileInput.style.display = 'none';
        
        fileInput.addEventListener('change', async (e) => {
            const file = e.target.files[0];
            if (file) {
                await this.processImportFile(file);
            }
        });
        
        document.body.appendChild(fileInput);
        fileInput.click();
        document.body.removeChild(fileInput);
        
        // Haptic feedback
        this.triggerHaptic('medium');
    }
    
    /**
     * üìä –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
     */
    async handleDataUsage() {
        try {
            const usage = await this.api.getDataUsage();
            
            const usageModal = new Modal({
                title: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö',
                content: `
                    <div class="data-usage">
                        <div class="usage-item">
                            <span class="usage-label">–¶–∏—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:</span>
                            <span class="usage-value">${usage.quotesCount}</span>
                        </div>
                        <div class="usage-item">
                            <span class="usage-label">–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:</span>
                            <span class="usage-value">${this.formatBytes(usage.dataSize)}</span>
                        </div>
                        <div class="usage-item">
                            <span class="usage-label">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
                            <span class="usage-value">${this.formatDate(usage.registrationDate)}</span>
                        </div>
                        <div class="usage-item">
                            <span class="usage-label">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</span>
                            <span class="usage-value">${this.formatDate(usage.lastActivity)}</span>
                        </div>
                    </div>
                `,
                size: 'small',
                buttons: [{ text: '–ó–∞–∫—Ä—ã—Ç—å', variant: 'primary' }]
            });
            
            usageModal.open();
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏:', error);
            this.showMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', 'error');
        }
        
        // Haptic feedback
        this.triggerHaptic('light');
    }
    
    /**
     * üîí –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
     */
    handlePrivacy() {
        const privacyModal = new Modal({
            title: '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å',
            content: `
                <div class="privacy-settings">
                    <div class="privacy-section">
                        <h4>üìä –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö</h4>
                        <p>–ú—ã —Å–æ–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–µ: –≤–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.</p>
                    </div>
                    
                    <div class="privacy-section">
                        <h4>üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h4>
                        <p>–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—é –∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ.</p>
                    </div>
                    
                    <div class="privacy-section">
                        <h4>üìß –°–≤—è–∑—å —Å –≤–∞–º–∏</h4>
                        <p>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à email —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –∏ –≤–∞–∂–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.</p>
                    </div>
                    
                    <div class="privacy-controls">
                        <div class="privacy-item">
                            <span>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</span>
                            <label class="toggle-switch">
                                <input type="checkbox" id="analyticsConsent" ${this.settings.privacy?.analytics !== false ? 'checked' : ''}>
                                <span class="slider"></span>
                            </label>
                        </div>
                    </div>
                </div>
            `,
            size: 'medium',
            buttons: [
                { text: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å', variant: 'primary', onClick: () => this.savePrivacySettings() }
            ]
        });
        
        privacyModal.open();
        
        // Haptic feedback
        this.triggerHaptic('light');
    }
    
    /**
     * üîÑ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö
     */
    async handleResetData() {
        const confirmed = await Modal.confirm(
            '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.',
            '–°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞'
        );
        
        if (confirmed) {
            try {
                await this.api.resetUserData();
                
                // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                this.app.state.clear();
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
                this.showMessage('–ü—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω', 'success');
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                this.hide();
                this.app.router.navigate('/onboarding');
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö:', error);
                this.showMessage('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', 'error');
            }
        }
        
        // Haptic feedback
        this.triggerHaptic('heavy');
    }
    
    /**
     * üóëÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
     */
    async handleDeleteAccount() {
        const confirmed = await Modal.confirm(
            '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É—Ç–µ—Ä—è–Ω—ã.',
            '–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞'
        );
        
        if (confirmed) {
            const doubleConfirmed = await Modal.confirm(
                '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç?',
                '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ'
            );
            
            if (doubleConfirmed) {
                try {
                    await this.api.deleteAccount();
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—â–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    Modal.alert('–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏ —Å –Ω–∞–º–∏!', '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è');
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                    setTimeout(() => {
                        if (this.telegram) {
                            this.telegram.close();
                        } else {
                            window.close();
                        }
                    }, 3000);
                    
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞:', error);
                    this.showMessage('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', 'error');
                }
            }
        }
        
        // Haptic feedback
        this.triggerHaptic('heavy');
    }
    
    /**
     * ‚ùì –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–º–æ—â–∏
     */
    handleHelp() {
        const helpModal = new Modal({
            title: '–ü–æ–º–æ—â—å',
            content: `
                <div class="help-content">
                    <div class="help-section">
                        <h4>‚ùì –ö–∞–∫ –¥–æ–±–∞–≤–ª—è—Ç—å —Ü–∏—Ç–∞—Ç—ã?</h4>
                        <p>–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã –±–æ—Ç—É. –ï—Å–ª–∏ –µ—Å—Ç—å –∞–≤—Ç–æ—Ä - —É–∫–∞–∂–∏—Ç–µ –≤ —Å–∫–æ–±–∫–∞—Ö –∏–ª–∏ —á–µ—Ä–µ–∑ —Ç–∏—Ä–µ.</p>
                    </div>
                    
                    <div class="help-section">
                        <h4>üìä –ö–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç –æ—Ç—á–µ—Ç—ã?</h4>
                        <p>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 11:00. –ú–µ—Å—è—á–Ω—ã–µ - –≤ –ø–µ—Ä–≤—ã—Ö —á–∏—Å–ª–∞—Ö –º–µ—Å—è—Ü–∞.</p>
                    </div>
                    
                    <div class="help-section">
                        <h4>ü§ñ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –ê–Ω–Ω—ã?</h4>
                        <p>–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã –∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ —Ç–µ—Å—Ç–∞ –ø–æ–¥–±–∏—Ä–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥.</p>
                    </div>
                    
                    <div class="help-section">
                        <h4>üì± –ú–æ–∂–Ω–æ –ª–∏ —É–¥–∞–ª–∏—Ç—å —Ü–∏—Ç–∞—Ç—É?</h4>
                        <p>–î–∞! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ "‚ãØ" —Ä—è–¥–æ–º —Å —Ü–∏—Ç–∞—Ç–æ–π –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "–£–¥–∞–ª–∏—Ç—å" –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É.</p>
                    </div>
                    
                    <div class="help-section">
                        <h4>üéÅ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥?</h4>
                        <p>–ü—Ä–æ–º–æ–∫–æ–¥—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞—Ö. –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏.</p>
                    </div>
                    
                    <div class="help-contact">
                        <h4>üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</h4>
                        <p>‚Ä¢ Telegram: @annabusel_support<br>
                        ‚Ä¢ Email: help@annabusel.org<br>
                        ‚Ä¢ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: –¥–æ 24 —á–∞—Å–æ–≤</p>
                    </div>
                </div>
            `,
            size: 'medium',
            buttons: [{ text: '–ü–æ–Ω—è—Ç–Ω–æ', variant: 'primary' }]
        });
        
        helpModal.open();
        
        // Haptic feedback
        this.triggerHaptic('light');
    }
    
    /**
     * üìß –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–≤—è–∑–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
     */
    handleContact() {
        const contactModal = new Modal({
            title: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏',
            content: `
                <div class="contact-content">
                    <div class="contact-option" onclick="window.open('https://t.me/annabusel_support')">
                        <span class="contact-icon">üí¨</span>
                        <div class="contact-info">
                            <div class="contact-title">Telegram</div>
                            <div class="contact-description">@annabusel_support</div>
                        </div>
                    </div>
                    
                    <div class="contact-option" onclick="window.open('mailto:help@annabusel.org')">
                        <span class="contact-icon">üìß</span>
                        <div class="contact-info">
                            <div class="contact-title">Email</div>
                            <div class="contact-description">help@annabusel.org</div>
                        </div>
                    </div>
                    
                    <div class="contact-info-block">
                        <p>‚è∞ <strong>–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:</strong> –¥–æ 24 —á–∞—Å–æ–≤</p>
                        <p>üåç <strong>–Ø–∑—ã–∫ –ø–æ–¥–¥–µ—Ä–∂–∫–∏:</strong> —Ä—É—Å—Å–∫–∏–π</p>
                    </div>
                </div>
            `,
            size: 'small',
            buttons: [{ text: '–ó–∞–∫—Ä—ã—Ç—å', variant: 'primary' }]
        });
        
        contactModal.open();
        
        // Haptic feedback
        this.triggerHaptic('light');
    }
    
    /**
     * ‚≠ê –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ü–µ–Ω–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    handleFeedback() {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –æ—Ç–∑—ã–≤–æ–≤
        Modal.alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –∂–µ–ª–∞–Ω–∏–µ –æ—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ! –§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.', '–û—Ü–µ–Ω–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
        
        // Haptic feedback
        this.triggerHaptic('light');
    }
    
    /**
     * üë©‚Äçüíº –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –ê–Ω–Ω–µ
     */
    handleAbout() {
        const aboutModal = new Modal({
            title: '–û–± –ê–Ω–Ω–µ –ë—É—Å–µ–ª',
            content: `
                <div class="about-content">
                    <div class="anna-card">
                        <div class="anna-photo">üë©‚Äçüíº</div>
                        <div class="anna-name">–ê–Ω–Ω–∞ –ë—É—Å–µ–ª</div>
                        <div class="anna-role">–ü—Å–∏—Ö–æ–ª–æ–≥ ‚Ä¢ –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å "–ö–Ω–∏–∂–Ω–æ–≥–æ –∫–ª—É–±–∞"</div>
                        <div class="anna-quote">"–•–æ—Ä–æ—à–∞—è –∂–∏–∑–Ω—å —Å—Ç—Ä–æ–∏—Ç—Å—è, –∞ –Ω–µ –¥–∞–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –î–∞–≤–∞–π—Ç–µ —Å—Ç—Ä–æ–∏—Ç—å –≤–∞—à—É –≤–º–µ—Å—Ç–µ!"</div>
                    </div>
                    
                    <div class="about-text">
                        <p>"–ß–∏—Ç–∞—Ç–µ–ª—å" ‚Äî —ç—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ —Ü–∏—Ç–∞—Ç —Å AI-–∞–Ω–∞–ª–∏–∑–æ–º –æ—Ç –ê–Ω–Ω—ã –ë—É—Å–µ–ª. –°–æ–±–∏—Ä–∞–π—Ç–µ –º—É–¥—Ä–æ—Å—Ç—å, –ø–æ–ª—É—á–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥ –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ—Å—å –≤–º–µ—Å—Ç–µ —Å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤.</p>
                    </div>
                    
                    <div class="app-stats">
                        <div class="stat-item">
                            <span class="stat-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</span>
                            <span class="stat-value">2,847</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">–¶–∏—Ç–∞—Ç —Å–æ–±—Ä–∞–Ω–æ:</span>
                            <span class="stat-value">15,392</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">–í–µ—Ä—Å–∏—è:</span>
                            <span class="stat-value">1.0.2</span>
                        </div>
                    </div>
                    
                    <div class="social-links">
                        <a href="#" class="social-link">üì∑ Instagram</a>
                        <a href="#" class="social-link">üí¨ Telegram</a>
                        <a href="#" class="social-link">üåê –°–∞–π—Ç</a>
                    </div>
                </div>
            `,
            size: 'medium',
            buttons: [{ text: '–ó–∞–∫—Ä—ã—Ç—å', variant: 'primary' }]
        });
        
        aboutModal.open();
        
        // Haptic feedback
        this.triggerHaptic('light');
    }
    
    /**
     * üìÑ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
     */
    handleTerms() {
        const termsModal = new Modal({
            title: '–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
            content: `
                <div class="terms-content">
                    <div class="terms-section">
                        <h4>üì± –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h4>
                        <p>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "–ß–∏—Ç–∞—Ç–µ–ª—å" –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ü–∏—Ç–∞—Ç—ã, –ø–æ–ª—É—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑.</p>
                    </div>
                    
                    <div class="terms-section">
                        <h4>üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h4>
                        <p>–ú—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–Ω–æ –ø–æ–ª–∏—Ç–∏–∫–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏. –í–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.</p>
                    </div>
                    
                    <div class="terms-section">
                        <h4>üí∞ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏</h4>
                        <p>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ (—Ä–∞–∑–±–æ—Ä—ã –∫–Ω–∏–≥, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏) –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ.</p>
                    </div>
                    
                    <div class="terms-section">
                        <h4>‚öñÔ∏è –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å</h4>
                        <p>–ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Ç–æ—á–Ω–æ—Å—Ç—å —Ü–∏—Ç–∞—Ç –∏–ª–∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –≤–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–¥—Ä–∞–≤—ã–π —Å–º—ã—Å–ª.</p>
                    </div>
                </div>
            `,
            size: 'medium',
            buttons: [{ text: '–ü–æ–Ω—è—Ç–Ω–æ', variant: 'primary' }]
        });
        
        termsModal.open();
        
        // Haptic feedback
        this.triggerHaptic('light');
    }
    
    /**
     * üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
     */
    async updateSetting(path, value) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        this.setNestedValue(this.settings, path, value);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
        this.saveLocalSettings();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.state.set('settings', this.settings);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (—Å –¥–µ–±–∞—É–Ω—Å–æ–º)
        this.debouncedSaveSettings();
        
        // Haptic feedback
        this.triggerHaptic('light');
    }
    
    /**
     * üåô –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
     */
    applyTheme(theme) {
        if (theme === 'dark') {
            document.body.classList.add('dark-theme');
        } else {
            document.body.classList.remove('dark-theme');
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
        localStorage.setItem('reader-theme', theme);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.state.set('theme', theme);
    }
    
    /**
     * üìè –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
     */
    applyFontSize(size) {
        document.body.classList.remove('font-small', 'font-medium', 'font-large');
        document.body.classList.add(`font-${size}`);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        localStorage.setItem('reader-font-size', size);
    }
    
    /**
     * üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
     */
    savePrivacySettings() {
        const analyticsConsent = document.getElementById('analyticsConsent')?.checked;
        
        this.updateSetting('privacy.analytics', analyticsConsent);
        
        return true; // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    }
    
    /**
     * üì§ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
     */
    downloadExportFile(data) {
        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        
        const a = document.createElement('a');
        a.href = url;
        a.download = `reader-export-${new Date().toISOString().split('T')[0]}.json`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        
        URL.revokeObjectURL(url);
    }
    
    /**
     * üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ–∞–π–ª–∞
     */
    async processImportFile(file) {
        try {
            const text = await file.text();
            const data = JSON.parse(text);
            
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
            if (!this.validateImportData(data)) {
                throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞');
            }
            
            // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞
            const confirmed = await Modal.confirm(
                `–ù–∞–π–¥–µ–Ω–æ ${data.quotes?.length || 0} —Ü–∏—Ç–∞—Ç. –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ? –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã.`,
                '–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö'
            );
            
            if (confirmed) {
                await this.api.importUserData(data);
                this.showMessage('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
                this.app.loadData();
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', error);
            this.showMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ: ' + error.message, 'error');
        }
    }
    
    /**
     * ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–∞
     */
    validateImportData(data) {
        return data && typeof data === 'object' && Array.isArray(data.quotes);
    }
    
    /**
     * üîÑ –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —ç–∫—Å–ø–æ—Ä—Ç–∞
     */
    showExportLoading(show) {
        const exportItem = document.getElementById('exportData');
        if (exportItem) {
            if (show) {
                exportItem.classList.add('loading');
                exportItem.querySelector('.settings-description').textContent = '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö...';
            } else {
                exportItem.classList.remove('loading');
                exportItem.querySelector('.settings-description').textContent = '–°–∫–∞—á–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã';
            }
        }
    }
    
    /**
     * üì± –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
     */
    updateUI() {
        if (!this.isVisible) return;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
        this.updateToggleStates();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
        this.updateFontSizeButtons();
    }
    
    /**
     * üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π
     */
    updateToggleStates() {
        const toggles = [
            { id: 'dailyReminders', value: this.settings.notifications?.daily },
            { id: 'weeklyReports', value: this.settings.notifications?.weekly },
            { id: 'achievements', value: this.settings.notifications?.achievements },
            { id: 'bookRecommendations', value: this.settings.notifications?.books },
            { id: 'compactMode', value: this.settings.compactMode }
        ];
        
        toggles.forEach(toggle => {
            const element = document.getElementById(toggle.id);
            if (element) {
                element.checked = toggle.value;
            }
        });
    }
    
    /**
     * üìè –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
     */
    updateFontSizeButtons() {
        const currentSize = this.settings.fontSize || 'medium';
        
        document.querySelectorAll('.font-size-btn').forEach(btn => {
            btn.classList.remove('active');
        });
        
        const activeBtn = document.querySelector(`[data-size="${currentSize}"]`);
        if (activeBtn) {
            activeBtn.classList.add('active');
        }
    }
    
    /**
     * üé® –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —Ç–µ–º—ã
     */
    updateThemeUI() {
        const darkThemeToggle = document.getElementById('darkTheme');
        if (darkThemeToggle) {
            darkThemeToggle.checked = this.settings.theme === 'dark';
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Ç–µ–º—ã
        const themeIcon = document.querySelector('#darkTheme').closest('.settings-item').querySelector('.settings-icon');
        if (themeIcon) {
            themeIcon.textContent = this.settings.theme === 'dark' ? 'üåô' : '‚òÄÔ∏è';
        }
    }
    
    /**
     * üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (—Å –¥–µ–±–∞—É–Ω—Å–æ–º)
     */
    debouncedSaveSettings() {
        clearTimeout(this.saveTimeout);
        this.saveTimeout = setTimeout(async () => {
            try {
                await this.api.updateSettings(this.settings);
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
            }
        }, 1000);
    }
    
    /**
     * üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–∫–∞–ª—å–Ω–æ
     */
    saveLocalSettings() {
        try {
            localStorage.setItem('reader-settings', JSON.stringify(this.settings));
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', error);
        }
    }
    
    /**
     * üì• –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–∫–∞–ª—å–Ω–æ
     */
    loadLocalSettings() {
        try {
            const saved = localStorage.getItem('reader-settings');
            return saved ? JSON.parse(saved) : {};
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ localStorage:', error);
            return {};
        }
    }
    
    /**
     * ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    getDefaultSettings() {
        return {
            notifications: {
                daily: true,
                weekly: true,
                achievements: true,
                books: true
            },
            theme: 'light',
            fontSize: 'medium',
            compactMode: false,
            privacy: {
                analytics: true
            }
        };
    }
    
    /**
     * üßÆ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
     */
    
    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –ø—É—Ç–∏
     */
    setNestedValue(obj, path, value) {
        const keys = path.split('.');
        let current = obj;
        
        for (let i = 0; i < keys.length - 1; i++) {
            const key = keys[i];
            if (!(key in current) || typeof current[key] !== 'object') {
                current[key] = {};
            }
            current = current[key];
        }
        
        current[keys[keys.length - 1]] = value;
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –≤ –±–∞–π—Ç–∞—Ö
     */
    formatBytes(bytes) {
        if (bytes === 0) return '0 B';
        const k = 1024;
        const sizes = ['B', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
     */
    formatDate(dateString) {
        return new Date(dateString).toLocaleDateString('ru-RU', {
            day: 'numeric',
            month: 'long',
            year: 'numeric'
        });
    }
    
    /**
     * üí¨ –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    showMessage(message, type = 'info') {
        if (this.telegram) {
            this.telegram.showAlert(message);
        } else {
            alert(message);
        }
    }
    
    /**
     * üì≥ –í–∏–±—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram API
     */
    triggerHaptic(type = 'light') {
        if (this.telegram && this.telegram.HapticFeedback) {
            this.telegram.HapticFeedback.impactOccurred(type);
        }
    }
    
    /**
     * üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    cleanup() {
        // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
        if (this.saveTimeout) {
            clearTimeout(this.saveTimeout);
        }
    }
    
    /**
     * üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏
     */
    destroy() {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.hide();
        
        // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏–π
        this.subscriptions.forEach(unsubscribe => {
            if (typeof unsubscribe === 'function') {
                unsubscribe();
            }
        });
        this.subscriptions = [];
        
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        this.settings = {};
        this.modal = null;
        
        // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
        this.cleanup();
    }
}

// üì§ –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞
window.SettingsModal = SettingsModal;