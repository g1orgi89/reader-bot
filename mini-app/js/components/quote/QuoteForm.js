/**
 * üìù QUOTE FORM COMPONENT
 * –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ü–∏—Ç–∞—Ç—ã —Å AI-–∞–Ω–∞–ª–∏–∑–æ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
 * 
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 * - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
 * - AI-–∞–Ω–∞–ª–∏–∑ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏ –≤–≤–æ–¥–µ
 * - –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
 * - –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ü–∏—Ç–∞—Ç—ã
 * - UX –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
 * - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API Service –∏ State Management
 * 
 * @author Claude
 * @version 2.0.0
 * @since 28.07.2025
 */

class QuoteForm {
    /**
     * @param {Object} options - –û–ø—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     * @param {HTMLElement} options.container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–æ—Ä–º—ã
     * @param {Function} options.onSave - Callback –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
     * @param {Function} options.onCancel - Callback –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
     * @param {Object} options.initialData - –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    constructor(options = {}) {
        this.options = {
            container: null,
            onSave: null,
            onCancel: null,
            initialData: null,
            showPreview: true,
            autoSaveDrafts: true,
            enableAiAnalysis: true,
            showPopularAuthors: true,
            maxLength: 2000,
            ...options
        };

        // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        this.api = window.apiService;
        this.state = window.appState;
        this.storage = window.storageService;
        this.telegram = window.Telegram?.WebApp;

        // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
        this.element = null;
        this.textArea = null;
        this.authorInput = null;
        this.saveButton = null;
        this.previewContainer = null;

        // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
        this.formData = {
            text: '',
            author: '',
            source: 'manual', // manual, book
            category: null
        };

        // AI –∞–Ω–∞–ª–∏–∑
        this.aiAnalysis = null;
        this.aiAnalysisTimeout = null;
        this.isAnalyzing = false;

        // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–≤—Ç–æ—Ä—ã (–∏–∑ –∫—ç—à–∞)
        this.popularAuthors = [];
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        this.validation = {
            isValid: false,
            errors: {},
            touched: {}
        };

        // –ß–µ—Ä–Ω–æ–≤–∏–∫–∏
        this.draftKey = 'quote_draft_' + Date.now();
        this.autoSaveTimeout = null;

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    init() {
        this.loadInitialData();
        this.loadPopularAuthors();
        this.createElement();
        this.attachEventListeners();
        this.loadDraft();
        this.validateForm();
        
        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–∫—É—Å–∞ –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        setTimeout(() => {
            if (this.textArea) {
                this.textArea.focus();
            }
        }, 100);
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    loadInitialData() {
        if (this.options.initialData) {
            this.formData = { ...this.formData, ...this.options.initialData };
            this.draftKey = `quote_edit_${this.options.initialData.id}`;
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤
     */
    async loadPopularAuthors() {
        try {
            if (this.storage) {
                const cached = this.storage.getLocal('popular_authors');
                if (cached) {
                    this.popularAuthors = cached;
                    return;
                }
            }

            if (this.api) {
                const stats = await this.api.getStats();
                this.popularAuthors = stats.favoriteAuthors || [];
                
                if (this.storage) {
                    this.storage.setLocal('popular_authors', this.popularAuthors, '1h');
                }
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤:', error);
            this.popularAuthors = [
                '–≠—Ä–∏—Ö –§—Ä–æ–º–º', '–ê–Ω–Ω–∞ –ë—É—Å–µ–ª', '–ú–∞—Ä–∏–Ω–∞ –¶–≤–µ—Ç–∞–µ–≤–∞', 
                '–ê–Ω—Ç–æ–Ω –ß–µ—Ö–æ–≤', '–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π', '–§–µ–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π'
            ];
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç–∞ —Ñ–æ—Ä–º—ã
     */
    createElement() {
        this.element = document.createElement('div');
        this.element.className = 'quote-form';
        
        this.element.innerHTML = this.renderForm();
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.textArea = this.element.querySelector('.quote-form__textarea');
        this.authorInput = this.element.querySelector('.quote-form__author-input');
        this.saveButton = this.element.querySelector('.quote-form__save-btn');
        this.previewContainer = this.element.querySelector('.quote-form__preview');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        if (this.options.container) {
            this.options.container.appendChild(this.element);
        }
    }

    /**
     * –†–µ–Ω–¥–µ—Ä —Ñ–æ—Ä–º—ã
     */
    renderForm() {
        const characterCount = this.formData.text.length;
        const isOverLimit = characterCount > this.options.maxLength;
        
        return `
            <div class="quote-form__container">
                <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–æ—Ä–º—ã -->
                <div class="quote-form__header">
                    <h3 class="quote-form__title">
                        ${this.options.initialData ? '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–∏—Ç–∞—Ç—É' : '‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–∏—Ç–∞—Ç—É'}
                    </h3>
                    <p class="quote-form__subtitle">
                        ${this.options.initialData ? '–í–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ü–∏—Ç–∞—Ç—É' : '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –º—É–¥—Ä–æ—Å—Ç—å—é, –∫–æ—Ç–æ—Ä–∞—è –≤–∞—Å –≤–¥–æ—Ö–Ω–æ–≤–∏–ª–∞'}
                    </p>
                </div>

                <!-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ -->
                <div class="quote-form__main">
                    <!-- –ü–æ–ª–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Ü–∏—Ç–∞—Ç—ã -->
                    <div class="quote-form__field">
                        <label class="quote-form__label" for="quote-text">
                            <span class="quote-form__label-icon">üí≠</span>
                            <span class="quote-form__label-text">–¢–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã</span>
                            <span class="quote-form__label-required">*</span>
                        </label>
                        
                        <div class="quote-form__textarea-container">
                            <textarea 
                                id="quote-text"
                                class="quote-form__textarea ${isOverLimit ? 'quote-form__textarea--error' : ''}"
                                placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ç–∞—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –≤–∞—Å –≤–¥–æ—Ö–Ω–æ–≤–∏–ª–∞..."
                                rows="4"
                                maxlength="${this.options.maxLength * 1.1}"
                            >${this.escapeHtml(this.formData.text)}</textarea>
                            
                            <div class="quote-form__character-count ${isOverLimit ? 'quote-form__character-count--error' : ''}">
                                <span class="quote-form__character-current">${characterCount}</span>
                                <span class="quote-form__character-separator">/</span>
                                <span class="quote-form__character-max">${this.options.maxLength}</span>
                            </div>
                        </div>
                        
                        ${this.validation.errors.text ? `
                            <div class="quote-form__field-error">
                                <span class="quote-form__error-icon">‚ö†Ô∏è</span>
                                <span class="quote-form__error-text">${this.validation.errors.text}</span>
                            </div>
                        ` : ''}
                    </div>

                    <!-- –ü–æ–ª–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∞ -->
                    <div class="quote-form__field">
                        <label class="quote-form__label" for="quote-author">
                            <span class="quote-form__label-icon">‚úçÔ∏è</span>
                            <span class="quote-form__label-text">–ê–≤—Ç–æ—Ä</span>
                        </label>
                        
                        <div class="quote-form__author-container">
                            <input 
                                id="quote-author"
                                type="text"
                                class="quote-form__author-input"
                                placeholder="–ö—Ç–æ –∞–≤—Ç–æ—Ä —ç—Ç–∏—Ö —Å–ª–æ–≤?"
                                value="${this.escapeHtml(this.formData.author)}"
                                autocomplete="off"
                            />
                            
                            <!-- –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–≤—Ç–æ—Ä—ã -->
                            ${this.options.showPopularAuthors && this.popularAuthors.length > 0 ? `
                                <div class="quote-form__popular-authors">
                                    <div class="quote-form__popular-title">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–≤—Ç–æ—Ä—ã:</div>
                                    <div class="quote-form__popular-list">
                                        ${this.popularAuthors.slice(0, 6).map(author => `
                                            <button type="button" class="quote-form__popular-author" data-author="${this.escapeHtml(author)}">
                                                ${this.escapeHtml(author)}
                                            </button>
                                        `).join('')}
                                    </div>
                                </div>
                            ` : ''}
                        </div>
                        
                        ${this.validation.errors.author ? `
                            <div class="quote-form__field-error">
                                <span class="quote-form__error-icon">‚ö†Ô∏è</span>
                                <span class="quote-form__error-text">${this.validation.errors.author}</span>
                            </div>
                        ` : ''}
                    </div>

                    <!-- –ò—Å—Ç–æ—á–Ω–∏–∫ —Ü–∏—Ç–∞—Ç—ã -->
                    <div class="quote-form__field">
                        <label class="quote-form__label">
                            <span class="quote-form__label-icon">üìö</span>
                            <span class="quote-form__label-text">–ò—Å—Ç–æ—á–Ω–∏–∫</span>
                        </label>
                        
                        <div class="quote-form__source-options">
                            <label class="quote-form__radio-option">
                                <input 
                                    type="radio" 
                                    name="source" 
                                    value="book" 
                                    class="quote-form__radio"
                                    ${this.formData.source === 'book' ? 'checked' : ''}
                                />
                                <span class="quote-form__radio-label">
                                    <span class="quote-form__radio-icon">üìñ</span>
                                    <span class="quote-form__radio-text">–ò–∑ –∫–Ω–∏–≥–∏</span>
                                </span>
                            </label>
                            
                            <label class="quote-form__radio-option">
                                <input 
                                    type="radio" 
                                    name="source" 
                                    value="manual" 
                                    class="quote-form__radio"
                                    ${this.formData.source === 'manual' ? 'checked' : ''}
                                />
                                <span class="quote-form__radio-label">
                                    <span class="quote-form__radio-icon">üí≠</span>
                                    <span class="quote-form__radio-text">–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º—ã—Å–ª—å</span>
                                </span>
                            </label>
                        </div>
                    </div>

                    <!-- AI-–∞–Ω–∞–ª–∏–∑ -->
                    ${this.options.enableAiAnalysis ? this.renderAiAnalysis() : ''}
                </div>

                <!-- –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä -->
                ${this.options.showPreview ? this.renderPreview() : ''}

                <!-- –î–µ–π—Å—Ç–≤–∏—è —Ñ–æ—Ä–º—ã -->
                <div class="quote-form__actions">
                    <button 
                        type="button" 
                        class="quote-form__save-btn ${!this.validation.isValid ? 'quote-form__save-btn--disabled' : ''}"
                        ${!this.validation.isValid ? 'disabled' : ''}
                    >
                        <span class="quote-form__save-icon">üíæ</span>
                        <span class="quote-form__save-text">
                            ${this.options.initialData ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–î–æ–±–∞–≤–∏—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫'}
                        </span>
                    </button>
                    
                    ${this.options.onCancel ? `
                        <button type="button" class="quote-form__cancel-btn">
                            <span class="quote-form__cancel-icon">‚ùå</span>
                            <span class="quote-form__cancel-text">–û—Ç–º–µ–Ω–∞</span>
                        </button>
                    ` : ''}
                </div>

                <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞—Ö -->
                ${this.options.autoSaveDrafts ? `
                    <div class="quote-form__draft-info">
                        <span class="quote-form__draft-icon">üíæ</span>
                        <span class="quote-form__draft-text">–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</span>
                    </div>
                ` : ''}
            </div>
        `;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä AI-–∞–Ω–∞–ª–∏–∑–∞
     */
    renderAiAnalysis() {
        if (!this.formData.text.trim() || this.formData.text.length < 10) {
            return `
                <div class="quote-form__ai-section">
                    <div class="quote-form__ai-placeholder">
                        <span class="quote-form__ai-placeholder-icon">‚ú®</span>
                        <span class="quote-form__ai-placeholder-text">
                            –í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ç–∞—Ç—É, –∏ –ê–Ω–Ω–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –µ—ë —Å–º—ã—Å–ª
                        </span>
                    </div>
                </div>
            `;
        }

        if (this.isAnalyzing) {
            return `
                <div class="quote-form__ai-section quote-form__ai-section--loading">
                    <div class="quote-form__ai-header">
                        <span class="quote-form__ai-icon">‚ú®</span>
                        <span class="quote-form__ai-title">–ê–Ω–∞–ª–∏–∑ –æ—Ç –ê–Ω–Ω—ã</span>
                        <span class="quote-form__ai-loading">‚è≥</span>
                    </div>
                    <div class="quote-form__ai-content">
                        <div class="quote-form__ai-loading-text">
                            –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–º—ã—Å–ª –∏ –ø–æ–¥—Ç–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã...
                        </div>
                    </div>
                </div>
            `;
        }

        if (this.aiAnalysis) {
            return `
                <div class="quote-form__ai-section quote-form__ai-section--ready">
                    <div class="quote-form__ai-header">
                        <span class="quote-form__ai-icon">‚ú®</span>
                        <span class="quote-form__ai-title">–ê–Ω–∞–ª–∏–∑ –æ—Ç –ê–Ω–Ω—ã</span>
                        <span class="quote-form__ai-category" style="--category-color: ${this.getCategoryColor(this.aiAnalysis.category)}">
                            ${this.getCategoryName(this.aiAnalysis.category)}
                        </span>
                    </div>
                    <div class="quote-form__ai-content">
                        <div class="quote-form__ai-insight">
                            ${this.escapeHtml(this.aiAnalysis.insights || this.aiAnalysis.insight || '–ê–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')}
                        </div>
                        ${this.aiAnalysis.recommendations ? `
                            <div class="quote-form__ai-recommendations">
                                <div class="quote-form__ai-rec-title">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</div>
                                <div class="quote-form__ai-rec-text">
                                    ${this.escapeHtml(this.aiAnalysis.recommendations)}
                                </div>
                            </div>
                        ` : ''}
                    </div>
                </div>
            `;
        }

        return '';
    }

    /**
     * –†–µ–Ω–¥–µ—Ä –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
     */
    renderPreview() {
        if (!this.formData.text.trim()) {
            return `
                <div class="quote-form__preview">
                    <div class="quote-form__preview-header">
                        <span class="quote-form__preview-icon">üëÅÔ∏è</span>
                        <span class="quote-form__preview-title">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</span>
                    </div>
                    <div class="quote-form__preview-placeholder">
                        –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫ –æ–Ω–∞ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å
                    </div>
                </div>
            `;
        }

        return `
            <div class="quote-form__preview">
                <div class="quote-form__preview-header">
                    <span class="quote-form__preview-icon">üëÅÔ∏è</span>
                    <span class="quote-form__preview-title">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</span>
                </div>
                <div class="quote-form__preview-content" id="quote-preview-container">
                    <!-- QuoteCard –±—É–¥–µ—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω–∞ –∑–¥–µ—Å—å —á–µ—Ä–µ–∑ JavaScript -->
                </div>
            </div>
        `;
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    attachEventListeners() {
        if (!this.element) return;

        // –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —Ü–∏—Ç–∞—Ç—ã
        if (this.textArea) {
            this.textArea.addEventListener('input', this.handleTextInput.bind(this));
            this.textArea.addEventListener('blur', this.handleTextBlur.bind(this));
            this.textArea.addEventListener('keydown', this.handleKeyDown.bind(this));
        }

        // –í–≤–æ–¥ –∞–≤—Ç–æ—Ä–∞
        if (this.authorInput) {
            this.authorInput.addEventListener('input', this.handleAuthorInput.bind(this));
            this.authorInput.addEventListener('blur', this.handleAuthorBlur.bind(this));
        }

        // –ö–ª–∏–∫–∏ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º –∞–≤—Ç–æ—Ä–∞–º
        this.element.addEventListener('click', (e) => {
            const authorBtn = e.target.closest('.quote-form__popular-author');
            if (authorBtn) {
                this.selectPopularAuthor(authorBtn.dataset.author);
            }
        });

        // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        this.element.addEventListener('change', (e) => {
            if (e.target.name === 'source') {
                this.formData.source = e.target.value;
                this.autoSaveDraft();
                this.updatePreview();
            }
        });

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
        if (this.saveButton) {
            this.saveButton.addEventListener('click', this.handleSave.bind(this));
        }

        // –û—Ç–º–µ–Ω–∞
        const cancelButton = this.element.querySelector('.quote-form__cancel-btn');
        if (cancelButton) {
            cancelButton.addEventListener('click', this.handleCancel.bind(this));
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ textarea
        this.setupAutoResize();

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
        if (this.textArea) {
            this.textArea.addEventListener('paste', this.handlePaste.bind(this));
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
     */
    handleTextInput(e) {
        this.formData.text = e.target.value;
        this.validation.touched.text = true;
        
        this.updateCharacterCount();
        this.validateForm();
        this.autoSaveDraft();
        this.scheduleAiAnalysis();
        this.updatePreview();
        
        // Haptic feedback –ø—Ä–∏ –≤–≤–æ–¥–µ
        this.triggerHapticFeedback('light');
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ —Å —Ç–µ–∫—Å—Ç–∞
     */
    handleTextBlur() {
        this.validation.touched.text = true;
        this.validateForm();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∞–≤—Ç–æ—Ä–∞
     */
    handleAuthorInput(e) {
        this.formData.author = e.target.value;
        this.validation.touched.author = true;
        
        this.validateForm();
        this.autoSaveDraft();
        this.updatePreview();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ —Å –∞–≤—Ç–æ—Ä–∞
     */
    handleAuthorBlur() {
        this.validation.touched.author = true;
        this.validateForm();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à
     */
    handleKeyDown(e) {
        // Ctrl/Cmd + Enter –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
            e.preventDefault();
            if (this.validation.isValid) {
                this.handleSave();
            }
        }
        
        // Escape –¥–ª—è –æ—Ç–º–µ–Ω—ã
        if (e.key === 'Escape' && this.options.onCancel) {
            e.preventDefault();
            this.handleCancel();
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
     */
    handlePaste(_e) {
        // –î–∞–µ–º –±—Ä–∞—É–∑–µ—Ä—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å—Ç–∞–≤–∫—É, –∑–∞—Ç–µ–º –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º
        setTimeout(() => {
            this.formData.text = this.textArea.value;
            this.updateCharacterCount();
            this.validateForm();
            this.scheduleAiAnalysis();
            this.updatePreview();
        }, 10);
    }

    /**
     * –í—ã–±–æ—Ä –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞
     */
    selectPopularAuthor(author) {
        if (this.authorInput) {
            this.authorInput.value = author;
            this.formData.author = author;
            this.validation.touched.author = true;
            
            this.validateForm();
            this.autoSaveDraft();
            this.updatePreview();
            
            // Haptic feedback
            this.triggerHapticFeedback('light');
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ textarea
            if (this.textArea) {
                this.textArea.focus();
            }
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤
     */
    updateCharacterCount() {
        const counter = this.element.querySelector('.quote-form__character-current');
        const container = this.element.querySelector('.quote-form__character-count');
        const textarea = this.element.querySelector('.quote-form__textarea');
        
        if (counter) {
            counter.textContent = this.formData.text.length;
        }
        
        const isOverLimit = this.formData.text.length > this.options.maxLength;
        
        if (container) {
            container.classList.toggle('quote-form__character-count--error', isOverLimit);
        }
        
        if (textarea) {
            textarea.classList.toggle('quote-form__textarea--error', isOverLimit);
        }
    }

    /**
     * –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ AI-–∞–Ω–∞–ª–∏–∑–∞
     */
    scheduleAiAnalysis() {
        if (!this.options.enableAiAnalysis) return;
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
        if (this.aiAnalysisTimeout) {
            clearTimeout(this.aiAnalysisTimeout);
        }
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–µ–∫—Å—Ç–∞
        if (this.formData.text.trim().length < 10) {
            this.aiAnalysis = null;
            this.updateAiSection();
            return;
        }
        
        // –ü–ª–∞–Ω–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤–≤–æ–¥–∞
        this.aiAnalysisTimeout = setTimeout(() => {
            this.performAiAnalysis();
        }, 1000);
    }

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ AI-–∞–Ω–∞–ª–∏–∑–∞
     */
    async performAiAnalysis() {
        if (!this.api || this.isAnalyzing) return;

        try {
            this.isAnalyzing = true;
            this.updateAiSection();

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
            if (this.storage) {
                const cached = this.storage.getCachedApiResponse(
                    '/quotes/analyze', 
                    'POST', 
                    { text: this.formData.text }
                );
                
                if (cached) {
                    this.aiAnalysis = cached.response;
                    this.isAnalyzing = false;
                    this.updateAiSection();
                    this.updatePreview();
                    return;
                }
            }

            // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
            const result = await this.api.analyzeQuote(this.formData.text, this.formData.author);

            // Extract analysis from result.data.analysis with fallbacks
            let analysis;
            if (result && result.data && result.data.analysis) {
                analysis = result.data.analysis;
            } else if (result && result.analysis) {
                analysis = result.analysis;
            } else if (result) {
                analysis = result;
            } else {
                throw new Error('No analysis data in response');
            }

            // Normalize analysis to ensure consistent structure
            this.aiAnalysis = {
                category: typeof analysis.category === 'string' ? analysis.category : 'wisdom',
                themes: Array.isArray(analysis.themes) ? analysis.themes.slice(0, 3) : ['—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è'],
                sentiment: ['positive', 'neutral', 'negative'].includes(analysis.sentiment) ? analysis.sentiment : 'neutral',
                insights: analysis.insights || analysis.insight || '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –º—ã—Å–ª—å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è'
            };

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
            if (this.storage) {
                this.storage.cacheApiResponse(
                    '/quotes/analyze', 
                    'POST', 
                    { text: this.formData.text }, 
                    analysis,
                    '10m'
                );
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ AI-–∞–Ω–∞–ª–∏–∑–∞:', error);
            this.aiAnalysis = {
                category: 'wisdom',
                themes: ['—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è'],
                sentiment: 'neutral',
                insights: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ü–∏—Ç–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
                error: true
            };
        } finally {
            this.isAnalyzing = false;
            this.updateAiSection();
            this.updatePreview();
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ AI-–∞–Ω–∞–ª–∏–∑–∞
     */
    updateAiSection() {
        console.log('LOG: QuoteForm.updateAiSection - –æ–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é –∞–Ω–∞–ª–∏–∑–∞, —Ç–µ–∫—É—â–∏–π aiAnalysis:', this.aiAnalysis);
        
        const aiSection = this.element.querySelector('.quote-form__ai-section');
        if (aiSection) {
            const newHtml = this.renderAiAnalysis();
            console.log('LOG: QuoteForm.updateAiSection - –Ω–æ–≤—ã–π HTML –¥–ª—è —Å–µ–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–∑–¥–∞–Ω');
            aiSection.outerHTML = newHtml;
            console.log('LOG: QuoteForm.updateAiSection - —Å–µ–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
        } else {
            console.warn('LOG: QuoteForm.updateAiSection - .quote-form__ai-section –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
     */
    updatePreview() {
        if (!this.options.showPreview) return;

        const previewContent = this.element.querySelector('.quote-form__preview-content');
        if (!previewContent) return;

        if (!this.formData.text.trim()) {
            const preview = this.element.querySelector('.quote-form__preview');
            if (preview) {
                preview.outerHTML = this.renderPreview();
            }
            return;
        }

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ü–∏—Ç–∞—Ç—ã
        const previewQuote = {
            id: 'preview',
            text: this.formData.text,
            author: this.formData.author || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä',
            createdAt: new Date(),
            isFavorite: false,
            source: this.formData.source,
            aiAnalysis: this.aiAnalysis
        };

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        previewContent.innerHTML = '';

        // –°–æ–∑–¥–∞–µ–º QuoteCard –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        if (window.QuoteCard) {
            const previewCard = new window.QuoteCard(previewQuote, {
                showActions: false,
                allowSwipe: false,
                compact: true
            });
            
            previewContent.appendChild(previewCard.getElement());
        }
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
     */
    validateForm() {
        this.validation.errors = {};

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Ü–∏—Ç–∞—Ç—ã
        if (!this.formData.text.trim()) {
            if (this.validation.touched.text) {
                this.validation.errors.text = '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã';
            }
        } else if (this.formData.text.length < 5) {
            this.validation.errors.text = '–¶–∏—Ç–∞—Ç–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞—è (–º–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤)';
        } else if (this.formData.text.length > this.options.maxLength) {
            this.validation.errors.text = `–¶–∏—Ç–∞—Ç–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è (–º–∞–∫—Å–∏–º—É–º ${this.options.maxLength} —Å–∏–º–≤–æ–ª–æ–≤)`;
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if (this.formData.author && this.formData.author.length > 100) {
            this.validation.errors.author = '–ò–º—è –∞–≤—Ç–æ—Ä–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤)';
        }

        // –û–±—â–∞—è –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
        this.validation.isValid = Object.keys(this.validation.errors).length === 0 && 
                                  this.formData.text.trim().length >= 5;

        this.updateValidationUI();
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –≤–∞–ª–∏–¥–∞—Ü–∏–∏
     */
    updateValidationUI() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        if (this.saveButton) {
            this.saveButton.disabled = !this.validation.isValid;
            this.saveButton.classList.toggle('quote-form__save-btn--disabled', !this.validation.isValid);
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        Object.keys(this.validation.errors).forEach(_field => {
            const errorElement = this.element.querySelector(`.quote-form__field-error`);
            if (errorElement) {
                // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º –ø–æ–ª–µ —Å –æ—à–∏–±–∫–æ–π
                const fieldElement = this.element.querySelector(`.quote-form__field`);
                if (fieldElement) {
                    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—è
                }
            }
        });
    }

    /**
     * –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
     */
    autoSaveDraft() {
        if (!this.options.autoSaveDrafts || !this.storage) return;

        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
        if (this.autoSaveTimeout) {
            clearTimeout(this.autoSaveTimeout);
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤–≤–æ–¥–∞
        this.autoSaveTimeout = setTimeout(() => {
            if (this.formData.text.trim() || this.formData.author.trim()) {
                const draft = {
                    ...this.formData,
                    timestamp: Date.now(),
                    aiAnalysis: this.aiAnalysis
                };

                this.storage.setLocal(this.draftKey, draft, '7d');
            }
        }, 2000);
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
     */
    loadDraft() {
        if (!this.options.autoSaveDrafts || !this.storage) return;

        const draft = this.storage.getLocal(this.draftKey);
        if (draft && !this.options.initialData) {
            // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
            const shouldRestore = confirm(
                '–ù–∞–π–¥–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —á–µ—Ä–Ω–æ–≤–∏–∫. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ?'
            );

            if (shouldRestore) {
                this.formData = { ...this.formData, ...draft };
                this.aiAnalysis = draft.aiAnalysis;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º UI
                if (this.textArea) this.textArea.value = this.formData.text;
                if (this.authorInput) this.authorInput.value = this.formData.author;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫
                const sourceRadio = this.element.querySelector(`input[name="source"][value="${this.formData.source}"]`);
                if (sourceRadio) sourceRadio.checked = true;
                
                this.updateCharacterCount();
                this.validateForm();
                this.updateAiSection();
                this.updatePreview();
            }
        }
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
     */
    clearDraft() {
        if (this.storage) {
            this.storage.removeLocal(this.draftKey);
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ textarea
     */
    setupAutoResize() {
        if (!this.textArea) return;

        const autoResize = () => {
            this.textArea.style.height = 'auto';
            this.textArea.style.height = this.textArea.scrollHeight + 'px';
        };

        this.textArea.addEventListener('input', autoResize);
        
        // –ù–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–∞
        setTimeout(autoResize, 100);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
     */
    async handleSave() {
        console.log('LOG: QuoteForm.handleSave –≤—ã–∑–≤–∞–Ω');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º—ã
        if (!this.validation.isValid) {
            console.log('LOG: QuoteForm.handleSave - —Ñ–æ—Ä–º–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞');
            return;
        }

        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        if (this.saveButton && this.saveButton.disabled) {
            console.log('LOG: QuoteForm.handleSave - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º');
            return;
        }

        try {
            console.log('LOG: QuoteForm.handleSave - –Ω–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ');
            this.updateLoadingState(true);

            const quoteData = {
                text: this.formData.text.trim(),
                author: this.formData.author.trim() || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä',
                source: this.formData.source || 'manual'
            };
            console.log('LOG: QuoteForm.handleSave - –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', quoteData);
            
            let savedQuote;
            
            if (this.options.initialData) {
                // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ü–∏—Ç–∞—Ç—ã
                savedQuote = await this.api.updateQuote(this.options.initialData.id, quoteData);
                console.log('LOG: QuoteForm - —Ü–∏—Ç–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', savedQuote);
            } else {
                // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ü–∏—Ç–∞—Ç—ã
                savedQuote = await this.api.addQuote(quoteData);
                console.log('LOG: QuoteForm - —Ü–∏—Ç–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞, –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', savedQuote);
            }

            // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
            const quoteDataFromServer = savedQuote?.data || savedQuote;
            console.log('LOG: QuoteForm - –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã:', quoteDataFromServer);

            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π aiAnalysis –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
            if (quoteDataFromServer && !this.options.initialData) {
                const serverAnalysis = {
                    category: quoteDataFromServer.category,
                    themes: quoteDataFromServer.themes,
                    sentiment: quoteDataFromServer.sentiment,
                    insights: quoteDataFromServer.insights,
                    summary: quoteDataFromServer.aiAnalysis?.summary || ''
                };
                
                console.log('LOG: QuoteForm - –æ–±–Ω–æ–≤–ª—è–µ–º AI –∞–Ω–∞–ª–∏–∑ –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞:', serverAnalysis);
                this.aiAnalysis = serverAnalysis;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                this.updateAiSection();
                this.updatePreview();
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if (this.state) {
                const quoteForState = {
                    ...quoteDataFromServer,
                    id: quoteDataFromServer.id || quoteDataFromServer._id,
                    aiAnalysis: this.aiAnalysis || quoteDataFromServer.aiAnalysis
                };

                if (this.options.initialData) {
                    this.state.updateQuoteInList(quoteForState.id, quoteForState);
                    console.log('LOG: QuoteForm - –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Ü–∏—Ç–∞—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏:', quoteForState.id);
                    
                    // Dispatch edit event
                    document.dispatchEvent(new CustomEvent('quotes:changed', { 
                        detail: { type: 'edited', id: quoteForState.id, quote: quoteForState } 
                    }));
                } else {
                    this.state.addQuote(quoteForState);
                    console.log('LOG: QuoteForm - –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ü–∏—Ç–∞—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', quoteForState.id);
                    
                    // Dispatch add event
                    document.dispatchEvent(new CustomEvent('quotes:changed', { 
                        detail: { type: 'added', id: quoteForState.id, quote: quoteForState } 
                    }));
                }
            }

            // Invalidate StatisticsService cache after successful save
            if (window.statisticsService) {
                try {
                    const userId = window.readerApp?.state?.getCurrentUserId?.();
                    if (userId) {
                        window.statisticsService.invalidateForUser(userId);
                        console.log('LOG: QuoteForm - –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω –∫—ç—à —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
                    } else {
                        // Fallback to old method if userId not available
                        window.statisticsService.invalidate(['mainStats','latestQuotes_3','userProgress']);
                        console.log('LOG: QuoteForm - –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω –∫—ç—à —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (fallback)');
                    }
                } catch (_e) {
                    console.debug('StatisticsService invalidation failed:', _e);
                }
            }

            // –û—á–∏—â–∞–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫
            this.clearDraft();

            // Haptic feedback
            this.triggerHapticFeedback('success');

            // –í—ã–∑—ã–≤–∞–µ–º callback
            if (this.options.onSave) {
                console.log('LOG: QuoteForm - –≤—ã–∑—ã–≤–∞–µ–º callback onSave');
                this.options.onSave(quoteDataFromServer);
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            this.showSuccess(
                this.options.initialData ? 
                '–¶–∏—Ç–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!' : 
                '–¶–∏—Ç–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –≤–∞—à –¥–Ω–µ–≤–Ω–∏–∫!'
            );
            
            console.log('LOG: QuoteForm.handleSave - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');

        } catch (error) {
            console.error('LOG: QuoteForm.handleSave - –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ü–∏—Ç–∞—Ç—ã:', error);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —Ü–∏—Ç–∞—Ç–∞ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —Å–æ–∑–¥–∞–Ω–∞ (–∫–æ–¥ 201 –∏–ª–∏ success: true)
            if (error.status === 201 || (error.data && error.data.success)) {
                console.log('LOG: QuoteForm.handleSave - —Ü–∏—Ç–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É, —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—Ö–æ–º');
                this.showSuccess('–¶–∏—Ç–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –≤–∞—à –¥–Ω–µ–≤–Ω–∏–∫!');
            } else {
                this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ü–∏—Ç–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                this.triggerHapticFeedback('error');
            }
        } finally {
            console.log('LOG: QuoteForm.handleSave - –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏');
            this.updateLoadingState(false);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã
     */
    handleCancel() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        const hasChanges = this.formData.text.trim() || this.formData.author.trim();
        
        if (hasChanges) {
            const shouldDiscard = confirm(
                '–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ?'
            );
            
            if (!shouldDiscard) return;
        }

        // –í—ã–∑—ã–≤–∞–µ–º callback
        if (this.options.onCancel) {
            this.options.onCancel();
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
     */
    updateLoadingState(isLoading) {
        console.log('LOG: QuoteForm.updateLoadingState - isLoading:', isLoading);
        
        if (!this.saveButton) {
            console.warn('LOG: QuoteForm.updateLoadingState - saveButton –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }

        const icon = this.saveButton.querySelector('.quote-form__save-icon');
        const text = this.saveButton.querySelector('.quote-form__save-text');
        
        if (isLoading) {
            console.log('LOG: QuoteForm.updateLoadingState - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏');
            this.saveButton.disabled = true;
            this.saveButton.classList.add('quote-form__save-btn--loading');
            
            if (icon) icon.textContent = '‚è≥';
            if (text) text.textContent = '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
            this.saveButton.setAttribute('data-saving', 'true');
        } else {
            console.log('LOG: QuoteForm.updateLoadingState - —É–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏');
            
            // –£–±–∏—Ä–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            this.saveButton.removeAttribute('data-saving');
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º—ã
            this.saveButton.disabled = !this.validation.isValid;
            this.saveButton.classList.remove('quote-form__save-btn--loading');
            
            if (icon) icon.textContent = 'üíæ';
            if (text) {
                text.textContent = this.options.initialData ? 
                    '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : 
                    '–î–æ–±–∞–≤–∏—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫';
            }
            
            console.log('LOG: QuoteForm.updateLoadingState - –∫–Ω–æ–ø–∫–∞ disabled:', this.saveButton.disabled, 'validation.isValid:', this.validation.isValid);
        }
    }

    // ========================================
    // UTILITY METHODS
    // ========================================

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ AI-–∞–Ω–∞–ª–∏–∑–∞
     */
    getCategoryColor(category) {
        const colors = {
            wisdom: '#D2452C',
            love: '#E85A42',
            growth: '#B53A23',
            philosophy: '#A0341F',
            inspiration: '#F16B52',
            reflection: '#C73E29'
        };
        
        return colors[category] || colors.wisdom;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    getCategoryName(category) {
        const names = {
            wisdom: '–ú—É–¥—Ä–æ—Å—Ç—å',
            love: '–õ—é–±–æ–≤—å',
            growth: '–†–æ—Å—Ç',
            philosophy: '–§–∏–ª–æ—Å–æ—Ñ–∏—è',
            inspiration: '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ',
            reflection: '–†–∞–∑–º—ã—à–ª–µ–Ω–∏—è'
        };
        
        return names[category] || names.wisdom;
    }

    /**
     * –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML
     */
    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    /**
     * Haptic feedback –¥–ª—è Telegram
     */
    triggerHapticFeedback(type = 'light') {
        if (this.telegram?.HapticFeedback) {
            switch (type) {
                case 'light':
                    this.telegram.HapticFeedback.impactOccurred('light');
                    break;
                case 'success':
                    this.telegram.HapticFeedback.notificationOccurred('success');
                    break;
                case 'error':
                    this.telegram.HapticFeedback.notificationOccurred('error');
                    break;
            }
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    showError(message) {
        // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        console.error(message);
        if (this.telegram?.showAlert) {
            this.telegram.showAlert(message);
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
     */
    showSuccess(message) {
        // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        console.log(message);
        if (this.telegram?.showAlert) {
            this.telegram.showAlert(message);
        }
    }

    // ========================================
    // PUBLIC API
    // ========================================

    /**
     * –ü–æ–ª—É—á–∏—Ç—å DOM —ç–ª–µ–º–µ–Ω—Ç
     */
    getElement() {
        return this.element;
    }

    /**
     * –û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É
     */
    clearForm() {
        this.formData = {
            text: '',
            author: '',
            source: 'manual',
            category: null
        };

        this.aiAnalysis = null;
        this.validation.touched = {};
        
        if (this.textArea) this.textArea.value = '';
        if (this.authorInput) this.authorInput.value = '';
        
        this.validateForm();
        this.updateAiSection();
        this.updatePreview();
        this.clearDraft();
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ–∫—É—Å –Ω–∞ —Ñ–æ—Ä–º—É
     */
    focus() {
        if (this.textArea) {
            this.textArea.focus();
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
     */
    getFormData() {
        return {
            ...this.formData,
            aiAnalysis: this.aiAnalysis
        };
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
     */
    setFormData(data) {
        this.formData = { ...this.formData, ...data };
        
        if (this.textArea) this.textArea.value = this.formData.text;
        if (this.authorInput) this.authorInput.value = this.formData.author;
        
        const sourceRadio = this.element.querySelector(`input[name="source"][value="${this.formData.source}"]`);
        if (sourceRadio) sourceRadio.checked = true;
        
        this.updateCharacterCount();
        this.validateForm();
        this.scheduleAiAnalysis();
        this.updatePreview();
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
     */
    hasChanges() {
        return this.formData.text.trim() || this.formData.author.trim();
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
     */
    destroy() {
        // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
        if (this.aiAnalysisTimeout) {
            clearTimeout(this.aiAnalysisTimeout);
        }
        
        if (this.autoSaveTimeout) {
            clearTimeout(this.autoSaveTimeout);
        }

        // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç
        if (this.element && this.element.parentNode) {
            this.element.parentNode.removeChild(this.element);
        }

        this.element = null;
        this.textArea = null;
        this.authorInput = null;
        this.saveButton = null;
        this.previewContainer = null;
    }
}

// ========================================
// CSS STYLES (–±—É–¥—É—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ)
// ========================================

/**
 * –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ head
 * –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —ç—Ç–æ –±—É–¥–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π CSS —Ñ–∞–π–ª
 */
if (typeof document !== 'undefined' && !document.getElementById('quote-form-styles')) {
    const styles = document.createElement('style');
    styles.id = 'quote-form-styles';
    styles.textContent = `
        .quote-form {
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
        }

        .quote-form__container {
            background: var(--surface, #FFFFFF);
            border-radius: var(--border-radius, 12px);
            border: 1px solid var(--border, #E6E0D6);
            box-shadow: 0 4px 16px var(--shadow-color, rgba(210, 69, 44, 0.08));
            overflow: hidden;
        }

        .quote-form__header {
            background: linear-gradient(135deg, var(--primary-color, #D2452C), var(--primary-dark, #B53A23));
            color: white;
            padding: 20px;
            text-align: center;
        }

        .quote-form__title {
            margin: 0 0 8px 0;
            font-size: 18px;
            font-weight: 600;
        }

        .quote-form__subtitle {
            margin: 0;
            font-size: 14px;
            opacity: 0.9;
            line-height: 1.4;
        }

        .quote-form__main {
            padding: 20px;
        }

        .quote-form__field {
            margin-bottom: 20px;
        }

        .quote-form__label {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 8px;
            font-size: 14px;
            font-weight: 600;
            color: var(--text-primary, #2D2D2D);
        }

        .quote-form__label-icon {
            font-size: 16px;
        }

        .quote-form__label-required {
            color: var(--primary-color, #D2452C);
        }

        .quote-form__textarea-container {
            position: relative;
        }

        .quote-form__textarea {
            width: 100%;
            border: 2px solid var(--border, #E6E0D6);
            border-radius: var(--border-radius-small, 8px);
            padding: 12px;
            font-family: Georgia, 'Times New Roman', serif;
            font-style: italic;
            font-size: 15px;
            line-height: 1.5;
            background: var(--surface-warm, #FEFCF8);
            color: var(--text-primary, #2D2D2D);
            resize: none;
            transition: all 0.3s ease;
        }

        .quote-form__textarea:focus {
            outline: none;
            border-color: var(--primary-color, #D2452C);
            box-shadow: 0 0 0 3px rgba(210, 69, 44, 0.15);
        }

        .quote-form__textarea--error {
            border-color: var(--error, #dc3545);
        }

        .quote-form__character-count {
            position: absolute;
            bottom: 8px;
            right: 12px;
            font-size: 11px;
            color: var(--text-secondary, #666666);
            background: var(--surface, #FFFFFF);
            padding: 2px 6px;
            border-radius: 4px;
            border: 1px solid var(--border-light, #F0EBE3);
        }

        .quote-form__character-count--error {
            color: var(--error, #dc3545);
            border-color: var(--error, #dc3545);
        }

        .quote-form__character-current {
            font-weight: 600;
        }

        .quote-form__author-container {
            position: relative;
        }

        .quote-form__author-input {
            width: 100%;
            border: 2px solid var(--border, #E6E0D6);
            border-radius: var(--border-radius-small, 8px);
            padding: 12px;
            font-size: 14px;
            font-family: inherit;
            background: var(--surface-warm, #FEFCF8);
            color: var(--text-primary, #2D2D2D);
            transition: all 0.3s ease;
        }

        .quote-form__author-input:focus {
            outline: none;
            border-color: var(--primary-color, #D2452C);
            box-shadow: 0 0 0 3px rgba(210, 69, 44, 0.15);
        }

        .quote-form__popular-authors {
            margin-top: 12px;
        }

        .quote-form__popular-title {
            font-size: 12px;
            font-weight: 500;
            color: var(--text-secondary, #666666);
            margin-bottom: 8px;
        }

        .quote-form__popular-list {
            display: flex;
            flex-wrap: wrap;
            gap: 6px;
        }

        .quote-form__popular-author {
            background: var(--background-light, #FAF8F3);
            border: 1px solid var(--border, #E6E0D6);
            border-radius: 16px;
            padding: 6px 12px;
            font-size: 11px;
            cursor: pointer;
            transition: all 0.2s ease;
            color: var(--text-secondary, #666666);
        }

        .quote-form__popular-author:hover {
            background: var(--primary-color, #D2452C);
            color: white;
            border-color: var(--primary-color, #D2452C);
            transform: translateY(-1px);
        }

        .quote-form__source-options {
            display: flex;
            gap: 16px;
        }

        .quote-form__radio-option {
            flex: 1;
            cursor: pointer;
        }

        .quote-form__radio {
            display: none;
        }

        .quote-form__radio-label {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 12px;
            border: 2px solid var(--border, #E6E0D6);
            border-radius: var(--border-radius-small, 8px);
            background: var(--surface-warm, #FEFCF8);
            transition: all 0.3s ease;
        }

        .quote-form__radio:checked + .quote-form__radio-label {
            border-color: var(--primary-color, #D2452C);
            background: rgba(210, 69, 44, 0.05);
            color: var(--primary-color, #D2452C);
        }

        .quote-form__radio-icon {
            font-size: 16px;
        }

        .quote-form__radio-text {
            font-size: 13px;
            font-weight: 500;
        }

        .quote-form__ai-section {
            background: linear-gradient(135deg, var(--primary-color, #D2452C), var(--primary-dark, #B53A23));
            color: white;
            border-radius: var(--border-radius-small, 8px);
            padding: 16px;
            margin-bottom: 16px;
        }

        .quote-form__ai-header {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 12px;
            font-size: 13px;
            font-weight: 600;
        }

        .quote-form__ai-category {
            background: rgba(255, 255, 255, 0.2);
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 10px;
            margin-left: auto;
        }

        .quote-form__ai-content,
        .quote-form__ai-insight {
            font-family: Georgia, 'Times New Roman', serif;
            font-style: italic;
            font-size: 13px;
            color: var(--text-primary, #2D2D2D);
            line-height: 1.5;
            opacity: 0.92;
        }
        @media (max-width: 480px) {
            .quote-form__ai-content,
            .quote-form__ai-insight {
            font-size: 12px;
            }
        }

        .quote-form__ai-recommendations {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 6px;
            padding: 10px;
        }

        .quote-form__ai-rec-title {
            font-size: 11px;
            font-weight: 600;
            margin-bottom: 6px;
            opacity: 0.9;
        }

        .quote-form__ai-rec-text {
            font-size: 12px;
            opacity: 0.85;
        }

        .quote-form__ai-placeholder {
            display: flex;
            align-items: center;
            gap: 8px;
            justify-content: center;
            padding: 20px;
            background: var(--background-light, #FAF8F3);
            border: 2px dashed var(--border, #E6E0D6);
            border-radius: var(--border-radius-small, 8px);
            color: var(--text-secondary, #666666);
            font-size: 13px;
        }

        .quote-form__ai-loading-text {
            display: flex;
            align-items: center;
            gap: 8px;
            opacity: 0.9;
        }

        .quote-form__preview {
            background: var(--background-light, #FAF8F3);
            border-radius: var(--border-radius-small, 8px);
            padding: 16px;
            margin-bottom: 16px;
        }

        .quote-form__preview-header {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 12px;
            font-size: 13px;
            font-weight: 600;
            color: var(--text-primary, #2D2D2D);
        }

        .quote-form__preview-placeholder {
            text-align: center;
            color: var(--text-secondary, #666666);
            font-size: 12px;
            padding: 20px;
            border: 2px dashed var(--border, #E6E0D6);
            border-radius: 6px;
        }

        .quote-form__actions {
            display: flex;
            gap: 12px;
            padding: 16px 20px;
            background: var(--background-light, #FAF8F3);
            border-top: 1px solid var(--border-light, #F0EBE3);
        }

        .quote-form__save-btn {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            background: var(--primary-color, #D2452C);
            color: white;
            border: none;
            border-radius: var(--border-radius-small, 8px);
            padding: 14px 20px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(210, 69, 44, 0.3);
        }

        .quote-form__save-btn:hover:not(:disabled) {
            background: var(--primary-light, #E85A42);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(210, 69, 44, 0.4);
        }

        .quote-form__save-btn--disabled {
            background: var(--text-muted, #999999);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .quote-form__save-btn--loading {
            pointer-events: none;
            opacity: 0.8;
        }

        .quote-form__cancel-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            background: transparent;
            color: var(--text-secondary, #666666);
            border: 2px solid var(--border, #E6E0D6);
            border-radius: var(--border-radius-small, 8px);
            padding: 14px 20px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .quote-form__cancel-btn:hover {
            border-color: var(--primary-color, #D2452C);
            color: var(--primary-color, #D2452C);
        }

        .quote-form__draft-info {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 6px;
            padding: 12px 20px;
            background: var(--background-soft, #F0EBE3);
            font-size: 11px;
            color: var(--text-secondary, #666666);
        }

        .quote-form__field-error {
            display: flex;
            align-items: center;
            gap: 6px;
            margin-top: 6px;
            font-size: 12px;
            color: var(--error, #dc3545);
        }

        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
        @media (max-width: 480px) {
            .quote-form__container {
                border-radius: 0;
                border-left: none;
                border-right: none;
            }

            .quote-form__header,
            .quote-form__main,
            .quote-form__actions {
                padding-left: 16px;
                padding-right: 16px;
            }

            .quote-form__source-options {
                flex-direction: column;
                gap: 8px;
            }

            .quote-form__actions {
                flex-direction: column;
            }

            .quote-form__popular-list {
                justify-content: center;
            }
        }

        /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
        @keyframes quote-form-appear {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .quote-form {
            animation: quote-form-appear 0.3s ease;
        }

        @keyframes ai-analysis-loading {
            0%, 100% { opacity: 0.5; }
            50% { opacity: 1; }
        }

        .quote-form__ai-loading {
            animation: ai-analysis-loading 1.5s infinite;
        }
    `;
    
    document.head.appendChild(styles);
}

// ========================================
// EXPORT
// ========================================

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–¥—É–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
if (typeof module !== 'undefined' && module.exports) {
    module.exports = QuoteForm;
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
if (typeof window !== 'undefined') {
    window.QuoteForm = QuoteForm;
}
