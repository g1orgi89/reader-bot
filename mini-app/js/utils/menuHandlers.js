/**
 * üìù –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ú–ï–ù–Æ –ò –î–ï–ô–°–¢–í–ò–ô
 * –†–∞–∑–º–µ—Ä: ~2 KB - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é –¥–ª—è Mini App
 * 
 * –°–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è:
 * - –ì–ª–∞–≤–Ω–æ–≥–æ –≤—ã–¥–≤–∏–∂–Ω–æ–≥–æ –º–µ–Ω—é (–ø—Ä–æ—Ñ–∏–ª—å, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
 * - –î–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, —ç–∫—Å–ø–æ—Ä—Ç)
 * - –ú–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
 * - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram WebApp API
 */

// üéØ –ö–õ–ê–°–° –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ú–ï–ù–Æ

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä –º–µ–Ω—é –∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
class MenuHandler {
    constructor() {
        this.currentPage = window.PAGES?.HOME || 'home';
        this.isMenuOpen = false;
        this.activeModals = new Set();
        this.persistTimeout = null;
    }

    // üì± –ì–õ–ê–í–ù–û–ï –í–´–î–í–ò–ñ–ù–û–ï –ú–ï–ù–Æ

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
     * @param {boolean} forceState - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–æ—Ç–∫—Ä—ã—Ç–æ/–∑–∞–∫—Ä—ã—Ç–æ)
     */
    toggleMenu(forceState = null) {
        const overlay = document.querySelector('.menu-overlay');
        const menuButton = document.querySelector('.menu-button');
        
        if (!overlay) return;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const newState = forceState !== null ? forceState : !this.isMenuOpen;
        
        if (newState) {
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
            overlay.classList.add('show');
            if (menuButton) menuButton.classList.add('active');
            this.isMenuOpen = true;
            
            // Haptic feedback –¥–ª—è Telegram
            if (window.Telegram?.WebApp?.HapticFeedback) {
                window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–µ–Ω—é
            setTimeout(() => {
                document.addEventListener('click', this.handleOutsideClick.bind(this));
            }, 100);
            
        } else {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
            overlay.classList.remove('show');
            if (menuButton) menuButton.classList.remove('active');
            this.isMenuOpen = false;
            
            // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–µ–Ω—é
            document.removeEventListener('click', this.handleOutsideClick.bind(this));
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–µ–Ω—é –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
     * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
     */
    handleOutsideClick(event) {
        const menuPanel = document.querySelector('.menu-panel');
        const menuButton = document.querySelector('.menu-button');
        
        // –ï—Å–ª–∏ –∫–ª–∏–∫ –Ω–µ –ø–æ –ø–∞–Ω–µ–ª–∏ –º–µ–Ω—é –∏ –Ω–µ –ø–æ –∫–Ω–æ–ø–∫–µ –º–µ–Ω—é - –∑–∞–∫—Ä—ã–≤–∞–µ–º
        if (!menuPanel?.contains(event.target) && !menuButton?.contains(event.target)) {
            this.toggleMenu(false);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ –ø—É–Ω–∫—Ç–∞–º –º–µ–Ω—é
     * @param {string} menuItemId - ID –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
     */
    handleMenuItemClick(menuItemId) {
        const menuItems = window.MENU_ITEMS || [];
        const menuItem = menuItems.find(item => item.id === menuItemId);
        if (!menuItem) return;

        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.impactOccurred('medium');
        }

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
        this.toggleMenu(false);

        // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
        switch (menuItemId) {
            case 'profile':
                this.openProfileModal();
                break;
            case 'achievements':
                this.openAchievementsModal();
                break;
            case 'settings':
                this.openSettingsModal();
                break;
            case 'help':
                this.openHelpModal();
                break;
            case 'about':
                this.openAboutModal();
                break;
            default:
                console.warn(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é: ${menuItemId}`);
        }
    }

    // üè† –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê

    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Ñ–∏–ª—è
     */
    openProfileModal() {
        const modal = this.createModal('profile', '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', this.getProfileModalContent());
        this.showModal(modal);
    }

    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
     */
    openAchievementsModal() {
        const modal = this.createModal('achievements', '–ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', this.getAchievementsModalContent());
        this.showModal(modal);
    }

    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    openSettingsModal() {
        const modal = this.createModal('settings', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', this.getSettingsModalContent());
        this.showModal(modal);
    }

    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–º–æ—â–∏
     */
    openHelpModal() {
        const modal = this.createModal('help', '–ü–æ–º–æ—â—å', this.getHelpModalContent());
        this.showModal(modal);
    }

    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"
     */
    openAboutModal() {
        const modal = this.createModal('about', '–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏', this.getAboutModalContent());
        this.showModal(modal);
    }

    // üõ†Ô∏è –°–û–ó–î–ê–ù–ò–ï –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï –ú–û–î–ê–õ–ö–ê–ú–ò

    /**
     * –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     * @param {string} id - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫
     * @param {string} content - HTML –∫–æ–Ω—Ç–µ–Ω—Ç
     * @returns {HTMLElement} - –≠–ª–µ–º–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    createModal(id, title, content) {
        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.dataset.modalId = id;
        
        modal.innerHTML = `
            <div class="modal-panel">
                <div class="modal-header">
                    <button class="modal-back" onclick="menuHandler.closeModal('${id}')">‚Üê</button>
                    <span class="modal-title">${title}</span>
                    <button class="modal-close" onclick="menuHandler.closeModal('${id}')">&times;</button>
                </div>
                <div class="modal-content">
                    ${content}
                </div>
            </div>
        `;
        
        return modal;
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
     * @param {HTMLElement} modal - –≠–ª–µ–º–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    showModal(modal) {
        document.body.appendChild(modal);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥–∞–ª–∫–∏
        const modalId = modal.dataset.modalId;
        this.activeModals.add(modalId);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        requestAnimationFrame(() => {
            modal.classList.add('show');
        });
        
        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.impactOccurred('medium');
        }
        
        // –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤—ã–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
        const firstInput = modal.querySelector('input, button, textarea');
        if (firstInput) {
            setTimeout(() => firstInput.focus(), 300);
        }
    }

    /**
     * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
     * @param {string} modalId - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    closeModal(modalId) {
        const modal = document.querySelector(`[data-modal-id="${modalId}"]`);
        if (!modal) return;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è
        modal.classList.remove('show');
        
        // –£–¥–∞–ª—è–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥–∞–ª–æ–∫
        this.activeModals.delete(modalId);
        
        // –£–¥–∞–ª—è–µ–º –∏–∑ DOM –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            if (modal.parentNode) {
                modal.parentNode.removeChild(modal);
            }
        }, 300);
        
        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
        }
    }

    /**
     * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
     */
    closeAllModals() {
        this.activeModals.forEach(modalId => {
            this.closeModal(modalId);
        });
    }

    // üìÑ –ö–û–ù–¢–ï–ù–¢ –ú–û–î–ê–õ–¨–ù–´–• –û–ö–û–ù

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è
     * @returns {string} - HTML –∫–æ–Ω—Ç–µ–Ω—Ç
     */
    getProfileModalContent() {
        return `
            <div class="profile-section">
                <div class="profile-avatar">–ê</div>
                <div class="profile-name">–ê–Ω–Ω–∞ –ú.</div>
                <div class="profile-role">–ß–∏—Ç–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–∏—Å—Ç</div>
                
                <div class="profile-stats">
                    <div class="profile-stat">
                        <div class="profile-stat-number">47</div>
                        <div class="profile-stat-label">–¶–∏—Ç–∞—Ç</div>
                    </div>
                    <div class="profile-stat">
                        <div class="profile-stat-number">12</div>
                        <div class="profile-stat-label">–î–Ω–µ–π</div>
                    </div>
                    <div class="profile-stat">
                        <div class="profile-stat-number">2</div>
                        <div class="profile-stat-label">–ù–∞–≥—Ä–∞–¥—ã</div>
                    </div>
                </div>
            </div>
            
            <div class="profile-section">
                <div class="form-group">
                    <label class="form-label">–ò–º—è</label>
                    <input class="form-input" value="–ê–Ω–Ω–∞" placeholder="–í–∞—à–µ –∏–º—è">
                </div>
                
                <div class="form-group">
                    <label class="form-label">Email</label>
                    <input class="form-input" value="anna@example.com" placeholder="–í–∞—à email">
                </div>
                
                <div class="form-group">
                    <label class="form-label">–û —Å–µ–±–µ</label>
                    <input class="form-input" value="–ó–∞–º—É–∂–µ–º, —Ä–∞–±–æ—Ç–∞—é" placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ">
                </div>
                
                <button class="save-btn" onclick="menuHandler.saveProfile()">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
            </div>
            
            <div class="profile-section">
                <div style="font-size: 14px; font-weight: 600; color: var(--text-primary); margin-bottom: 12px;">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è</div>
                <div style="font-size: 12px; color: var(--text-secondary); margin-bottom: 16px; line-height: 1.4;">
                    –í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥ –∏ –∞–Ω–∞–ª–∏–∑ —Ü–∏—Ç–∞—Ç –æ—Ç –ê–Ω–Ω—ã
                </div>
                <button class="retake-test-btn" onclick="menuHandler.retakeTest()">
                    üîÑ –ü–µ—Ä–µ—Å–¥–∞—Ç—å —Ç–µ—Å—Ç (7 –≤–æ–ø—Ä–æ—Å–æ–≤)
                </button>
            </div>
        `;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
     * @returns {string} - HTML –∫–æ–Ω—Ç–µ–Ω—Ç
     */
    getAchievementsModalContent() {
        return `
            <div style="text-align: center; margin-bottom: 20px; padding: 16px; background: var(--surface); border-radius: var(--border-radius); border: 1px solid var(--border);">
                <div style="font-size: 18px; font-weight: 600; color: var(--text-primary); margin-bottom: 4px;">2 –∏–∑ 8 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</div>
                <div style="font-size: 12px; color: var(--text-secondary);">–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–æ–±–∏—Ä–∞—Ç—å —Ü–∏—Ç–∞—Ç—ã –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞–≥—Ä–∞–¥!</div>
            </div>
            
            <div class="achievement-item unlocked">
                <div class="achievement-icon unlocked">üåü</div>
                <div class="achievement-info">
                    <div class="achievement-title">–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏</div>
                    <div class="achievement-description">–î–æ–±–∞–≤–∏–ª–∏ –ø–µ—Ä–≤—É—é —Ü–∏—Ç–∞—Ç—É –≤ –¥–Ω–µ–≤–Ω–∏–∫</div>
                    <div class="achievement-progress">–í—ã–ø–æ–ª–Ω–µ–Ω–æ!</div>
                </div>
            </div>
            
            <div class="achievement-item unlocked">
                <div class="achievement-icon unlocked">üìö</div>
                <div class="achievement-info">
                    <div class="achievement-title">–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä –º—É–¥—Ä–æ—Å—Ç–∏</div>
                    <div class="achievement-description">–°–æ–±—Ä–∞–ª–∏ 25 —Ü–∏—Ç–∞—Ç</div>
                    <div class="achievement-progress">47/25 - –í—ã–ø–æ–ª–Ω–µ–Ω–æ!</div>
                </div>
            </div>
            
            <div class="achievement-item">
                <div class="achievement-icon locked">üî•</div>
                <div class="achievement-info">
                    <div class="achievement-title">–§–∏–ª–æ—Å–æ—Ñ –Ω–µ–¥–µ–ª–∏</div>
                    <div class="achievement-description">7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ –¥–æ–±–∞–≤–ª—è–π—Ç–µ —Ü–∏—Ç–∞—Ç—ã</div>
                    <div class="achievement-progress">6/7 –¥–Ω–µ–π</div>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: 85%;"></div>
                    </div>
                </div>
            </div>
        `;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     * @returns {string} - HTML –∫–æ–Ω—Ç–µ–Ω—Ç
     */
    getSettingsModalContent() {
        // Get current settings from app state
        const appState = window.app?.state || window.appState;
        const settings = appState?.get('settings') || {};
        
        // Derive checked state from actual settings
        const dailyRemindersChecked = settings.reminders?.enabled !== false;
        const achievementsChecked = settings.achievements?.enabled !== false;
        
        return `
            <div class="settings-group">
                <div class="settings-group-title">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-text">–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</span>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" ${dailyRemindersChecked ? 'checked' : ''} onchange="menuHandler.toggleNotifications('daily', this.checked)">
                        <span class="slider"></span>
                    </label>
                </div>
                
                <div class="settings-item">
                    <div class="settings-item-info">
                        <span class="settings-text">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</span>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" ${achievementsChecked ? 'checked' : ''} onchange="menuHandler.toggleNotifications('achievements', this.checked)">
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
            
            <div class="settings-group">
                <div class="settings-group-title">–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</div>
                
                <div class="settings-item" onclick="menuHandler.toggleDarkTheme()">
                    <div class="settings-item-info">
                        <span class="settings-text">–¢–µ–º–Ω–∞—è —Ç–µ–º–∞</span>
                    </div>
                    <label class="toggle-switch">
                        <input type="checkbox" id="dark-theme-toggle">
                        <span class="slider"></span>
                    </label>
                </div>
                
                <div class="settings-item" onclick="menuHandler.exportData()">
                    <div class="settings-item-info">
                        <span class="settings-text">–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</span>
                    </div>
                    <span class="chevron-icon">‚Üí</span>
                </div>
                
                <div class="settings-item" onclick="menuHandler.confirmDeleteData()">
                    <div class="settings-item-info">
                        <span class="settings-text" style="color: var(--error);">–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ</span>
                    </div>
                    <span class="chevron-icon">‚Üí</span>
                </div>
            </div>
        `;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–º–æ—â–∏
     * @returns {string} - HTML –∫–æ–Ω—Ç–µ–Ω—Ç
     */
    getHelpModalContent() {
        const annaInfo = window.ANNA_INFO || {};
        const contacts = annaInfo.contacts || {};
        
        return `
            <div style="background: linear-gradient(135deg, var(--primary-color), var(--primary-dark)); color: white; border-radius: var(--border-radius); padding: 16px; text-align: center; margin-bottom: 20px;">
                <div style="font-size: 14px; font-weight: 600; margin-bottom: 8px;">üí¨ –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</div>
                <div style="font-size: 12px; opacity: 0.9; margin-bottom: 12px;">–ê–Ω–Ω–∞ –∏ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å</div>
                <button style="background: white; color: var(--primary-color); border: none; padding: 8px 16px; border-radius: 20px; font-weight: 600; cursor: pointer; font-size: 11px;" onclick="menuHandler.contactSupport()">
                    –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
                </button>
            </div>
            
            <div class="faq-section">
                <div class="faq-item" onclick="menuHandler.toggleFaq('quote-add')">
                    <div class="faq-question">‚ùì –ö–∞–∫ –¥–æ–±–∞–≤–ª—è—Ç—å —Ü–∏—Ç–∞—Ç—ã?</div>
                    <div class="faq-answer">–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã –±–æ—Ç—É. –ï—Å–ª–∏ –µ—Å—Ç—å –∞–≤—Ç–æ—Ä - —É–∫–∞–∂–∏—Ç–µ –≤ —Å–∫–æ–±–∫–∞—Ö –∏–ª–∏ —á–µ—Ä–µ–∑ —Ç–∏—Ä–µ.</div>
                </div>
                
                <div class="faq-item" onclick="menuHandler.toggleFaq('reports')">
                    <div class="faq-question">üìä –ö–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç –æ—Ç—á–µ—Ç—ã?</div>
                    <div class="faq-answer">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 11:00. –ú–µ—Å—è—á–Ω—ã–µ - –≤ –ø–µ—Ä–≤—ã—Ö —á–∏—Å–ª–∞—Ö –º–µ—Å—è—Ü–∞.</div>
                </div>
                
                <div class="faq-item" onclick="menuHandler.toggleFaq('analysis')">
                    <div class="faq-question">ü§ñ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –ê–Ω–Ω—ã?</div>
                    <div class="faq-answer">–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã –∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ —Ç–µ—Å—Ç–∞ –ø–æ–¥–±–∏—Ä–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥.</div>
                </div>
            </div>
            
            <div class="contact-info">
                <div style="font-size: 12px; font-weight: 600; margin-bottom: 8px;">üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</div>
                <div style="font-size: 11px; color: var(--text-secondary);">
                    ‚Ä¢ Telegram: ${contacts.telegram || '@annabusel_support'}<br>
                    ‚Ä¢ Email: ${contacts.email || 'help@annabusel.org'}<br>
                    ‚Ä¢ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: –¥–æ 24 —á–∞—Å–æ–≤
                </div>
            </div>
        `;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"
     * @returns {string} - HTML –∫–æ–Ω—Ç–µ–Ω—Ç
     */
    getAboutModalContent() {
        const annaInfo = window.ANNA_INFO || {};
        
        return `
            <div class="anna-card">
                <div class="anna-photo">${annaInfo.photo || '–ê'}</div>
                <div class="anna-name">${annaInfo.name || '–ê–Ω–Ω–∞ –ë—É—Å–µ–ª'}</div>
                <div class="anna-role">${annaInfo.role || '–ü—Å–∏—Ö–æ–ª–æ–≥ ‚Ä¢ –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å "–ö–Ω–∏–∂–Ω–æ–≥–æ –∫–ª—É–±–∞"'}</div>
                <div class="anna-quote">"${annaInfo.quote || '–•–æ—Ä–æ—à–∞—è –∂–∏–∑–Ω—å —Å—Ç—Ä–æ–∏—Ç—Å—è, –∞ –Ω–µ –¥–∞–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'}"</div>
            </div>
            
            <div class="app-info">
                <div class="app-version">
                    <span class="version-label">–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</span>
                    <span class="version-number">1.0.2</span>
                </div>
                
                <div class="app-version">
                    <span class="version-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</span>
                    <span class="version-number">2,847</span>
                </div>
                
                <div class="app-version">
                    <span class="version-label">–¶–∏—Ç–∞—Ç —Å–æ–±—Ä–∞–Ω–æ</span>
                    <span class="version-number">15,392</span>
                </div>
            </div>
            
            <div class="contact-links">
                <a href="#" class="contact-link" onclick="menuHandler.openSocialLink('instagram')">üì∑</a>
                <a href="#" class="contact-link" onclick="menuHandler.openSocialLink('telegram')">‚úàÔ∏è</a>
                <a href="#" class="contact-link" onclick="menuHandler.openSocialLink('website')">üåê</a>
            </div>
        `;
    }

    // ‚öôÔ∏è –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–ï–ô–°–¢–í–ò–ô

    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
     */
    saveProfile() {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API
        const successMsg = window.SUCCESS_MESSAGES?.profileUpdated || '–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω!';
        this.showNotification(successMsg, 'success');
        
        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.notificationOccurred('success');
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
     */
    retakeTest() {
        this.closeAllModals();
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
        console.log('–ó–∞–ø—É—Å–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞');
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     * @param {string} type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     * @param {boolean} enabled - –í–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    toggleNotifications(type, enabled) {
        console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${type}: ${enabled ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–≤—ã–∫–ª—é—á–µ–Ω—ã'}`);
        
        // Get current settings from global state
        const appState = window.app?.state || window.appState;
        if (!appState) {
            console.warn('‚ö†Ô∏è App state not available, cannot persist notification settings');
            return;
        }
        
        const currentSettings = appState.get('settings') || {};
        
        // Map notification type to canonical settings structure
        const settingsUpdate = {};
        
        switch (type) {
            case 'daily':
                settingsUpdate.reminders = { ...currentSettings.reminders };
                settingsUpdate.reminders.enabled = enabled;
                // Ensure frequency has a safe default if missing
                if (!settingsUpdate.reminders.frequency) {
                    settingsUpdate.reminders.frequency = currentSettings.reminders?.frequency || 'standard';
                }
                break;
            case 'achievements':
                settingsUpdate.achievements = { enabled };
                break;
            default:
                console.warn(`‚ö†Ô∏è Unknown notification type: ${type}`);
                return;
        }
        
        // Update local state immediately
        const updatedSettings = { ...currentSettings, ...settingsUpdate };
        appState.set('settings', updatedSettings);
        
        // Persist to server with debounce
        this.debouncedPersistSettings(settingsUpdate);
        
        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
        }
    }
    
    /**
     * Debounced persist settings to server
     * @param {Object} settingsUpdate - Settings to persist
     */
    debouncedPersistSettings(settingsUpdate) {
        // Clear existing timeout
        if (this.persistTimeout) {
            clearTimeout(this.persistTimeout);
        }
        
        // Set new timeout
        this.persistTimeout = setTimeout(async () => {
            try {
                const api = window.app?.api || window.api;
                if (!api) {
                    console.warn('‚ö†Ô∏è API service not available');
                    return;
                }
                
                await api.updateSettings(settingsUpdate);
                console.log('‚úÖ Settings persisted successfully');
            } catch (error) {
                console.error('‚ùå Failed to persist settings:', error);
            }
        }, 600);
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ç–µ–º–Ω—É—é —Ç–µ–º—É
     */
    toggleDarkTheme() {
        const body = document.body;
        const isDark = body.classList.toggle('dark-theme');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        localStorage.setItem('reader-theme', isDark ? 'dark' : 'light');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —á–µ–∫–±–æ–∫—Å
        const toggle = document.getElementById('dark-theme-toggle');
        if (toggle) toggle.checked = isDark;
        
        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
        }
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    exportData() {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
        const successMsg = window.SUCCESS_MESSAGES?.dataExported || '–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!';
        this.showNotification(successMsg, 'success');
        
        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.notificationOccurred('success');
        }
    }

    /**
     * –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    confirmDeleteData() {
        const confirmed = confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.');
        
        if (confirmed) {
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            this.showNotification('–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã', 'info');
            
            // Haptic feedback
            if (window.Telegram?.WebApp?.HapticFeedback) {
                window.Telegram.WebApp.HapticFeedback.notificationOccurred('warning');
            }
        }
    }

    /**
     * –°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
     */
    contactSupport() {
        const annaInfo = window.ANNA_INFO || {};
        const contacts = annaInfo.contacts || {};
        const telegramContact = contacts.telegram || '@annabusel_support';
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram —á–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
        if (window.Telegram?.WebApp) {
            window.Telegram.WebApp.openTelegramLink(`https://t.me/${telegramContact.replace('@', '')}`);
        } else {
            // Fallback –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            window.open(`https://t.me/${telegramContact.replace('@', '')}`, '_blank');
        }
        
        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.impactOccurred('medium');
        }
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç FAQ —ç–ª–µ–º–µ–Ω—Ç
     * @param {string} faqId - ID FAQ —ç–ª–µ–º–µ–Ω—Ç–∞
     */
    toggleFaq(faqId) {
        const faqItem = document.querySelector(`[data-faq-id="${faqId}"]`);
        if (faqItem) {
            faqItem.classList.toggle('expanded');
        }
        
        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
        }
    }

    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
     * @param {string} platform - –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ (instagram, telegram, website)
     */
    openSocialLink(platform) {
        const annaInfo = window.ANNA_INFO || {};
        const contacts = annaInfo.contacts || {};
        const links = {
            instagram: `https://instagram.com/${contacts.instagram || 'annabusel'}`,
            telegram: `https://t.me/${(contacts.telegram || '@annabusel_support').replace('@', '')}`,
            website: `https://${contacts.website || 'annabusel.org'}`
        };
        
        const url = links[platform];
        if (!url) return;
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É
        if (window.Telegram?.WebApp) {
            window.Telegram.WebApp.openLink(url);
        } else {
            window.open(url, '_blank');
        }
        
        // Haptic feedback
        if (window.Telegram?.WebApp?.HapticFeedback) {
            window.Telegram.WebApp.HapticFeedback.impactOccurred('medium');
        }
    }

    // üîî –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     * @param {string} message - –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (success, error, warning, info)
     * @param {number} duration - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞ –≤ –º—Å
     */
    showNotification(message, type = 'info', duration = 3000) {
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.textContent = message;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        requestAnimationFrame(() => {
            notification.classList.add('show');
        });
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, duration);
    }

    // üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é
     */
    init() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É
        const savedTheme = localStorage.getItem('reader-theme');
        if (savedTheme === 'dark') {
            document.body.classList.add('dark-theme');
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        document.addEventListener('keydown', (e) => {
            // ESC –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–æ–∫ –∏ –º–µ–Ω—é
            if (e.key === 'Escape') {
                if (this.activeModals.size > 0) {
                    this.closeAllModals();
                } else if (this.isMenuOpen) {
                    this.toggleMenu(false);
                }
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ Telegram
        if (window.Telegram?.WebApp?.BackButton) {
            window.Telegram.WebApp.BackButton.onClick(() => {
                if (this.activeModals.size > 0) {
                    this.closeAllModals();
                } else if (this.isMenuOpen) {
                    this.toggleMenu(false);
                }
            });
        }
        
        console.log('MenuHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
}

// üåê –°–û–ó–î–ê–ù–ò–ï –ì–õ–û–ë–ê–õ–¨–ù–û–ì–û –≠–ö–ó–ï–ú–ü–õ–Ø–†–ê
const menuHandler = new MenuHandler();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => menuHandler.init());
} else {
    menuHandler.init();
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
window.MenuHandler = MenuHandler;
window.menuHandler = menuHandler;