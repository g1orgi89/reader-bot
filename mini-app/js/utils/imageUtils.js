/**
 * üñºÔ∏è IMAGE UTILS - –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
 * 
 * –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è:
 * - –í–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 * - –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
 * - –°–∂–∞—Ç–∏—è
 * - –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤
 * 
 * @author Claude Assistant
 * @version 1.0.0
 */

class ImageUtils {
    /**
     * –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
     */
    static CONSTRAINTS = {
        MAX_FILE_SIZE: 3 * 1024 * 1024, // 3MB
        TARGET_SIZE: 512, // 512x512 –ø–∏–∫—Å–µ–ª–µ–π
        QUALITY: 0.8, // 80% –∫–∞—á–µ—Å—Ç–≤–∞
        ALLOWED_TYPES: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'],
        OUTPUT_FORMAT: 'image/jpeg' // –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–∞—Ç
    };

    /**
     * üîç –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     * @param {File} file - –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     * @returns {{isValid: boolean, error?: string}} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
     */
    static validateImage(file) {
        try {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
            if (!file) {
                return { isValid: false, error: '–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω' };
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
            if (!this.CONSTRAINTS.ALLOWED_TYPES.includes(file.type)) {
                return { 
                    isValid: false, 
                    error: '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JPG, PNG –∏–ª–∏ WebP' 
                };
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
            if (file.size > this.CONSTRAINTS.MAX_FILE_SIZE) {
                const sizeMB = Math.round(file.size / (1024 * 1024) * 10) / 10;
                return { 
                    isValid: false, 
                    error: `–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (${sizeMB}MB). –ú–∞–∫—Å–∏–º—É–º: 3MB` 
                };
            }

            // –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            if (!file.name || file.name.length < 3) {
                return { 
                    isValid: false, 
                    error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞' 
                };
            }

            return { isValid: true };

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
            return { 
                isValid: false, 
                error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ–∞–π–ª–∞' 
            };
        }
    }

    /**
     * üìè –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     * @param {File} file - –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
     * @param {number} targetSize - –¶–µ–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä (–∫–≤–∞–¥—Ä–∞—Ç)
     * @param {number} quality - –ö–∞—á–µ—Å—Ç–≤–æ —Å–∂–∞—Ç–∏—è (0.1-1.0)
     * @returns {Promise<Blob>} –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
     */
    static async resizeImage(file, targetSize = this.CONSTRAINTS.TARGET_SIZE, quality = this.CONSTRAINTS.QUALITY) {
        return new Promise((resolve, reject) => {
            try {
                // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
                const canvas = document.createElement('canvas');
                const ctx = canvas.getContext('2d');
                const img = new Image();

                img.onload = () => {
                    try {
                        // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –∫—Ä–æ–ø–∞ (–∫–≤–∞–¥—Ä–∞—Ç –∏–∑ —Ü–µ–Ω—Ç—Ä–∞)
                        const minDimension = Math.min(img.width, img.height);
                        const cropX = (img.width - minDimension) / 2;
                        const cropY = (img.height - minDimension) / 2;

                        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä canvas
                        canvas.width = targetSize;
                        canvas.height = targetSize;

                        // –í–∫–ª—é—á–∞–µ–º —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
                        ctx.imageSmoothingEnabled = true;
                        ctx.imageSmoothingQuality = 'high';

                        // –†–∏—Å—É–µ–º –æ–±—Ä–µ–∑–∞–Ω–Ω–æ–µ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        ctx.drawImage(
                            img,
                            cropX, cropY, minDimension, minDimension, // –ò—Å—Ç–æ—á–Ω–∏–∫ (–∫–≤–∞–¥—Ä–∞—Ç –∏–∑ —Ü–µ–Ω—Ç—Ä–∞)
                            0, 0, targetSize, targetSize // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ (—Ü–µ–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä)
                        );

                        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ blob
                        canvas.toBlob(
                            (blob) => {
                                if (blob) {
                                    console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${img.width}x${img.height} ‚Üí ${targetSize}x${targetSize}`);
                                    resolve(blob);
                                } else {
                                    reject(new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å blob'));
                                }
                            },
                            this.CONSTRAINTS.OUTPUT_FORMAT,
                            quality
                        );

                    } catch (error) {
                        reject(new Error(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error.message}`));
                    }
                };

                img.onerror = () => {
                    reject(new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'));
                };

                // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                img.src = URL.createObjectURL(file);

            } catch (error) {
                reject(new Error(`–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${error.message}`));
            }
        });
    }

    /**
     * üîÑ –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     * @param {File} file - –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
     * @param {Object} options - –û–ø—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
     * @returns {Promise<{blob: Blob, preview: string}>} –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –ø—Ä–µ–≤—å—é
     */
    static async processImage(file, options = {}) {
        try {
            // –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ–ø—Ü–∏–∏ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
            const config = {
                targetSize: this.CONSTRAINTS.TARGET_SIZE,
                quality: this.CONSTRAINTS.QUALITY,
                ...options
            };

            console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', {
                name: file.name,
                size: file.size,
                type: file.type,
                config
            });

            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            const validation = this.validateImage(file);
            if (!validation.isValid) {
                throw new Error(validation.error);
            }

            // –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä
            const blob = await this.resizeImage(file, config.targetSize, config.quality);

            // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø—Ä–µ–≤—å—é
            const preview = URL.createObjectURL(blob);

            console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ:', {
                originalSize: file.size,
                processedSize: blob.size,
                compression: Math.round((1 - blob.size / file.size) * 100) + '%'
            });

            return { blob, preview };

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
            throw error;
        }
    }

    /**
     * üé® –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     * @param {File|Blob} fileOrBlob - –§–∞–π–ª –∏–ª–∏ blob
     * @returns {Promise<string>} URL –ø—Ä–µ–≤—å—é
     */
    static async createPreview(fileOrBlob) {
        try {
            if (!fileOrBlob) {
                throw new Error('–§–∞–π–ª –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
            }

            return URL.createObjectURL(fileOrBlob);

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–≤—å—é:', error);
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        }
    }

    /**
     * üßπ –û—á–∏—Å—Ç–∫–∞ URL –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
     * @param {string|string[]} urls - URL –∏–ª–∏ –º–∞—Å—Å–∏–≤ URL –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
     */
    static cleanupUrls(urls) {
        try {
            const urlArray = Array.isArray(urls) ? urls : [urls];
            
            urlArray.forEach(url => {
                if (url && typeof url === 'string' && url.startsWith('blob:')) {
                    URL.revokeObjectURL(url);
                }
            });

            console.log('üßπ –û—á–∏—â–µ–Ω—ã URL –æ–±—ä–µ–∫—Ç—ã:', urlArray.length);

        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ URL –æ–±—ä–µ–∫—Ç–æ–≤:', error);
        }
    }

    /**
     * üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
     * @param {File} file - –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     * @returns {Promise<Object>} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
     */
    static async getImageInfo(file) {
        return new Promise((resolve, reject) => {
            try {
                const img = new Image();

                img.onload = () => {
                    const info = {
                        width: img.width,
                        height: img.height,
                        aspectRatio: img.width / img.height,
                        isSquare: img.width === img.height,
                        fileName: file.name,
                        fileSize: file.size,
                        fileType: file.type,
                        lastModified: file.lastModified
                    };

                    URL.revokeObjectURL(img.src);
                    resolve(info);
                };

                img.onerror = () => {
                    URL.revokeObjectURL(img.src);
                    reject(new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞'));
                };

                img.src = URL.createObjectURL(file);

            } catch (error) {
                reject(new Error(`–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error.message}`));
            }
        });
    }

    /**
     * üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –±—Ä–∞—É–∑–µ—Ä–æ–º
     * @returns {Object} –û–±—ä–µ–∫—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏
     */
    static getSupportedFormats() {
        const canvas = document.createElement('canvas');
        canvas.width = 1;
        canvas.height = 1;

        const formats = {
            jpeg: true, // JPEG –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–µ–∑–¥–µ
            png: true,  // PNG –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–µ–∑–¥–µ
            webp: false,
            avif: false
        };

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º WebP
            formats.webp = canvas.toDataURL('image/webp').indexOf('image/webp') === 5;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º AVIF (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)
            formats.avif = canvas.toDataURL('image/avif').indexOf('image/avif') === 5;
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤:', error);
        }

        return formats;
    }

    /**
     * üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
     * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
     */
    static getDeviceCapabilities() {
        return {
            // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ File API
            fileApi: !!(window.File && window.FileReader && window.FileList && window.Blob),
            
            // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Canvas API
            canvas: !!(document.createElement('canvas').getContext),
            
            // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ drag & drop
            dragDrop: ('draggable' in document.createElement('div')) && !!window.FileReader,
            
            // –ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
            isMobile: /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
            
            // –î–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ
            camera: !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia),
            
            // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä canvas (–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ)
            maxCanvasSize: this.getMaxCanvasSize()
        };
    }

    /**
     * üìê –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ canvas
     * @returns {number} –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤ –ø–∏–∫—Å–µ–ª—è—Ö
     */
    static getMaxCanvasSize() {
        try {
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            
            // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã, –Ω–∞—á–∏–Ω–∞—è —Å –±–æ–ª—å—à–∏—Ö
            const sizes = [32767, 16384, 8192, 4096, 2048];
            
            for (const size of sizes) {
                canvas.width = size;
                canvas.height = size;
                
                // –ü—Ä–æ–±—É–µ–º –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —á—Ç–æ-—Ç–æ
                ctx.fillStyle = '#000';
                ctx.fillRect(0, 0, 1, 1);
                
                // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–∏–∫—Å–µ–ª—å, —Ä–∞–∑–º–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
                const imageData = ctx.getImageData(0, 0, 1, 1);
                if (imageData && imageData.data && imageData.data[3] === 255) {
                    return size;
                }
            }
            
            return 2048; // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π fallback

        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ canvas:', error);
            return 2048;
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = ImageUtils;
} else {
    window.ImageUtils = ImageUtils;
}