/**
 * API —Ä–æ—É—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞ "–ß–∏—Ç–∞—Ç–µ–ª—å"
 * –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ Shrooms Support Bot –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
 */

const express = require('express');
const router = express.Router();
const { requireAuth } = require('../middleware/auth');

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π (–∫–æ–≥–¥–∞ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã)
// const Quote = require('../models/Quote');
// const UserProfile = require('../models/UserProfile');

/**
 * @typedef {Object} QuoteFilters
 * @property {string} period - –ü–µ—Ä–∏–æ–¥ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ ('1d', '7d', '30d', '90d')
 * @property {string} category - –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ü–∏—Ç–∞—Ç—ã
 * @property {string} author - –§–∏–ª—å—Ç—Ä –ø–æ –∞–≤—Ç–æ—Ä—É
 * @property {string} search - –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
 * @property {number} page - –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @property {number} limit - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 */

/**
 * @typedef {Object} QuoteStatistics
 * @property {number} totalQuotes - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ç–∞—Ç
 * @property {number} totalAuthors - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤
 * @property {string} popularCategory - –°–∞–º–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
 * @property {number} dailyAverage - –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ç–∞—Ç –≤ –¥–µ–Ω—å
 * @property {Object} changeStats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
 */

/**
 * @typedef {Object} QuoteAnalytics
 * @property {Array} categoriesData - –î–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
 * @property {Array} timelineData - –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞
 * @property {Array} topAuthors - –¢–æ–ø –∞–≤—Ç–æ—Ä—ã
 * @property {Array} sentimentData - –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
 */

// ==================== –û–°–ù–û–í–ù–´–ï –†–û–£–¢–´ ====================

/**
 * GET /api/quotes - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ü–∏—Ç–∞—Ç —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
 */
router.get('/', requireAuth, async (req, res) => {
    try {
        const {
            period = '7d',
            category = 'all',
            author = 'all',
            search = '',
            page = 1,
            limit = 20,
            sortBy = 'createdAt',
            sortOrder = 'desc'
        } = req.query;

        console.log('üìù –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:', {
            period, category, author, search, page, limit
        });

        // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º mock –¥–∞–Ω–Ω—ã–µ, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –ë–î
        const mockQuotes = generateMockQuotes(parseInt(page), parseInt(limit));
        const totalCount = 8734; // Mock –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞

        const response = {
            success: true,
            data: {
                quotes: mockQuotes,
                pagination: {
                    currentPage: parseInt(page),
                    totalPages: Math.ceil(totalCount / parseInt(limit)),
                    totalCount,
                    hasNext: page * limit < totalCount,
                    hasPrev: page > 1
                },
                filters: {
                    period,
                    category,
                    author,
                    search
                }
            }
        };

        res.json(response);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç',
            error: error.message
        });
    }
});

/**
 * GET /api/quotes/statistics - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ü–∏—Ç–∞—Ç
 */
router.get('/statistics', requireAuth, async (req, res) => {
    try {
        const { period = '7d' } = req.query;

        console.log('üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ü–∏—Ç–∞—Ç –∑–∞ –ø–µ—Ä–∏–æ–¥:', period);

        // Mock —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        const statistics = {
            totalQuotes: 8734,
            totalAuthors: 156,
            popularCategory: '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ',
            dailyAverage: 18.2,
            changeStats: {
                quotesChange: '+127',
                authorsChange: '+12',
                avgChange: '+2.3'
            },
            period
        };

        res.json({
            success: true,
            data: statistics
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ü–∏—Ç–∞—Ç',
            error: error.message
        });
    }
});

/**
 * GET /api/quotes/analytics - –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
 */
router.get('/analytics', requireAuth, async (req, res) => {
    try {
        const { period = '7d' } = req.query;

        console.log('üìà –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Ü–∏—Ç–∞—Ç –∑–∞ –ø–µ—Ä–∏–æ–¥:', period);

        // Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
        const analytics = {
            categories: {
                labels: ['–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ', '–õ—é–±–æ–≤—å', '–ú—É–¥—Ä–æ—Å—Ç—å', '–§–∏–ª–æ—Å–æ—Ñ–∏—è', '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–ú–æ—Ç–∏–≤–∞—Ü–∏—è', '–û—Ç–Ω–æ—à–µ–Ω–∏—è'],
                data: [34, 22, 18, 12, 8, 4, 2],
                colors: ['#d4af37', '#c97a7e', '#81b3d3', '#a8c686', '#deb887', '#cd853f', '#f4a460']
            },
            timeline: {
                labels: period === '1d' ? 
                    ['00:00', '04:00', '08:00', '12:00', '16:00', '20:00'] :
                    period === '7d' ?
                    ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'] :
                    ['–ù–µ–¥–µ–ª—è 1', '–ù–µ–¥–µ–ª—è 2', '–ù–µ–¥–µ–ª—è 3', '–ù–µ–¥–µ–ª—è 4'],
                data: period === '1d' ? 
                    [2, 1, 5, 12, 8, 4] :
                    period === '7d' ?
                    [12, 19, 15, 25, 22, 18, 24] :
                    [78, 89, 95, 102]
            },
            topAuthors: [
                { name: '–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π', count: 234, percentage: 15.2 },
                { name: '–≠—Ä–∏—Ö –§—Ä–æ–º–º', count: 189, percentage: 12.3 },
                { name: '–ú–∞—Ä–∏–Ω–∞ –¶–≤–µ—Ç–∞–µ–≤–∞', count: 156, percentage: 10.1 },
                { name: '–ë—É–¥–¥–∞', count: 134, percentage: 8.7 },
                { name: '–†–∞–ª—å—Ñ –≠–º–µ—Ä—Å–æ–Ω', count: 98, percentage: 6.4 },
                { name: '–ë–µ–∑ –∞–≤—Ç–æ—Ä–∞', count: 87, percentage: 5.7 }
            ],
            sentiment: {
                labels: ['–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ', '–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ', '–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ'],
                data: [68, 27, 5],
                colors: ['#4ade80', '#64748b', '#ef4444']
            }
        };

        res.json({
            success: true,
            data: analytics
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Ü–∏—Ç–∞—Ç',
            error: error.message
        });
    }
});

/**
 * GET /api/quotes/:id - –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–∏—Ç–∞—Ç–µ
 */
router.get('/:id', requireAuth, async (req, res) => {
    try {
        const { id } = req.params;

        console.log('üìù –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–∏—Ç–∞—Ç–µ:', id);

        // Mock –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        const quoteDetails = {
            id: id,
            text: '–í –∫–∞–∂–¥–æ–º —Å–ª–æ–≤–µ ‚Äî —Ü–µ–ª–∞—è –∂–∏–∑–Ω—å. –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –Ω–µ—Å–µ—Ç –≤ —Å–µ–±–µ –∏—Å—Ç–æ—Ä–∏—é, —ç–º–æ—Ü–∏—é, —Å–º—ã—Å–ª, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –º–∏—Ä–∞.',
            author: '–ú–∞—Ä–∏–Ω–∞ –¶–≤–µ—Ç–∞–µ–≤–∞',
            source: '–°–æ–±—Ä–∞–Ω–∏–µ —Å–æ—á–∏–Ω–µ–Ω–∏–π',
            category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
            themes: ['–ø–æ—ç–∑–∏—è', '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ', '—Å–ª–æ–≤–æ'],
            sentiment: 'positive',
            user: {
                id: 'user123',
                name: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
                telegramUsername: '@maria_p',
                email: 'maria@example.com'
            },
            meta: {
                weekNumber: 27,
                monthNumber: 7,
                createdAt: '2025-07-03T11:23:00.000Z',
                editedAt: null,
                wordCount: 22,
                characterCount: 134
            },
            aiAnalysis: {
                summary: '–≠—Ç–∞ —Ü–∏—Ç–∞—Ç–∞ –æ—Ç—Ä–∞–∂–∞–µ—Ç –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–∏–ª—ã —Å–ª–æ–≤ –∏ —è–∑—ã–∫–∞.',
                insights: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ–∏—Å–∫–µ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è –≥–ª—É–±–∏–Ω–Ω–æ–≥–æ —Å–º—ã—Å–ª–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã. –¶–∏—Ç–∞—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è.',
                recommendation: '–ü–æ–¥—Ö–æ–¥–∏—Ç —Ä–∞–∑–±–æ—Ä "–ü–∏—Å—å–º–∞ –∫ –º–æ–ª–æ–¥–æ–º—É –ø–æ—ç—Ç—É" –†–∏–ª—å–∫–µ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞.',
                confidence: 0.92
            },
            relatedQuotes: [
                {
                    id: 'Q002',
                    text: '–ü–æ—ç–∑–∏—è ‚Äî —ç—Ç–æ –∂–∏–≤–æ–ø–∏—Å—å —Å–ª–æ–≤–∞–º–∏',
                    author: '–°–∏–º–æ–Ω–∏–¥',
                    similarity: 0.78
                }
            ]
        };

        res.json({
            success: true,
            data: quoteDetails
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–∏—Ç–∞—Ç–µ',
            error: error.message
        });
    }
});

/**
 * POST /api/quotes/:id/analyze - –ó–∞–ø—É—Å–∫ AI –∞–Ω–∞–ª–∏–∑–∞ —Ü–∏—Ç–∞—Ç—ã
 */
router.post('/:id/analyze', requireAuth, async (req, res) => {
    try {
        const { id } = req.params;

        console.log('ü§ñ –ó–∞–ø—É—Å–∫ AI –∞–Ω–∞–ª–∏–∑–∞ —Ü–∏—Ç–∞—Ç—ã:', id);

        // –ò–º–∏—Ç–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞
        setTimeout(() => {
            // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ Claude API
        }, 2000);

        res.json({
            success: true,
            message: 'AI –∞–Ω–∞–ª–∏–∑ –∑–∞–ø—É—â–µ–Ω',
            data: {
                quoteId: id,
                status: 'processing',
                estimatedTime: '30 —Å–µ–∫—É–Ω–¥'
            }
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ AI –∞–Ω–∞–ª–∏–∑–∞',
            error: error.message
        });
    }
});

/**
 * PUT /api/quotes/:id - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)
 */
router.put('/:id', requireAuth, async (req, res) => {
    try {
        const { id } = req.params;
        const { text, author, category, themes } = req.body;

        console.log('‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã:', id, { text, author, category });

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!text || text.trim().length === 0) {
            return res.status(400).json({
                success: false,
                message: '–¢–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º'
            });
        }

        // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        const updatedQuote = {
            id,
            text: text.trim(),
            author: author?.trim() || null,
            category: category || '–ú—É–¥—Ä–æ—Å—Ç—å',
            themes: themes || ['–æ–±–Ω–æ–≤–ª–µ–Ω–æ'],
            updatedAt: new Date().toISOString(),
            updatedBy: req.user.username
        };

        res.json({
            success: true,
            message: '–¶–∏—Ç–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
            data: updatedQuote
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã',
            error: error.message
        });
    }
});

/**
 * DELETE /api/quotes/:id - –£–¥–∞–ª–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã
 */
router.delete('/:id', requireAuth, async (req, res) => {
    try {
        const { id } = req.params;
        const { reason = '–£–¥–∞–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º' } = req.body;

        console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã:', id, '–ü—Ä–∏—á–∏–Ω–∞:', reason);

        // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ - –º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        res.json({
            success: true,
            message: '–¶–∏—Ç–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞',
            data: {
                id,
                deletedAt: new Date().toISOString(),
                deletedBy: req.user.username,
                reason
            }
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã',
            error: error.message
        });
    }
});

/**
 * POST /api/quotes/export - –≠–∫—Å–ø–æ—Ä—Ç —Ü–∏—Ç–∞—Ç
 */
router.post('/export', requireAuth, async (req, res) => {
    try {
        const { 
            format = 'csv',
            period = '30d',
            category = 'all',
            includeUserData = false
        } = req.body;

        console.log('üìä –≠–∫—Å–ø–æ—Ä—Ç —Ü–∏—Ç–∞—Ç:', { format, period, category, includeUserData });

        // –ò–º–∏—Ç–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞
        const exportData = {
            filename: `quotes_export_${new Date().toISOString().split('T')[0]}.${format}`,
            format,
            recordsCount: 1234,
            generatedAt: new Date().toISOString(),
            downloadUrl: `/api/quotes/download/${Date.now()}.${format}`
        };

        res.json({
            success: true,
            message: '–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–ø—É—â–µ–Ω',
            data: exportData
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ü–∏—Ç–∞—Ç',
            error: error.message
        });
    }
});

/**
 * GET /api/quotes/search/similar/:id - –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ü–∏—Ç–∞—Ç
 */
router.get('/search/similar/:id', requireAuth, async (req, res) => {
    try {
        const { id } = req.params;
        const { limit = 5 } = req.query;

        console.log('üîç –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ü–∏—Ç–∞—Ç –¥–ª—è:', id);

        // Mock –ø–æ—Ö–æ–∂–∏–µ —Ü–∏—Ç–∞—Ç—ã
        const similarQuotes = [
            {
                id: 'Q002',
                text: '–ü–æ—ç–∑–∏—è ‚Äî —ç—Ç–æ –∂–∏–≤–æ–ø–∏—Å—å —Å–ª–æ–≤–∞–º–∏, –∞ –∂–∏–≤–æ–ø–∏—Å—å ‚Äî –Ω–µ–º–∞—è –ø–æ—ç–∑–∏—è',
                author: '–°–∏–º–æ–Ω–∏–¥',
                similarity: 0.78,
                category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ'
            },
            {
                id: 'Q003', 
                text: '–°–ª–æ–≤–æ ‚Äî –æ–¥–Ω–æ –∏–∑ –≤–µ–ª–∏—á–∞–π—à–∏—Ö –æ—Ä—É–¥–∏–π —á–µ–ª–æ–≤–µ–∫–∞',
                author: '–ê–Ω–∞—Ç–æ–ª—å –§—Ä–∞–Ω—Å',
                similarity: 0.72,
                category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ'
            }
        ];

        res.json({
            success: true,
            data: {
                sourceQuoteId: id,
                similarQuotes: similarQuotes.slice(0, parseInt(limit))
            }
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö —Ü–∏—Ç–∞—Ç:', error);
        res.status(500).json({
            success: false,
            message: '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö —Ü–∏—Ç–∞—Ç',
            error: error.message
        });
    }
});

// ==================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è mock –¥–∞–Ω–Ω—ã—Ö —Ü–∏—Ç–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * @param {number} page - –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {number} limit - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 * @returns {Array} –ú–∞—Å—Å–∏–≤ —Ü–∏—Ç–∞—Ç
 */
function generateMockQuotes(page = 1, limit = 20) {
    const quotes = [
        {
            id: 'Q001',
            text: '–í –∫–∞–∂–¥–æ–º —Å–ª–æ–≤–µ ‚Äî —Ü–µ–ª–∞—è –∂–∏–∑–Ω—å',
            author: '–ú–∞—Ä–∏–Ω–∞ –¶–≤–µ—Ç–∞–µ–≤–∞',
            category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
            sentiment: 'positive',
            user: {
                name: '–ú–∞—Ä–∏—è –ü.',
                username: '@maria_p'
            },
            createdAt: '2025-07-06T11:23:00.000Z',
            themes: ['–ø–æ—ç–∑–∏—è', '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ'],
            wordCount: 6
        },
        {
            id: 'Q002',
            text: '–õ—é–±–æ–≤—å ‚Äî —ç—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –ª—é–±–∏—Ç—å, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —á—É–≤—Å—Ç–≤–æ',
            author: '–≠—Ä–∏—Ö –§—Ä–æ–º–º',
            category: '–õ—é–±–æ–≤—å',
            sentiment: 'positive',
            user: {
                name: '–ï–ª–µ–Ω–∞ –°.',
                username: '@elena_s'
            },
            createdAt: '2025-07-06T09:15:00.000Z',
            themes: ['–ª—é–±–æ–≤—å', '–æ—Ç–Ω–æ—à–µ–Ω–∏—è'],
            wordCount: 9
        },
        {
            id: 'Q003',
            text: '–°—á–∞—Å—Ç—å–µ –≤–Ω—É—Ç—Ä–∏ –Ω–∞—Å, –∞ –Ω–µ –≤–æ–≤–Ω–µ',
            author: '–ë—É–¥–¥–∞',
            category: '–ú—É–¥—Ä–æ—Å—Ç—å',
            sentiment: 'positive',
            user: {
                name: '–ê–Ω–Ω–∞ –ú.',
                username: '@anna_m'
            },
            createdAt: '2025-07-06T07:30:00.000Z',
            themes: ['—Å—á–∞—Å—Ç—å–µ', '–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–∏—Ä'],
            wordCount: 7
        },
        {
            id: 'Q004',
            text: '–ñ–∏–∑–Ω—å ‚Äî —ç—Ç–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ —Ä–æ—Å—Ç',
            author: null,
            category: '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ',
            sentiment: 'positive',
            user: {
                name: '–ù–∞—Ç–∞–ª—å—è –ö.',
                username: '@natalia_k'
            },
            createdAt: '2025-07-05T20:45:00.000Z',
            themes: ['–æ–±—É—á–µ–Ω–∏–µ', '—Ä–∞–∑–≤–∏—Ç–∏–µ'],
            wordCount: 7
        },
        {
            id: 'Q005',
            text: '–í—Ä–µ–º—è –ª–µ—á–∏—Ç —Ä–∞–Ω—ã, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —à—Ä–∞–º—ã –ø–∞–º—è—Ç–∏',
            author: '–ù–∞—Ä–æ–¥–Ω–∞—è –º—É–¥—Ä–æ—Å—Ç—å',
            category: '–§–∏–ª–æ—Å–æ—Ñ–∏—è',
            sentiment: 'neutral',
            user: {
                name: '–û–ª—å–≥–∞ –†.',
                username: '@olga_r'
            },
            createdAt: '2025-07-05T18:20:00.000Z',
            themes: ['–≤—Ä–µ–º—è', '–ø–∞–º—è—Ç—å'],
            wordCount: 8
        }
    ];

    // –î—É–±–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    const allQuotes = [];
    for (let i = 0; i < Math.ceil(8734 / quotes.length); i++) {
        quotes.forEach((quote, index) => {
            allQuotes.push({
                ...quote,
                id: `Q${String(i * quotes.length + index + 1).padStart(3, '0')}`,
                createdAt: new Date(Date.now() - Math.random() * 7 * 24 * 60 * 60 * 1000).toISOString()
            });
        });
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const startIndex = (page - 1) * limit;
    return allQuotes.slice(startIndex, startIndex + limit);
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
 * @param {string} period - –ü–µ—Ä–∏–æ–¥ ('1d', '7d', '30d', '90d')
 * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
 */
function getStatisticsForPeriod(period) {
    const baseStats = {
        '1d': { quotes: 24, authors: 18, avgDaily: 24.0 },
        '7d': { quotes: 127, authors: 89, avgDaily: 18.1 },
        '30d': { quotes: 542, authors: 234, avgDaily: 18.1 },
        '90d': { quotes: 1624, authors: 456, avgDaily: 18.0 }
    };

    return baseStats[period] || baseStats['7d'];
}

module.exports = router;
