/**
 * BOTTOM NAVIGATION FIXER v2.0
 * –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª—å—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 * 
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –ø–æ–∑–∏—Ü–∏—é –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ª—é–±—ã–µ
 * —Å–±–æ–∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞ iOS –∏ –ø—Ä–∏ —Å–≤–∞–π–ø–∞—Ö –≤ Telegram Mini Apps.
 */

class BottomNavFixer {
    constructor() {
        this.panel = null;
        this.originalStyles = {};
        this.isFixerActive = false;
        this.updateInterval = null;
        this.observers = [];
        
        console.log('üîß BottomNavFixer v2.0: Starting initialization...');
        this.init();
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–∫—Å–µ—Ä–∞
     */
    init() {
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => this.setup());
        } else {
            this.setup();
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–∫—Å–µ—Ä–∞
     */
    setup() {
        this.panel = document.querySelector('.bottom-nav');
        
        if (!this.panel) {
            console.warn('‚ö†Ô∏è BottomNavFixer: .bottom-nav element not found');
            return;
        }
        
        console.log('‚úÖ BottomNavFixer: Navigation panel found');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
        this.saveOriginalStyles();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–∫—Å–µ—Ä
        this.startFixer();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Å–µ—Ä–≤–µ—Ä—ã
        this.setupObservers();
        
        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        this.setupEventListeners();
        
        console.log('‚úÖ BottomNavFixer: Setup completed');
    }
    
    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π
     */
    saveOriginalStyles() {
        const computedStyle = window.getComputedStyle(this.panel);
        this.originalStyles = {
            position: this.panel.style.position || computedStyle.position,
            bottom: this.panel.style.bottom || computedStyle.bottom,
            left: this.panel.style.left || computedStyle.left,
            right: this.panel.style.right || computedStyle.right,
            transform: this.panel.style.transform || computedStyle.transform,
            zIndex: this.panel.style.zIndex || computedStyle.zIndex
        };
        
        console.log('üíæ Original styles saved:', this.originalStyles);
    }
    
    /**
     * –ó–∞–ø—É—Å–∫ —Ñ–∏–∫—Å–µ—Ä–∞
     */
    startFixer() {
        this.isFixerActive = true;
        
        // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏—é
        this.forceCorrectPosition();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        this.updateInterval = setInterval(() => {
            this.forceCorrectPosition();
        }, 100); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 100–º—Å
        
        console.log('üöÄ BottomNavFixer: Active monitoring started');
    }
    
    /**
     * –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
     */
    forceCorrectPosition() {
        if (!this.panel || !this.isFixerActive) return;
        
        const currentStyles = {
            position: this.panel.style.position,
            bottom: this.panel.style.bottom,
            left: this.panel.style.left,
            right: this.panel.style.right,
            transform: this.panel.style.transform
        };
        
        // –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –°–¢–ò–õ–ò - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–∏–º–∏
        const correctStyles = {
            position: 'fixed',
            bottom: '0px',
            left: '50%',
            right: 'auto',
            transform: 'translateX(-50%)',
            zIndex: '1000',
            width: '100%',
            maxWidth: '430px'
        };
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        let needsUpdate = false;
        for (const [key, value] of Object.entries(correctStyles)) {
            if (this.panel.style[key] !== value) {
                needsUpdate = true;
                break;
            }
        }
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if (needsUpdate) {
            Object.assign(this.panel.style, correctStyles);
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ iOS-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ñ–∏–∫—Å—ã
            if (this.isIOS()) {
                this.panel.style.webkitBackfaceVisibility = 'hidden';
                this.panel.style.backfaceVisibility = 'hidden';
                this.panel.style.webkitTransform = 'translateX(-50%) translateZ(0)';
                this.panel.style.willChange = 'auto';
            }
            
            console.log('üîß Position corrected');
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
     */
    setupObservers() {
        // MutationObserver –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∏–ª–µ–π
        const styleObserver = new MutationObserver((mutations) => {
            mutations.forEach((mutation) => {
                if (mutation.type === 'attributes' && mutation.attributeName === 'style') {
                    // –ö—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏–ª —Å—Ç–∏–ª–∏ - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
                    setTimeout(() => this.forceCorrectPosition(), 10);
                }
            });
        });
        
        styleObserver.observe(this.panel, {
            attributes: true,
            attributeFilter: ['style', 'class']
        });
        
        this.observers.push(styleObserver);
        
        // ResizeObserver –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–æ–≤ viewport
        if (window.ResizeObserver) {
            const resizeObserver = new ResizeObserver(() => {
                setTimeout(() => this.forceCorrectPosition(), 50);
            });
            
            resizeObserver.observe(document.body);
            this.observers.push(resizeObserver);
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // Telegram —Å–æ–±—ã—Ç–∏—è
        if (window.Telegram?.WebApp?.onEvent) {
            window.Telegram.WebApp.onEvent('viewportChanged', () => {
                console.log('üì± Telegram viewport changed - fixing position');
                setTimeout(() => this.forceCorrectPosition(), 10);
            });
        }
        
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
        ['resize', 'orientationchange', 'scroll'].forEach(eventName => {
            window.addEventListener(eventName, () => {
                setTimeout(() => this.forceCorrectPosition(), 50);
            });
        });
        
        // –§–æ–∫—É—Å/–ø–æ—Ç–µ—Ä—è —Ñ–æ–∫—É—Å–∞ input —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (iOS keyboard)
        document.addEventListener('focusin', () => {
            setTimeout(() => this.forceCorrectPosition(), 300);
        });
        
        document.addEventListener('focusout', () => {
            setTimeout(() => this.forceCorrectPosition(), 100);
        });
        
        // –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ —Å—Ç–∏–ª–µ–π
        document.addEventListener('DOMContentLoaded', () => {
            setTimeout(() => this.forceCorrectPosition(), 500);
        });
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.addEventListener('load', () => {
            setTimeout(() => this.forceCorrectPosition(), 100);
        });
    }
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
     */
    isIOS() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) ||
               (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);
    }
    
    /**
     * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥)
     */
    forceUpdate() {
        console.log('üîÑ Force update requested');
        this.forceCorrectPosition();
    }
    
    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–∫—Å–µ—Ä–∞
     */
    stop() {
        this.isFixerActive = false;
        
        if (this.updateInterval) {
            clearInterval(this.updateInterval);
            this.updateInterval = null;
        }
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ—Ö –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π
        this.observers.forEach(observer => observer.disconnect());
        this.observers = [];
        
        console.log('‚èπÔ∏è BottomNavFixer: Stopped');
    }
    
    /**
     * –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ñ–∏–∫—Å–µ—Ä–∞
     */
    restart() {
        console.log('üîÑ BottomNavFixer: Restarting...');
        this.stop();
        setTimeout(() => this.startFixer(), 100);
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ñ–∏–∫—Å–µ—Ä–∞
     */
    getStatus() {
        return {
            isActive: this.isFixerActive,
            hasPanel: !!this.panel,
            isIOS: this.isIOS(),
            currentStyles: this.panel ? {
                position: this.panel.style.position,
                bottom: this.panel.style.bottom,
                left: this.panel.style.left,
                transform: this.panel.style.transform
            } : null
        };
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
let bottomNavFixer = null;

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–∫—Å–µ—Ä
function initBottomNavFixer() {
    if (!bottomNavFixer) {
        bottomNavFixer = new BottomNavFixer();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ window –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        window.bottomNavFixer = bottomNavFixer;
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initBottomNavFixer);
} else {
    initBottomNavFixer();
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Telegram —Å–æ–±—ã—Ç–∏—è
if (window.Telegram?.WebApp) {
    window.Telegram.WebApp.ready(() => {
        setTimeout(initBottomNavFixer, 200);
    });
}

console.log('‚úÖ BottomNavFixer v2.0: Module loaded and ready');
