/**
 * TELEGRAM MINI APP NAVIGATION FIXER
 * 
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç Telegram –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã
 * –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
 * 
 * –î–û–ë–ê–í–õ–ï–ù–´ –í–ò–î–ò–ú–´–ï –ò–ù–î–ò–ö–ê–¢–û–†–´ –î–õ–Ø –û–¢–õ–ê–î–ö–ò
 */

class TelegramNavigationFixer {
    constructor() {
        this.isTelegram = false;
        this.isDarkTheme = false;
        this.debugMode = false;
        this.statusIndicator = null;
        
        this.init();
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞
     */
    init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        this.detectTelegramEnvironment();
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º CSS –∫–ª–∞—Å—Å—ã
        this.applyCSSClasses();
        
        // –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∏–º—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞
        this.createStatusIndicator();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏
        this.setupEventListeners();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–∫—Å–µ—Ä
        this.startNavigationWatcher();
        
        this.showStatus(`üîß TG Fixer: ${this.isTelegram ? 'ACTIVE' : 'INACTIVE'}`);
    }
    
    /**
     * –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∏–º—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞
     */
    createStatusIndicator() {
        this.statusIndicator = document.createElement('div');
        this.statusIndicator.id = 'tg-status';
        this.statusIndicator.style.cssText = `
            position: fixed;
            top: 10px;
            left: 10px;
            background: ${this.isTelegram ? '#00ff00' : '#ff6600'};
            color: black;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 10px;
            font-weight: bold;
            z-index: 999999;
            font-family: monospace;
            max-width: 200px;
            word-wrap: break-word;
            pointer-events: none;
        `;
        
        document.body.appendChild(this.statusIndicator);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –µ—Å–ª–∏ –Ω–µ debug —Ä–µ–∂–∏–º
        if (!this.debugMode) {
            setTimeout(() => {
                if (this.statusIndicator) {
                    this.statusIndicator.style.display = 'none';
                }
            }, 5000);
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–µ
     */
    showStatus(message) {
        if (this.statusIndicator) {
            this.statusIndicator.textContent = message;
            this.statusIndicator.style.display = 'block';
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
            if (message.includes('ERROR') || message.includes('FAIL')) {
                this.statusIndicator.style.background = '#ff4444';
                this.statusIndicator.style.color = 'white';
            } else if (message.includes('SUCCESS') || message.includes('FIXED')) {
                this.statusIndicator.style.background = '#00ff00';
                this.statusIndicator.style.color = 'black';
            } else if (message.includes('WARNING')) {
                this.statusIndicator.style.background = '#ffaa00';
                this.statusIndicator.style.color = 'black';
            }
        }
    }
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ–º Telegram –æ–∫—Ä—É–∂–µ–Ω–∏–µ
     */
    detectTelegramEnvironment() {
        let detectionMethods = [];
        
        // –ú–µ—Ç–æ–¥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram WebApp API
        if (window.Telegram?.WebApp) {
            this.isTelegram = true;
            detectionMethods.push('WebApp API');
        }
        
        // –ú–µ—Ç–æ–¥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ User Agent
        const userAgent = navigator.userAgent.toLowerCase();
        if (userAgent.includes('telegram')) {
            this.isTelegram = true;
            detectionMethods.push('User Agent');
        }
        
        // –ú–µ—Ç–æ–¥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.get('tgWebAppPlatform') || urlParams.get('tgWebAppVersion')) {
            this.isTelegram = true;
            detectionMethods.push('URL params');
        }
        
        // –ú–µ—Ç–æ–¥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ referrer
        if (document.referrer.includes('telegram.org') || document.referrer.includes('t.me')) {
            this.isTelegram = true;
            detectionMethods.push('Referrer');
        }
        
        // –ú–µ—Ç–æ–¥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ window —Ä–∞–∑–º–µ—Ä–æ–≤ (Telegram –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã)
        const isTelegramSize = window.innerWidth <= 430 && window.innerHeight >= 600;
        if (isTelegramSize && (window.Telegram || userAgent.includes('mobile'))) {
            this.isTelegram = true;
            detectionMethods.push('Window size');
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—É
        this.detectTheme();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ—Ç–µ–∫—Ü–∏–∏
        this.showStatus(`üîç DETECTED: ${this.isTelegram ? 'TELEGRAM' : 'BROWSER'} (${detectionMethods.join(', ') || 'none'})`);
        setTimeout(() => {
            this.showStatus(`üì± UA: ${userAgent.substring(0, 50)}...`);
        }, 2000);
    }
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—É Telegram
     */
    detectTheme() {
        if (window.Telegram?.WebApp?.colorScheme) {
            this.isDarkTheme = window.Telegram.WebApp.colorScheme === 'dark';
        } else {
            // Fallback –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—É—é —Ç–µ–º—É
            this.isDarkTheme = window.matchMedia('(prefers-color-scheme: dark)').matches;
        }
    }
    
    /**
     * –ü—Ä–∏–º–µ–Ω—è–µ–º CSS –∫–ª–∞—Å—Å—ã
     */
    applyCSSClasses() {
        const body = document.body;
        
        if (this.isTelegram) {
            body.classList.add('telegram-mini-app');
            this.showStatus('‚úÖ Applied telegram-mini-app class');
        }
        
        if (this.isDarkTheme) {
            body.classList.add('dark-theme');
        } else {
            body.classList.add('light-theme');
        }
        
        // Debug —Ä–µ–∂–∏–º (–º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä)
        if (localStorage.getItem('telegram-debug') === 'true') {
            body.classList.add('debug');
            this.debugMode = true;
            this.showStatus('üêõ DEBUG MODE ON');
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        if (!this.isTelegram) return;
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –≤ Telegram
        if (window.Telegram?.WebApp?.onEvent) {
            window.Telegram.WebApp.onEvent('themeChanged', () => {
                this.showStatus('üé® Theme changed');
                this.detectTheme();
                this.updateThemeClass();
            });
        }
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è viewport –≤ Telegram
        if (window.Telegram?.WebApp?.onEvent) {
            window.Telegram.WebApp.onEvent('viewportChanged', () => {
                this.showStatus('üì± Viewport changed');
                this.forceNavigationFix();
            });
        }
        
        // –°–ª—É—à–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
        window.addEventListener('resize', () => {
            if (this.isTelegram) {
                this.showStatus('üìê Window resized');
                setTimeout(() => this.forceNavigationFix(), 100);
            }
        });
        
        window.addEventListener('orientationchange', () => {
            if (this.isTelegram) {
                this.showStatus('üîÑ Orientation changed');
                setTimeout(() => this.forceNavigationFix(), 300);
            }
        });
        
        // –°–ª—É—à–∞–µ–º scroll —Å–æ–±—ã—Ç–∏—è
        let scrollTimeout;
        let scrollCount = 0;
        window.addEventListener('scroll', () => {
            if (!this.isTelegram) return;
            
            scrollCount++;
            clearTimeout(scrollTimeout);
            scrollTimeout = setTimeout(() => {
                this.showStatus(`üìú Scrolled ${scrollCount} times - fixing nav`);
                scrollCount = 0;
                this.forceNavigationFix();
            }, 50);
        }, { passive: true });
        
        // –ö–ª–∏–∫ –ø–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—É –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è debug —Ä–µ–∂–∏–º–∞
        if (this.statusIndicator) {
            this.statusIndicator.style.pointerEvents = 'auto';
            this.statusIndicator.style.cursor = 'pointer';
            this.statusIndicator.addEventListener('click', () => {
                this.toggleDebugMode();
            });
        }
    }
    
    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º debug —Ä–µ–∂–∏–º
     */
    toggleDebugMode() {
        this.debugMode = !this.debugMode;
        
        if (this.debugMode) {
            localStorage.setItem('telegram-debug', 'true');
            document.body.classList.add('debug');
            this.statusIndicator.style.display = 'block';
            this.showStatus('üêõ DEBUG MODE ON - Tap to turn off');
        } else {
            localStorage.removeItem('telegram-debug');
            document.body.classList.remove('debug');
            this.showStatus('‚ùå DEBUG MODE OFF');
            
            // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                if (!this.debugMode && this.statusIndicator) {
                    this.statusIndicator.style.display = 'none';
                }
            }, 3000);
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å —Ç–µ–º—ã
     */
    updateThemeClass() {
        const body = document.body;
        
        if (this.isDarkTheme) {
            body.classList.remove('light-theme');
            body.classList.add('dark-theme');
        } else {
            body.classList.remove('dark-theme');
            body.classList.add('light-theme');
        }
    }
    
    /**
     * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    forceNavigationFix() {
        if (!this.isTelegram) return;
        
        const nav = document.querySelector('.bottom-nav');
        if (!nav) {
            this.showStatus('‚ùå ERROR: .bottom-nav not found!');
            return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        const rect = nav.getBoundingClientRect();
        const windowHeight = window.innerHeight;
        const navBottom = rect.bottom;
        const diff = Math.abs(navBottom - windowHeight);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é
        this.showStatus(`üìç Nav pos: bottom=${navBottom.toFixed(0)}, win=${windowHeight}, diff=${diff.toFixed(0)}`);
        
        // –ï—Å–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–µ –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
        if (diff > 5) {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∏–ª–∏
            nav.style.transform = '';
            nav.style.webkitTransform = '';
            nav.style.translate = '';
            nav.style.bottom = '';
            nav.style.position = '';
            nav.style.left = '';
            nav.style.right = '';
            nav.style.margin = '';
            nav.style.marginLeft = '';
            nav.style.marginRight = '';
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
            nav.style.cssText = `
                position: fixed !important;
                bottom: 0 !important;
                left: 0 !important;
                right: 0 !important;
                transform: none !important;
                -webkit-transform: none !important;
                margin: 0 !important;
                width: 100% !important;
                z-index: 999999 !important;
            `;
            
            this.showStatus('üîß NAVIGATION FIXED!');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ 100–º—Å
            setTimeout(() => {
                const newRect = nav.getBoundingClientRect();
                const newDiff = Math.abs(newRect.bottom - window.innerHeight);
                this.showStatus(`‚úÖ Result: diff=${newDiff.toFixed(0)} ${newDiff < 5 ? 'SUCCESS' : 'FAIL'}`);
            }, 100);
        } else {
            this.showStatus('‚úÖ Navigation position OK');
        }
    }
    
    /**
     * –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
     */
    startNavigationWatcher() {
        if (!this.isTelegram) return;
        
        // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é
        setTimeout(() => {
            this.showStatus('üöÄ Starting navigation watcher...');
            this.forceNavigationFix();
        }, 100);
        
        // –°–æ–∑–¥–∞–µ–º MutationObserver –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        const observer = new MutationObserver((mutations) => {
            mutations.forEach((mutation) => {
                if (mutation.type === 'attributes' && 
                    mutation.target.classList.contains('bottom-nav') &&
                    (mutation.attributeName === 'style' || mutation.attributeName === 'class')) {
                    
                    this.showStatus('‚ö†Ô∏è Navigation styles changed - fixing...');
                    setTimeout(() => this.forceNavigationFix(), 10);
                }
            });
        });
        
        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        const nav = document.querySelector('.bottom-nav');
        if (nav) {
            observer.observe(nav, {
                attributes: true,
                attributeFilter: ['style', 'class']
            });
            this.showStatus('üëÅÔ∏è MutationObserver attached to navigation');
        } else {
            this.showStatus('‚ùå ERROR: Cannot attach observer - nav not found');
        }
        
        // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∑–∏—Ü–∏–∏ (–∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã)
        setInterval(() => {
            if (this.isTelegram && this.debugMode) {
                this.checkNavigationPosition();
            }
        }, 3000);
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    checkNavigationPosition() {
        const nav = document.querySelector('.bottom-nav');
        if (!nav) return;
        
        const rect = nav.getBoundingClientRect();
        const windowHeight = window.innerHeight;
        const diff = Math.abs(rect.bottom - windowHeight);
        
        // –ï—Å–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å–¥–≤–∏–Ω—É–ª–∞—Å—å - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
        if (diff > 5) {
            this.showStatus(`‚ö†Ô∏è Navigation drift detected: ${diff.toFixed(0)}px`);
            this.forceNavigationFix();
        }
    }
    
    /**
     * –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
     */
    enableDebug() {
        localStorage.setItem('telegram-debug', 'true');
        document.body.classList.add('debug');
        this.debugMode = true;
        this.statusIndicator.style.display = 'block';
        this.showStatus('üêõ Debug mode enabled');
    }
    
    disableDebug() {
        localStorage.removeItem('telegram-debug');
        document.body.classList.remove('debug');
        this.debugMode = false;
        this.showStatus('‚ùå Debug mode disabled');
    }
    
    getStatus() {
        const nav = document.querySelector('.bottom-nav');
        const navRect = nav ? nav.getBoundingClientRect() : null;
        
        return {
            isTelegram: this.isTelegram,
            isDarkTheme: this.isDarkTheme,
            debugMode: this.debugMode,
            userAgent: navigator.userAgent,
            windowSize: {
                width: window.innerWidth,
                height: window.innerHeight
            },
            telegramAPI: !!window.Telegram?.WebApp,
            appliedClasses: Array.from(document.body.classList),
            navigationPosition: navRect ? {
                bottom: navRect.bottom,
                windowHeight: window.innerHeight,
                difference: Math.abs(navRect.bottom - window.innerHeight)
            } : 'not found'
        };
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
let telegramNavFixer = null;

function initTelegramFixer() {
    if (!telegramNavFixer) {
        telegramNavFixer = new TelegramNavigationFixer();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ window –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        window.telegramNavFixer = telegramNavFixer;
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initTelegramFixer);
} else {
    initTelegramFixer();
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Telegram —Å–æ–±—ã—Ç–∏—è
if (window.Telegram?.WebApp) {
    window.Telegram.WebApp.ready(() => {
        setTimeout(initTelegramFixer, 100);
    });
}