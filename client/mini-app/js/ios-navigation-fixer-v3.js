/**
 * –ü–†–û–î–í–ò–ù–£–¢–´–ô –§–ò–ö–°–ï–† –ù–ê–í–ò–ì–ê–¶–ò–ò –î–õ–Ø iOS TELEGRAM MINI APP
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏ —Å–≤–∞–π–ø–∞—Ö
 * –í–µ—Ä—Å–∏—è 3.0 - –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥
 */

class TelegramIOSNavigationFixer {
    constructor() {
        this.isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
        this.isTelegram = !!(window.Telegram?.WebApp || navigator.userAgent.includes('Telegram'));
        this.debugMode = false;
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ
        this.isKeyboardVisible = false;
        this.lastViewportHeight = window.innerHeight;
        this.navElement = null;
        this.fixInterval = null;
        
        // –ü—Ä–∏–≤—è–∑–∫–∞ –º–µ—Ç–æ–¥–æ–≤
        this.handleScroll = this.handleScroll.bind(this);
        this.handleResize = this.handleResize.bind(this);
        this.handleFocus = this.handleFocus.bind(this);
        this.handleBlur = this.handleBlur.bind(this);
        this.handleTouchStart = this.handleTouchStart.bind(this);
        this.forceNavigationFix = this.forceNavigationFix.bind(this);
        
        this.init();
    }
    
    init() {
        if (!this.isIOS || !this.isTelegram) {
            this.log('‚ùå –ù–µ iOS –∏–ª–∏ –Ω–µ Telegram, —Ñ–∏–∫—Å–µ—Ä –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω');
            return;
        }
        
        this.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è iOS Navigation Fixer v3.0');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è CSS
        document.body.classList.add('telegram-mini-app', 'ios-device');
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É DOM
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => this.setupFixer());
        } else {
            this.setupFixer();
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram WebApp
        this.setupTelegramWebApp();
    }
    
    setupTelegramWebApp() {
        if (window.Telegram?.WebApp) {
            const webApp = window.Telegram.WebApp;
            
            try {
                // –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω
                webApp.expand();
                
                // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω API 7.7+ - –æ—Ç–∫–ª—é—á–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤–∞–π–ø—ã
                if (webApp.disableVerticalSwipes) {
                    webApp.disableVerticalSwipes();
                    this.log('‚úÖ –û—Ç–∫–ª—é—á–µ–Ω—ã –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤–∞–π–ø—ã');
                }
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã
                webApp.setHeaderColor('#ffffff');
                webApp.setBackgroundColor('#ffffff');
                
                this.log('‚úÖ Telegram WebApp –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
            } catch (error) {
                this.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram WebApp:', error);
            }
        }
    }
    
    setupFixer() {
        // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
        this.navElement = document.querySelector('.bottom-nav');
        
        if (!this.navElement) {
            this.log('‚ö†Ô∏è –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –∂–¥–µ–º...');
            setTimeout(() => this.setupFixer(), 500);
            return;
        }
        
        this.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω');
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–≤–∏—á–Ω—ã–π —Ñ–∏–∫—Å
        this.forceNavigationFix();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.setupEventListeners();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π —Ñ–∏–∫—Å
        this.startPeriodicFix();
        
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∫–æ–ª–ª–∞–ø—Å Mini App
        this.preventMiniAppCollapse();
        
        // –°—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É–µ–º viewport
        this.stabilizeViewport();
    }
    
    setupEventListeners() {
        // –°–∫—Ä–æ–ª–ª - –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
        window.addEventListener('scroll', this.handleScroll, { passive: true });
        
        // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        window.addEventListener('resize', this.handleResize);
        
        // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª—è—Ö –≤–≤–æ–¥–∞ (–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)
        document.addEventListener('focusin', this.handleFocus);
        document.addEventListener('focusout', this.handleBlur);
        
        // –¢–∞—á —Å–æ–±—ã—Ç–∏—è –¥–ª—è iOS
        document.addEventListener('touchstart', this.handleTouchStart, { passive: true });
        
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü
        this.hookPageSwitching();
        
        // Visual Viewport API –¥–ª—è iOS 13+
        if (window.visualViewport) {
            window.visualViewport.addEventListener('resize', this.handleResize);
        }
        
        this.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
    
    handleScroll() {
        // –ü—Ä–∏ –∫–∞–∂–¥–æ–º —Å–∫—Ä–æ–ª–ª–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ñ–∏–∫—Å–∏–º –ø–æ–∑–∏—Ü–∏—é
        this.forceNavigationFix();
    }
    
    handleResize() {
        const currentHeight = window.visualViewport ? window.visualViewport.height : window.innerHeight;
        const heightDiff = this.lastViewportHeight - currentHeight;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ/—Å–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        if (heightDiff > 150) {
            this.isKeyboardVisible = true;
            this.log('‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—è–≤–∏–ª–∞—Å—å');
        } else if (heightDiff < -150) {
            this.isKeyboardVisible = false;
            this.log('‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã–ª–∞—Å—å');
        }
        
        this.lastViewportHeight = currentHeight;
        
        // –§–∏–∫—Å–∏–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è viewport
        setTimeout(() => this.forceNavigationFix(), 100);
        setTimeout(() => this.forceNavigationFix(), 300);
    }
    
    handleFocus(e) {\n        if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\n            this.log('üîç –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞');\n            \n            // –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π —Ñ–∏–∫—Å\n            this.forceNavigationFix();\n            \n            // –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ–∏–∫—Å—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã\n            setTimeout(() => this.forceNavigationFix(), 200);\n            setTimeout(() => this.forceNavigationFix(), 500);\n            setTimeout(() => this.forceNavigationFix(), 1000);\n        }\n    }\n    \n    handleBlur(e) {\n        if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\n            this.log('‚ùå –ü–æ—Ç–µ—Ä—è —Ñ–æ–∫—É—Å–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞');\n            \n            // –§–∏–∫—Å—ã –ø–æ—Å–ª–µ —Å–∫—Ä—ã—Ç–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã\n            setTimeout(() => this.forceNavigationFix(), 100);\n            setTimeout(() => this.forceNavigationFix(), 300);\n            setTimeout(() => this.forceNavigationFix(), 600);\n        }\n    }\n    \n    handleTouchStart() {\n        // –ü—Ä–∏ –ª—é–±–æ–º —Ç–∞—á-—Å–æ–±—ã—Ç–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é\n        setTimeout(() => this.forceNavigationFix(), 10);\n    }\n    \n    hookPageSwitching() {\n        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n        const originalShowPage = window.showPage;\n        \n        window.showPage = (...args) => {\n            this.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', args[0]);\n            \n            // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é\n            if (originalShowPage) {\n                originalShowPage.apply(this, args);\n            }\n            \n            // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–∏–∫—Å—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è\n            setTimeout(() => this.forceNavigationFix(), 10);\n            setTimeout(() => this.forceNavigationFix(), 50);\n            setTimeout(() => this.forceNavigationFix(), 100);\n            setTimeout(() => this.forceNavigationFix(), 200);\n            setTimeout(() => this.forceNavigationFix(), 500);\n        };\n    }\n    \n    forceNavigationFix() {\n        if (!this.navElement) {\n            this.navElement = document.querySelector('.bottom-nav');\n        }\n        \n        if (!this.navElement) return;\n        \n        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏\n        const criticalStyles = {\n            position: 'fixed',\n            bottom: '0',\n            left: '0',\n            right: '0',\n            zIndex: '999999',\n            transform: 'none',\n            webkitTransform: 'none',\n            margin: '0',\n            width: '100%',\n            maxWidth: 'none'\n        };\n        \n        Object.assign(this.navElement.style, criticalStyles);\n        \n        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏\n        this.navElement.style.setProperty('transform', 'none', 'important');\n        this.navElement.style.setProperty('-webkit-transform', 'none', 'important');\n        this.navElement.style.setProperty('position', 'fixed', 'important');\n        this.navElement.style.setProperty('bottom', '0', 'important');\n        \n        this.debugLog('üîß –ù–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞');\n    }\n    \n    startPeriodicFix() {\n        // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π —Ñ–∏–∫—Å –∫–∞–∂–¥—ã–µ 200–º—Å\n        this.fixInterval = setInterval(() => {\n            this.forceNavigationFix();\n        }, 200);\n        \n        this.log('‚è∞ –ó–∞–ø—É—â–µ–Ω –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π —Ñ–∏–∫—Å (200–º—Å)');\n    }\n    \n    preventMiniAppCollapse() {\n        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∫–æ–ª–ª–∞–ø—Å Mini App –ø—Ä–∏ —Å–≤–∞–π–ø–µ –¥–æ –≤–µ—Ä—Ö–∞\n        const preventCollapse = () => {\n            if (window.scrollY === 0) {\n                window.scrollTo(0, 1);\n            }\n        };\n        \n        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–≤–∏–¥–∏–º—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏\n        const spacer = document.createElement('div');\n        spacer.style.cssText = `\n            position: absolute;\n            top: -1px;\n            width: 100%;\n            height: 1px;\n            opacity: 0;\n            pointer-events: none;\n        `;\n        document.body.prepend(spacer);\n        \n        document.addEventListener('touchstart', preventCollapse, { passive: true });\n        document.addEventListener('scroll', preventCollapse, { passive: true });\n        \n        this.log('‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –∫–æ–ª–ª–∞–ø—Å–∞ Mini App –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');\n    }\n    \n    stabilizeViewport() {\n        // –°—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É–µ–º viewport –¥–ª—è iOS\n        const setViewportHeight = () => {\n            const vh = window.innerHeight * 0.01;\n            document.documentElement.style.setProperty('--vh', `${vh}px`);\n            \n            if (window.visualViewport) {\n                const visualVH = window.visualViewport.height * 0.01;\n                document.documentElement.style.setProperty('--visual-vh', `${visualVH}px`);\n            }\n        };\n        \n        setViewportHeight();\n        window.addEventListener('resize', setViewportHeight);\n        \n        if (window.visualViewport) {\n            window.visualViewport.addEventListener('resize', setViewportHeight);\n        }\n        \n        this.log('‚úÖ Viewport —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');\n    }\n    \n    // –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã\n    enableDebug() {\n        this.debugMode = true;\n        this.log('üêõ Debug —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω');\n    }\n    \n    disableDebug() {\n        this.debugMode = false;\n    }\n    \n    getStatus() {\n        return {\n            isIOS: this.isIOS,\n            isTelegram: this.isTelegram,\n            isKeyboardVisible: this.isKeyboardVisible,\n            navElementFound: !!this.navElement,\n            fixerActive: !!this.fixInterval,\n            lastViewportHeight: this.lastViewportHeight,\n            debugMode: this.debugMode\n        };\n    }\n    \n    destroy() {\n        if (this.fixInterval) {\n            clearInterval(this.fixInterval);\n            this.fixInterval = null;\n        }\n        \n        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏\n        window.removeEventListener('scroll', this.handleScroll);\n        window.removeEventListener('resize', this.handleResize);\n        document.removeEventListener('focusin', this.handleFocus);\n        document.removeEventListener('focusout', this.handleBlur);\n        document.removeEventListener('touchstart', this.handleTouchStart);\n        \n        this.log('üóëÔ∏è –§–∏–∫—Å–µ—Ä —É–Ω–∏—á—Ç–æ–∂–µ–Ω');\n    }\n    \n    // –£—Ç–∏–ª–∏—Ç—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è\n    log(...args) {\n        console.log('üì± [iOS Nav Fixer]', ...args);\n    }\n    \n    debugLog(...args) {\n        if (this.debugMode) {\n            console.log('üêõ [iOS Nav Debug]', ...args);\n        }\n    }\n}\n\n// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è\nconst telegramNavFixer = new TelegramIOSNavigationFixer();\n\n// –≠–∫—Å–ø–æ—Ä—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å\nwindow.telegramNavFixer = telegramNavFixer;\nwindow.forceNavFix = () => telegramNavFixer.forceNavigationFix();\n\n// Legacy —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å\nif (typeof window.simpleNavFix === 'undefined') {\n    window.simpleNavFix = () => telegramNavFixer.forceNavigationFix();\n}\n\nconsole.log('üöÄ iOS Telegram Navigation Fixer v3.0 –∑–∞–≥—Ä—É–∂–µ–Ω');