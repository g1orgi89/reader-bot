/**
 * DIARY.JS - –õ–æ–≥–∏–∫–∞ –¥–Ω–µ–≤–Ω–∏–∫–∞ —Å —Ü–µ–ª—å–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –∏ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º –ø–æ—Ä—è–¥–∫–æ–º
 * –ü–ï–†–ï–î–ï–õ–ê–ù: —É–±—Ä–∞–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ø–æ–ª–∞–º, 5-7 —Ü–∏—Ç–∞—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É, —Ç–æ—á–µ—á–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –º–∞–ª–µ–Ω—å–∫–∏–µ –¥–∞—Ç—ã –ø–æ–¥ —Ü–∏—Ç–∞—Ç–∞–º–∏
 * –ù–û–í–û–ï: AI –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Ü–∏—Ç–∞—Ç–∞–º —Å –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–º –æ—Ç–∫–ª–∏–∫–æ–º
 */

class DiaryManager {
    constructor() {
        this.quotes = []; // üêõ FIX: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ —Ü–∏—Ç–∞—Ç
        this.currentPageIndex = 0;
        this.quotesPerPage = 6; // 5-7 —Ü–∏—Ç–∞—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        this.isAnimating = false;
        
        // –°—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ü–∏—Ç–∞—Ç–∞–º–∏ (—Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—è–¥–æ–∫)
        this.pages = [];
        
        this.init();
    }

    init() {
        this.loadQuotes();
        this.setupEventListeners();
    }

    // ===== –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• =====
    async loadQuotes() {
        try {
            this.quotes = [];
            
            // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ API
            if (window.apiManager) {
                const response = await window.apiManager.getQuotes();
                if (response && response.success && Array.isArray(response.data)) {
                    this.quotes = response.data;
                } else {
                    console.log('API –Ω–µ –≤–µ—Ä–Ω—É–ª –º–∞—Å—Å–∏–≤, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ');
                    this.loadMockData();
                }
            } else {
                console.log('API Manager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ');
                this.loadMockData();
            }
        } catch (error) {
            console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ:', error);
            this.loadMockData();
        }
        
        if (!Array.isArray(this.quotes)) {
            console.warn('quotes –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤');
            this.quotes = [];
            this.loadMockData();
        }
        
        this.createPages();
        this.renderCurrentPage();
    }

    loadMockData() {
        this.quotes = [
            {
                text: "–í –∫–∞–∂–¥–æ–º —Å–ª–æ–≤–µ ‚Äî —Ü–µ–ª–∞—è –∂–∏–∑–Ω—å. –ö–∞–∂–¥–∞—è —Ñ—Ä–∞–∑–∞ –Ω–µ—Å–µ—Ç –≤ —Å–µ–±–µ –∏—Å—Ç–æ—Ä–∏—é, —ç–º–æ—Ü–∏–∏ –∏ —Å–º—ã—Å–ª—ã.",
                author: "–ú–∞—Ä–∏–Ω–∞ –¶–≤–µ—Ç–∞–µ–≤–∞",
                date: "2025-07-15T10:30:00Z",
                createdAt: "2025-07-15T10:30:00Z",
                analysis: {
                    mood: "–ì–ª—É–±–æ–∫–æ–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ",
                    category: "–§–∏–ª–æ—Å–æ—Ñ–∏—è —è–∑—ã–∫–∞",
                    aiComment: "–ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –º—ã—Å–ª—å –æ —Å–∏–ª–µ —Å–ª–æ–≤! –¶–≤–µ—Ç–∞–µ–≤–∞ –ø–æ–Ω–∏–º–∞–ª–∞, —á—Ç–æ –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ - —ç—Ç–æ —Ü–µ–ª–∞—è –≤—Å–µ–ª–µ–Ω–Ω–∞—è –∑–Ω–∞—á–µ–Ω–∏–π. –ü–æ—Ö–æ–∂–∏–µ –∏–¥–µ–∏ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç –†–∏–ª—å–∫–µ –≤ '–ü–∏—Å—å–º–∞—Ö –∫ –º–æ–ª–æ–¥–æ–º—É –ø–æ—ç—Ç—É'.",
                    bookRecommendation: {
                        title: "–ü–∏—Å—å–º–∞ –∫ –º–æ–ª–æ–¥–æ–º—É –ø–æ—ç—Ç—É",
                        author: "–†–∞–π–Ω–µ—Ä –ú–∞—Ä–∏—è –†–∏–ª—å–∫–µ",
                        reason: "–°–æ–∑–≤—É—á–Ω–æ –≤–∞—à–µ–º—É –∏–Ω—Ç–µ—Ä–µ—Å—É –∫ —Å–∏–ª–µ –∏ –≥–ª—É–±–∏–Ω–µ —Å–ª–æ–≤"
                    }
                }
            },
            {
                text: "–õ—é–±–æ–≤—å ‚Äî —ç—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –ª—é–±–∏—Ç—å. –≠—Ç–æ –≤—ã–±–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –º—ã –¥–µ–ª–∞–µ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.",
                author: "–≠—Ä–∏—Ö –§—Ä–æ–º–º",
                date: "2025-07-16T14:20:00Z",
                createdAt: "2025-07-16T14:20:00Z",
                analysis: {
                    mood: "–ú—É–¥—Ä–æ—Å—Ç—å –æ –ª—é–±–≤–∏",
                    category: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π",
                    aiComment: "–§—Ä–æ–º–º —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é –ø—Ä–∏—Ä–æ–¥—É –ª—é–±–≤–∏. –≠—Ç–æ –Ω–µ —á—É–≤—Å—Ç–≤–æ, –∞ –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Ç—Ä–µ–±—É—é—â–µ–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∏ —É—Å–∏–ª–∏–π. –í–∞—à –≤—ã–±–æ—Ä —ç—Ç–æ–π —Ü–∏—Ç–∞—Ç—ã –≥–æ–≤–æ—Ä–∏—Ç –æ –∑—Ä–µ–ª–æ–º –ø–æ–Ω–∏–º–∞–Ω–∏–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π.",
                    bookRecommendation: {
                        title: "–ò—Å–∫—É—Å—Å—Ç–≤–æ –ª—é–±–∏—Ç—å",
                        author: "–≠—Ä–∏—Ö –§—Ä–æ–º–º",
                        reason: "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ç–µ–º—ã –ª—é–±–≤–∏ –∫–∞–∫ –∏—Å–∫—É—Å—Å—Ç–≤–∞"
                    }
                }
            },
            {
                text: "–°—á–∞—Å—Ç—å–µ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ –Ω–∞–º –≥–æ—Ç–æ–≤—ã–º. –ú—ã —Å–æ–∑–¥–∞–µ–º –µ–≥–æ —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏, —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏.",
                author: "–î–∞–ª–∞–π-–ª–∞–º–∞",
                date: "2025-07-17T09:15:00Z",
                createdAt: "2025-07-17T09:15:00Z",
                analysis: {
                    mood: "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∫ –¥–µ–π—Å—Ç–≤–∏—é",
                    category: "–§–∏–ª–æ—Å–æ—Ñ–∏—è —Å—á–∞—Å—Ç—å—è",
                    aiComment: "–ú—É–¥—Ä–∞—è –∏—Å—Ç–∏–Ω–∞ –æ —Ç–æ–º, —á—Ç–æ —Å—á–∞—Å—Ç—å–µ - —ç—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –∞ –Ω–µ –ø–∞—Å—Å–∏–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ. –í–∞—à–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –æ —Å—á–∞—Å—Ç—å–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–π –∂–∏–∑–Ω–∏.",
                    bookRecommendation: {
                        title: "–ë—ã—Ç—å —Å–æ–±–æ–π",
                        author: "–ê–Ω–Ω–∞ –ë—É—Å–µ–ª",
                        reason: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–∞—Å—Ç—å—è –∏–∑–Ω—É—Ç—Ä–∏"
                    }
                }
            },
            {
                text: "–ß—Ç–µ–Ω–∏–µ - —ç—Ç–æ –æ–∫–Ω–æ –≤ —Ç—ã—Å—è—á–∏ –∂–∏–∑–Ω–µ–π. –ö–Ω–∏–≥–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –Ω–∞–º –ø—Ä–æ–∂–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å—É–¥–µ–±.",
                author: "–î–∂–æ—Ä–¥–∂ –ú–∞—Ä—Ç–∏–Ω",
                date: "2025-07-18T16:45:00Z",
                createdAt: "2025-07-18T16:45:00Z",
                analysis: {
                    mood: "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∫ —á—Ç–µ–Ω–∏—é",
                    category: "–û –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ",
                    aiComment: "–ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –º–µ—Ç–∞—Ñ–æ—Ä–∞! –ö–Ω–∏–≥–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—à–∏—Ä—è—é—Ç –Ω–∞—à –æ–ø—ã—Ç –¥–∞–ª–µ–∫–æ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –æ–¥–Ω–æ–π –∂–∏–∑–Ω–∏. –í–∞—à–∞ –ª—é–±–æ–≤—å –∫ —á—Ç–µ–Ω–∏—é –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–¥ –≤–∞–º–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–∑–Ω–∞–Ω–∏—è.",
                    bookRecommendation: {
                        title: "–û —á—Ç–µ–Ω–∏–∏",
                        author: "–ú–∞—Ä—Å–µ–ª—å –ü—Ä—É—Å—Ç",
                        reason: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ –≤ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é —á—Ç–µ–Ω–∏—è –∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã"
                    }
                }
            },
            {
                text: "–ú—É–¥—Ä–æ—Å—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —É–¥–∏–≤–ª–µ–Ω–∏—è. –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —É–¥–∏–≤–ª—è—Ç—å—Å—è ‚Äî –∫–ª—é—á –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é –∂–∏–∑–Ω–∏.",
                author: "–°–æ–∫—Ä–∞—Ç",
                date: "2025-07-19T11:00:00Z",
                createdAt: "2025-07-19T11:00:00Z",
                analysis: {
                    mood: "–§–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–µ —É–¥–∏–≤–ª–µ–Ω–∏–µ",
                    category: "–§–∏–ª–æ—Å–æ—Ñ–∏—è –ø–æ–∑–Ω–∞–Ω–∏—è",
                    aiComment: "–°–æ–∫—Ä–∞—Ç–æ–≤—Å–∫–∞—è –º—É–¥—Ä–æ—Å—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ —Å–µ–≥–æ–¥–Ω—è. –£–¥–∏–≤–ª–µ–Ω–∏–µ - —ç—Ç–æ –Ω–∞—á–∞–ª–æ –≤—Å–µ–≥–æ –ø–æ–∑–Ω–∞–Ω–∏—è. –í–∞—à –≤—ã–±–æ—Ä —ç—Ç–æ–π —Ü–∏—Ç–∞—Ç—ã –≥–æ–≤–æ—Ä–∏—Ç –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–µ—Ç—Å–∫–æ–≥–æ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–∞ –∫ –º–∏—Ä—É.",
                    bookRecommendation: {
                        title: "–ê–ø–æ–ª–æ–≥–∏—è –°–æ–∫—Ä–∞—Ç–∞",
                        author: "–ü–ª–∞—Ç–æ–Ω",
                        reason: "–ì–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–æ–∫—Ä–∞—Ç–æ–≤—Å–∫–æ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏"
                    }
                }
            },
            {
                text: "–í—Ä–µ–º—è - —Å–∞–º—ã–π —Ü–µ–Ω–Ω—ã–π —Ä–µ—Å—É—Ä—Å. –ú—ã –º–æ–∂–µ–º –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –µ–≥–æ –∏–ª–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å.",
                author: "",
                date: "2025-07-20T13:30:00Z",
                createdAt: "2025-07-20T13:30:00Z",
                analysis: {
                    mood: "–†–∞–∑–º—ã—à–ª–µ–Ω–∏–µ –æ –≤—Ä–µ–º–µ–Ω–∏",
                    category: "–§–∏–ª–æ—Å–æ—Ñ–∏—è –≤—Ä–µ–º–µ–Ω–∏",
                    aiComment: "–í–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º—ã—Å–ª—å! –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–∏. –≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑—Ä–µ–ª—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∂–∏–∑–Ω–∏ –∏ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏.",
                    bookRecommendation: {
                        title: "–í—Ä–µ–º—è –∫–∞–∫ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞",
                        author: "–ê–Ω—Ä–∏ –ë–µ—Ä–≥—Å–æ–Ω",
                        reason: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ –≤ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–æ–∑–Ω–∞–Ω–∏—è"
                    }
                }
            },
            {
                text: "–ó–Ω–∞–Ω–∏–µ ‚Äî —Å–∏–ª–∞, –Ω–æ –º—É–¥—Ä–æ—Å—Ç—å ‚Äî —É–º–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –µ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.",
                author: "–ö–æ–Ω—Ñ—É—Ü–∏–π",
                date: "2025-07-20T15:00:00Z",
                createdAt: "2025-07-20T15:00:00Z",
                analysis: {
                    mood: "–ú—É–¥—Ä–æ—Å—Ç—å –≤–µ–∫–æ–≤",
                    category: "–§–∏–ª–æ—Å–æ—Ñ–∏—è –º—É–¥—Ä–æ—Å—Ç–∏",
                    aiComment: "–ö–æ–Ω—Ñ—É—Ü–∏–π —Ä–∞–∑–ª–∏—á–∞–µ—Ç –∑–Ω–∞–Ω–∏–µ –∏ –º—É–¥—Ä–æ—Å—Ç—å. –í–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –¥–≤–∏–∂–µ–Ω–∏–µ –æ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π –∫ –∏—Ö –º—É–¥—Ä–æ–º—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é. –≠—Ç–æ –ø—É—Ç—å –∏—Å—Ç–∏–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è.",
                    bookRecommendation: {
                        title: "–ë–µ—Å–µ–¥—ã –∏ —Å—É–∂–¥–µ–Ω–∏—è",
                        author: "–ö–æ–Ω—Ñ—É—Ü–∏–π",
                        reason: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã –≤–æ—Å—Ç–æ—á–Ω–æ–π –º—É–¥—Ä–æ—Å—Ç–∏"
                    }
                }
            }
        ];
    }

    // ===== –°–û–ó–î–ê–ù–ò–ï –°–¢–†–ê–ù–ò–¶ (–•–†–û–ù–û–õ–û–ì–ò–ß–ï–°–ö–ò–ô –ü–û–†–Ø–î–û–ö) =====
    createPages() {
        if (!Array.isArray(this.quotes)) {
            this.quotes = [];
        }
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ü–∏—Ç–∞—Ç—ã –ø–æ –¥–∞—Ç–µ (–æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º)
        this.quotes.sort((a, b) => new Date(a.createdAt || a.date) - new Date(b.createdAt || b.date));
        
        // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ quotesPerPage —Ü–∏—Ç–∞—Ç
        this.pages = [];
        for (let i = 0; i < this.quotes.length; i += this.quotesPerPage) {
            this.pages.push({
                quotes: this.quotes.slice(i, i + this.quotesPerPage),
                pageNumber: this.pages.length + 1
            });
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç —Ü–∏—Ç–∞—Ç, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        if (this.pages.length === 0) {
            this.pages.push({
                quotes: [],
                pageNumber: 1
            });
        }
    }

    // ===== –°–û–ë–´–¢–ò–Ø =====
    setupEventListeners() {
        // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.getElementById('prev-page')?.addEventListener('click', () => this.previousPage());
        document.getElementById('next-page')?.addEventListener('click', () => this.nextPage());
        
        // –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ç–∞—Ç—ã
        document.getElementById('diary-quote-form')?.addEventListener('submit', (e) => this.handleQuoteSubmit(e));
        
        // –ö–ª–∏–∫ –ø–æ –∫—Ä–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('page-corner')) {
                this.nextPage();
            }
        });
        
        // –ö–ª–∏–∫ –ø–æ —Ç–æ—á–∫–∞–º –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('page-dot')) {
                const pageIndex = parseInt(e.target.dataset.page);
                if (!isNaN(pageIndex)) {
                    this.goToPage(pageIndex);
                }
            }
        });

        // –ù–û–í–û–ï: –ö–ª–∏–∫ –ø–æ –∏–∫–æ–Ω–∫–µ AI –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('ai-icon') || e.target.closest('.ai-icon')) {
                const quoteIndex = e.target.closest('[data-quote-index]')?.dataset.quoteIndex;
                if (quoteIndex !== undefined) {
                    this.showDetailedAnalysis(parseInt(quoteIndex));
                }
            }
        });
        
        // –°–≤–∞–π–ø –∂–µ—Å—Ç—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        this.setupSwipeGestures();
    }

    setupSwipeGestures() {
        let startX = 0;
        let startY = 0;
        
        const bookContainer = document.querySelector('.book-container');
        if (!bookContainer) return;
        
        bookContainer.addEventListener('touchstart', (e) => {
            startX = e.touches[0].clientX;
            startY = e.touches[0].clientY;
        });
        
        bookContainer.addEventListener('touchend', (e) => {
            if (!startX || !startY) return;
            
            const endX = e.changedTouches[0].clientX;
            const endY = e.changedTouches[0].clientY;
            
            const diffX = startX - endX;
            const diffY = startY - endY;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–≤–∞–π–ø
            if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > 50) {
                if (diffX > 0) {
                    // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                    this.nextPage();
                } else {
                    // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞  
                    this.previousPage();
                }
            }
            
            startX = 0;
            startY = 0;
        });
    }

    // ===== –ù–ê–í–ò–ì–ê–¶–ò–Ø –°–¢–†–ê–ù–ò–¶ =====
    async nextPage() {
        if (this.isAnimating || this.currentPageIndex >= this.pages.length - 1) return;
        
        await this.animatePageTurn('next');
        this.currentPageIndex++;
        this.renderCurrentPage();
    }

    async previousPage() {
        if (this.isAnimating || this.currentPageIndex <= 0) return;
        
        await this.animatePageTurn('prev');
        this.currentPageIndex--;
        this.renderCurrentPage();
    }

    async goToPage(pageIndex) {
        if (this.isAnimating || pageIndex === this.currentPageIndex || 
            pageIndex < 0 || pageIndex >= this.pages.length) return;
        
        await this.animatePageTurn(pageIndex > this.currentPageIndex ? 'next' : 'prev');
        this.currentPageIndex = pageIndex;
        this.renderCurrentPage();
    }

    // ===== –ê–ù–ò–ú–ê–¶–ò–ò –ü–ï–†–ï–õ–ò–°–¢–´–í–ê–ù–ò–Ø =====
    async animatePageTurn(direction) {
        this.isAnimating = true;
        
        const currentPage = document.querySelector('.book-page');
        if (!currentPage) {
            this.isAnimating = false;
            return;
        }
        
        // Haptic feedback –¥–ª—è Telegram
        if (window.TelegramManager && window.TelegramManager.vibrate) {
            window.TelegramManager.vibrate('light');
        }
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è
        currentPage.classList.add('turning');
        
        await this.delay(100);
        currentPage.classList.add('turned');
        
        await this.delay(800);
        currentPage.classList.remove('turning', 'turned');
        
        this.isAnimating = false;
    }

    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    // ===== –û–¢–†–ò–°–û–í–ö–ê –°–¢–†–ê–ù–ò–¶–´ =====
    renderCurrentPage() {
        this.renderPage();
        this.updateNavigation();
    }

    renderPage() {
        const pageContent = document.getElementById('page-content');
        if (!pageContent) return;
        
        const currentPage = this.pages[this.currentPageIndex];
        if (!currentPage) return;
        
        const isLastPage = this.currentPageIndex === this.pages.length - 1;
        
        pageContent.innerHTML = `
            <div class="quotes-container">
                ${currentPage.quotes.length > 0 ? this.renderQuotes(currentPage.quotes) : this.renderEmptyPage()}
            </div>
            ${isLastPage ? this.renderAddQuoteForm() : ''}
        `;
    }

    renderQuotes(quotes) {
        return quotes.map((quote, index) => `
            <div class="quote-entry" data-quote-index="${index}">
                <div class="quote-text">${this.escapeHtml(quote.text)}</div>
                <div class="quote-author">${quote.author || '–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º—ã—Å–ª—å'}</div>
                <div class="quote-date">${this.formatQuoteDate(quote.createdAt || quote.date)}</div>
                ${quote.analysis ? `
                    <div class="ai-icon" title="–ê–Ω–∞–ª–∏–∑ –æ—Ç –ê–Ω–Ω—ã">
                        ü§ñ
                    </div>
                ` : ''}
            </div>
        `).join('');
    }

    renderEmptyPage() {
        return `
            <div class="empty-page">
                <div class="empty-page-icon">üìù</div>
                <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –≤–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã...</p>
            </div>
        `;
    }

    renderAddQuoteForm() {
        return `
            <div class="add-quote-section">
                <h3 class="add-quote-title">‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–∏—Ç–∞—Ç—É</h3>
                <form id="diary-quote-form">
                    <div class="diary-form-group">
                        <label for="diary-quote-text">–¢–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã:</label>
                        <textarea 
                            id="diary-quote-text" 
                            name="quote-text" 
                            placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ç–∞—Ç—É –∏–ª–∏ –º—É–¥—Ä—É—é –º—ã—Å–ª—å..."
                            required
                        ></textarea>
                    </div>
                    <div class="diary-form-group">
                        <label for="diary-quote-author">–ê–≤—Ç–æ—Ä (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):</label>
                        <input 
                            type="text" 
                            id="diary-quote-author" 
                            name="quote-author" 
                            placeholder="–ò–º—è –∞–≤—Ç–æ—Ä–∞"
                        />
                    </div>
                    <button type="submit" class="diary-submit-btn">
                        ‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫
                    </button>
                </form>
            </div>
        `;
    }

    // ===== –î–û–ë–ê–í–õ–ï–ù–ò–ï –¶–ò–¢–ê–¢–´ –° AI –ê–ù–ê–õ–ò–ó–û–ú =====
    async handleQuoteSubmit(e) {
        e.preventDefault();
        
        const formData = new FormData(e.target);
        const quoteText = formData.get('quote-text')?.trim();
        const quoteAuthor = formData.get('quote-author')?.trim();
        
        if (!quoteText) {
            this.showToast('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã', 'error');
            return;
        }
        
        const newQuote = {
            text: quoteText,
            author: quoteAuthor || '',
            date: new Date().toISOString(),
            createdAt: new Date().toISOString()
        };
        
        try {
            if (!Array.isArray(this.quotes)) {
                this.quotes = [];
            }
            
            // –ù–û–í–û–ï: –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π AI –∞–Ω–∞–ª–∏–∑
            this.showQuickAIResponse(quoteText, quoteAuthor);
            
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å AI –∞–Ω–∞–ª–∏–∑
            try {
                if (window.apiManager) {
                    const analysisResponse = await window.apiManager.analyzeQuote(quoteText, quoteAuthor);
                    if (analysisResponse && analysisResponse.success) {
                        newQuote.analysis = analysisResponse.data;
                    } else {
                        // Fallback AI –∞–Ω–∞–ª–∏–∑
                        newQuote.analysis = this.generateFallbackAnalysis(quoteText, quoteAuthor);
                    }
                } else {
                    newQuote.analysis = this.generateFallbackAnalysis(quoteText, quoteAuthor);
                }
            } catch (analysisError) {
                console.log('–û—à–∏–±–∫–∞ AI –∞–Ω–∞–ª–∏–∑–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback:', analysisError);
                newQuote.analysis = this.generateFallbackAnalysis(quoteText, quoteAuthor);
            }
            
            // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–µ–∑ API
            if (window.apiManager) {
                try {
                    const response = await window.apiManager.addQuote(newQuote);
                    if (!response || !response.success) {
                        console.log('API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ');
                    }
                } catch (apiError) {
                    console.log('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ:', apiError);
                }
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ü–∏—Ç–∞—Ç—É –ª–æ–∫–∞–ª—å–Ω–æ
            this.quotes.push(newQuote);
            this.createPages();
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            this.currentPageIndex = this.pages.length - 1;
            this.renderCurrentPage();
            
            // –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ü–∏—Ç–∞—Ç—ã
            setTimeout(() => {
                const quoteElements = document.querySelectorAll('.quote-entry');
                const lastQuoteElement = quoteElements[quoteElements.length - 1];
                
                if (lastQuoteElement) {
                    lastQuoteElement.classList.add('new');
                }
            }, 100);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            this.updateMainPageStats();
            
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            e.target.reset();
            
            // Haptic feedback
            if (window.TelegramManager && window.TelegramManager.vibrate) {
                window.TelegramManager.vibrate('medium');
            }
            
            this.showToast('–¶–∏—Ç–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –¥–Ω–µ–≤–Ω–∏–∫! ‚ú®', 'success');
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ü–∏—Ç–∞—Ç—ã:', error);
            this.showToast('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ü–∏—Ç–∞—Ç—ã', 'error');
        }
    }

    // ===== –ù–û–í–û–ï: AI –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò =====

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –±—ã—Å—Ç—Ä—ã–π AI –æ—Ç–∫–ª–∏–∫ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
     */
    showQuickAIResponse(text, author) {
        const quickComment = this.generateQuickComment(text, author);
        
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
        const quickResponse = document.createElement('div');
        quickResponse.className = 'ai-quick-response';
        quickResponse.innerHTML = `
            <div class="ai-quick-response-content">
                ü§ñ ${quickComment}
                <button class="ai-learn-more" onclick="this.parentElement.parentElement.remove()">
                    ‚ú® –ü–æ–Ω—è—Ç–Ω–æ
                </button>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫ —Ñ–æ—Ä–º–µ
        const form = document.getElementById('diary-quote-form');
        if (form) {
            form.appendChild(quickResponse);
            
            // –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ
            setTimeout(() => {
                quickResponse.classList.add('show');
            }, 100);
            
            // –£–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                if (quickResponse.parentNode) {
                    quickResponse.classList.add('hide');
                    setTimeout(() => quickResponse.remove(), 300);
                }
            }, 5000);
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±—ã—Å—Ç—Ä–æ–≥–æ AI –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
     */
    generateQuickComment(text, author) {
        const comments = [
            "–ì–ª—É–±–æ–∫–∞—è –º—ã—Å–ª—å! –ü–æ—Ö–æ–∂–∏–µ –∏–¥–µ–∏ –∏—Å—Å–ª–µ–¥—É–µ—Ç –ê–Ω–Ω–∞ –≤ —Å–≤–æ–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö...",
            "–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä —Ü–∏—Ç–∞—Ç—ã. –≠—Ç–æ —Å–æ–∑–≤—É—á–Ω–æ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏...",
            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ –æ –∂–∏–∑–Ω–∏. –†–µ–∫–æ–º–µ–Ω–¥—É—é —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ —ç—Ç—É —Ç–µ–º—É...",
            "–ú—É–¥—Ä–∞—è –º—ã—Å–ª—å! –¢–∞–∫–∏–µ –∏–¥–µ–∏ –ø–æ–º–æ–≥–∞—é—Ç –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è...",
            "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞ –æ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å...",
        ];
        
        if (!author) {
            return "–í–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º—ã—Å–ª—å! –≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª—É–±–∏–Ω—É —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π...";
        }
        
        // –ü—Ä–æ—Å—Ç–æ–π –≤—ã–±–æ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–∞
        const index = text.length % comments.length;
        return comments[index];
    }

    /**
     * Fallback AI –∞–Ω–∞–ª–∏–∑ –¥–ª—è offline —Ä–µ–∂–∏–º–∞
     */
    generateFallbackAnalysis(text, author) {
        const categories = [
            '–§–∏–ª–æ—Å–æ—Ñ–∏—è –∂–∏–∑–Ω–∏', '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ', '–û—Ç–Ω–æ—à–µ–Ω–∏—è', 
            '–ú—É–¥—Ä–æ—Å—Ç—å', '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–õ—é–±–æ–≤—å', '–í—Ä–µ–º—è'
        ];
        
        const moods = [
            '–ì–ª—É–±–æ–∫–æ–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ', '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ', '–ú—É–¥—Ä–æ—Å—Ç—å', 
            '–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ', '–ú–æ—Ç–∏–≤–∞—Ü–∏—è', '–û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å'
        ];
        
        const category = categories[text.length % categories.length];
        const mood = moods[text.length % moods.length];
        
        let aiComment;
        let bookRecommendation;
        
        if (!author) {
            aiComment = "–í–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º—ã—Å–ª—å! –≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª—É–±–∏–Ω—É –≤–∞—à–∏—Ö —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑—É. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —ç—Ç—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –º—É–¥—Ä–æ—Å—Ç—å.";
            bookRecommendation = {
                title: "–ë—ã—Ç—å —Å–æ–±–æ–π",
                author: "–ê–Ω–Ω–∞ –ë—É—Å–µ–ª",
                reason: "–î–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤ —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑–∞ –∏ –∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏"
            };
        } else {
            aiComment = `–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä —Ü–∏—Ç–∞—Ç—ã –æ—Ç ${author}! –≠—Ç–∞ –º—ã—Å–ª—å –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–∞–∂–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã ${category.toLowerCase()}. –í–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Ç–∞–∫–∏–º –∏–¥–µ—è–º –≥–æ–≤–æ—Ä–∏—Ç –æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ –∫ –≥–ª—É–±–æ–∫–æ–º—É –ø–æ–Ω–∏–º–∞–Ω–∏—é –∂–∏–∑–Ω–∏.`;
            
            // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–≤—Ç–æ—Ä–∞
            if (author.toLowerCase().includes('—Ñ—Ä–æ–º–º')) {
                bookRecommendation = {
                    title: "–ò—Å–∫—É—Å—Å—Ç–≤–æ –ª—é–±–∏—Ç—å",
                    author: "–≠—Ä–∏—Ö –§—Ä–æ–º–º",
                    reason: "–†–∞–∑–≤–∏—Ç–∏–µ –∏–¥–µ–π –æ –ª—é–±–≤–∏ –∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö"
                };
            } else if (author.toLowerCase().includes('—Å–æ–∫—Ä–∞—Ç') || author.toLowerCase().includes('–ø–ª–∞—Ç–æ–Ω')) {
                bookRecommendation = {
                    title: "–ê–ø–æ–ª–æ–≥–∏—è –°–æ–∫—Ä–∞—Ç–∞",
                    author: "–ü–ª–∞—Ç–æ–Ω",
                    reason: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é"
                };
            } else {
                bookRecommendation = {
                    title: "–ü–∏—Å—å–º–∞ –∫ –º–æ–ª–æ–¥–æ–º—É –ø–æ—ç—Ç—É",
                    author: "–†–∞–π–Ω–µ—Ä –ú–∞—Ä–∏—è –†–∏–ª—å–∫–µ",
                    reason: "–°–æ–∑–≤—É—á–Ω–æ –≤–∞—à–µ–º—É –∏–Ω—Ç–µ—Ä–µ—Å—É –∫ –º—É–¥—Ä—ã–º –º—ã—Å–ª—è–º"
                };
            }
        }
        
        return {
            mood,
            category,
            aiComment,
            bookRecommendation
        };
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
     */
    showDetailedAnalysis(quoteIndex) {
        const currentPage = this.pages[this.currentPageIndex];
        if (!currentPage || !currentPage.quotes[quoteIndex]) return;
        
        const quote = currentPage.quotes[quoteIndex];
        if (!quote.analysis) {
            this.showToast('–ê–Ω–∞–ª–∏–∑ –¥–ª—è —ç—Ç–æ–π —Ü–∏—Ç–∞—Ç—ã –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 'info');
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.className = 'ai-analysis-modal';
        modal.innerHTML = `
            <div class="modal-backdrop" onclick="this.parentElement.remove()"></div>
            <div class="modal-content">
                <div class="modal-header">
                    <h3>ü§ñ –ê–Ω–∞–ª–∏–∑ –æ—Ç –ê–Ω–Ω—ã</h3>
                    <button class="modal-close" onclick="this.closest('.ai-analysis-modal').remove()">‚úï</button>
                </div>
                
                <div class="modal-body">
                    <div class="quote-preview">
                        <div class="quote-text-preview">"${this.escapeHtml(quote.text)}"</div>
                        <div class="quote-author-preview">${quote.author || '–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º—ã—Å–ª—å'}</div>
                    </div>
                    
                    <div class="analysis-section">
                        <div class="analysis-mood">
                            <strong>–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</strong> ${quote.analysis.mood}
                        </div>
                        <div class="analysis-category">
                            <strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${quote.analysis.category}
                        </div>
                    </div>
                    
                    <div class="ai-comment-section">
                        <h4>üí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ê–Ω–Ω—ã:</h4>
                        <p>${quote.analysis.aiComment}</p>
                    </div>
                    
                    ${quote.analysis.bookRecommendation ? `
                        <div class="book-recommendation-section">
                            <h4>üìö –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –∫–Ω–∏–≥–∏:</h4>
                            <div class="book-card">
                                <div class="book-title">${quote.analysis.bookRecommendation.title}</div>
                                <div class="book-author">–∞–≤—Ç–æ—Ä: ${quote.analysis.bookRecommendation.author}</div>
                                <div class="book-reason">${quote.analysis.bookRecommendation.reason}</div>
                                <button class="book-link-btn" onclick="this.closest('.ai-analysis-modal').remove(); window.app && window.app.showPage('catalog');">
                                    üìñ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
                                </button>
                            </div>
                        </div>
                    ` : ''}
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ
        setTimeout(() => {
            modal.classList.add('show');
        }, 10);
        
        // Haptic feedback
        if (window.TelegramManager && window.TelegramManager.vibrate) {
            window.TelegramManager.vibrate('light');
        }
    }

    // ===== –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ù–ê –ì–õ–ê–í–ù–û–ô =====
    updateMainPageStats() {
        const totalQuotesElement = document.getElementById('total-quotes');
        const weekQuotesElement = document.getElementById('week-quotes');
        const recentQuotesElement = document.getElementById('recent-quotes-list');
        
        if (totalQuotesElement) {
            totalQuotesElement.textContent = this.quotes.length;
        }
        
        if (weekQuotesElement) {
            const weekAgo = new Date();
            weekAgo.setDate(weekAgo.getDate() - 7);
            const weekQuotes = this.quotes.filter(quote => 
                new Date(quote.createdAt || quote.date) >= weekAgo
            );
            weekQuotesElement.textContent = weekQuotes.length;
        }
        
        if (recentQuotesElement) {
            const recentQuotes = this.quotes.slice(-3).reverse();
            recentQuotesElement.innerHTML = recentQuotes.map(quote => `
                <div class="quote-item">
                    <div class="quote-text">${this.escapeHtml(quote.text)}</div>
                    <div class="quote-author">${quote.author || '–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º—ã—Å–ª—å'}</div>
                </div>
            `).join('');
        }
    }

    // ===== –ù–ê–í–ò–ì–ê–¶–ò–Ø –ò UI =====
    updateNavigation() {
        this.updateButtons();
        this.updatePageIndicator();
        this.updatePageDots();
    }

    updateButtons() {
        const prevBtn = document.getElementById('prev-page');
        const nextBtn = document.getElementById('next-page');
        
        if (prevBtn) {
            prevBtn.disabled = this.currentPageIndex === 0;
        }
        
        if (nextBtn) {
            nextBtn.disabled = this.currentPageIndex >= this.pages.length - 1;
        }
    }

    updatePageIndicator() {
        const indicator = document.getElementById('page-indicator');
        if (indicator) {
            indicator.textContent = `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${this.currentPageIndex + 1} –∏–∑ ${this.pages.length}`;
        }
    }

    updatePageDots() {
        let dotsContainer = document.querySelector('.page-dots');
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–æ—á–µ–∫ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if (!dotsContainer) {
            const navigation = document.querySelector('.page-navigation');
            if (navigation) {
                dotsContainer = document.createElement('div');
                dotsContainer.className = 'page-dots';
                navigation.appendChild(dotsContainer);
            }
        }
        
        if (!dotsContainer) return;
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ (–º–∞–∫—Å–∏–º—É–º 10)
        const maxDots = 10;
        const totalPages = this.pages.length;
        const showDots = Math.min(totalPages, maxDots);
        
        let dotsHTML = '';
        
        if (totalPages <= maxDots) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ—á–∫–∏
            for (let i = 0; i < totalPages; i++) {
                const isActive = i === this.currentPageIndex;
                dotsHTML += `<div class="page-dot ${isActive ? 'active' : ''}" data-page="${i}"></div>`;
            }
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å "..."
            const current = this.currentPageIndex;
            const start = Math.max(0, current - 3);
            const end = Math.min(totalPages - 1, current + 3);
            
            for (let i = start; i <= end; i++) {
                const isActive = i === this.currentPageIndex;
                dotsHTML += `<div class="page-dot ${isActive ? 'active' : ''}" data-page="${i}"></div>`;
            }
        }
        
        dotsContainer.innerHTML = dotsHTML;
    }

    // ===== –£–¢–ò–õ–ò–¢–´ =====
    formatQuoteDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit',
            year: '2-digit'
        });
    }

    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    showToast(message, type = 'info') {
        if (window.app && window.app.showToast) {
            window.app.showToast(message, type);
        } else {
            console.log(`Toast (${type}): ${message}`);
            
            const toast = document.createElement('div');
            toast.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: ${type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#6366f1'};
                color: white;
                padding: 12px 20px;
                border-radius: 8px;
                z-index: 10000;
                animation: slideIn 0.3s ease;
            `;
            toast.textContent = message;
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.remove();
            }, 3000);
        }
    }

    // ===== –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´ =====
    
    addQuote(text, author = '') {
        const newQuote = {
            text,
            author,
            date: new Date().toISOString(),
            createdAt: new Date().toISOString()
        };
        
        if (!Array.isArray(this.quotes)) {
            this.quotes = [];
        }
        
        this.quotes.push(newQuote);
        this.createPages();
        this.currentPageIndex = this.pages.length - 1;
        this.renderCurrentPage();
        this.updateMainPageStats();
    }
    
    getStats() {
        return {
            totalQuotes: this.quotes.length,
            totalPages: this.pages.length,
            currentPage: this.currentPageIndex + 1,
            quotesPerPage: this.quotesPerPage,
            lastQuoteDate: this.quotes.length > 0 ? this.quotes[this.quotes.length - 1].createdAt : null
        };
    }
    
    exportQuotes() {
        return {
            quotes: this.quotes,
            pages: this.pages,
            exportDate: new Date().toISOString()
        };
    }
}

// ===== –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø =====
window.DiaryManager = DiaryManager;

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('page-diary')) {
        window.diaryManager = new DiaryManager();
    }
});
