/**
 * –ß–∏—Ç–∞—Ç–µ–ª—å Mini App - API Integration
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Reader Bot API
 * –ù–û–í–û–ï: –î–æ–±–∞–≤–ª–µ–Ω—ã –º–µ—Ç–æ–¥—ã –¥–ª—è AI –∞–Ω–∞–ª–∏–∑–∞ —Ü–∏—Ç–∞—Ç
 */

class ApiManager {
    constructor() {
        this.baseUrl = this.getApiBaseUrl();
        this.authToken = null;
        this.isAuthenticated = false;
        
        console.log('üîó API Manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', this.baseUrl);
    }
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ URL API
     */
    getApiBaseUrl() {
        // –í production –±—É–¥–µ—Ç –¥–æ–º–µ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
            return 'http://localhost:3000/api/reader';
        }
        
        // –î–ª—è Telegram Mini App –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
        return '/api/reader';
    }
    
    /**
     * –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram
     */
    async authenticateWithTelegram(initData, user) {
        try {
            console.log('üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram...');
            
            const response = await this.request('/auth/telegram', {
                method: 'POST',
                body: {
                    initData: initData,
                    user: user
                }
            });
            
            if (response.success && response.token) {
                this.authToken = response.token;
                this.isAuthenticated = true;
                
                console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
                this.saveAuthToken(response.token);
                
                return {
                    success: true,
                    user: response.user,
                    token: response.token
                };
            } else {
                throw new Error(response.message || '–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
            
            // Fallback - —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
            return this.createTemporarySession(user);
        }
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    createTemporarySession(user) {
        console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏...');
        
        const tempToken = `temp_${user.id}_${Date.now()}`;
        this.authToken = tempToken;
        this.isAuthenticated = true;
        
        this.saveAuthToken(tempToken);
        
        return {
            success: true,
            user: user,
            token: tempToken,
            isTemporary: true
        };
    }
    
    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
     */
    saveAuthToken(token) {
        try {
            // –í Mini App –Ω–µ—Ç localStorage, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
            this.storedToken = token;
        } catch (error) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω:', error);
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
     */
    loadAuthToken() {
        try {
            if (this.storedToken) {
                this.authToken = this.storedToken;
                this.isAuthenticated = true;
                return this.storedToken;
            }
        } catch (error) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–∫–µ–Ω:', error);
        }
        return null;
    }
    
    /**
     * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
     */
    async request(endpoint, options = {}) {
        const url = `${this.baseUrl}${endpoint}`;
        
        const defaultOptions = {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            }
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
        if (this.authToken) {
            defaultOptions.headers['Authorization'] = `Bearer ${this.authToken}`;
        }
        
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ–ø—Ü–∏–∏
        const finalOptions = {
            ...defaultOptions,
            ...options,
            headers: {
                ...defaultOptions.headers,
                ...options.headers
            }
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º body –µ—Å–ª–∏ –µ—Å—Ç—å
        if (options.body && finalOptions.method !== 'GET') {
            finalOptions.body = JSON.stringify(options.body);
        }
        
        try {
            console.log(`üì° API ${finalOptions.method} ${endpoint}`);
            
            const response = await fetch(url, finalOptions);
            
            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(`HTTP ${response.status}: ${errorText}`);
            }
            
            const data = await response.json();
            console.log(`‚úÖ API ${finalOptions.method} ${endpoint} - —É—Å–ø–µ—à–Ω–æ`);
            
            return data;
        } catch (error) {
            console.error(`‚ùå API ${finalOptions.method} ${endpoint} - –æ—à–∏–±–∫–∞:`, error);
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º mock –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            return this.getMockResponse(endpoint, finalOptions.method, options.body);
        }
    }
    
    /**
     * Mock –æ—Ç–≤–µ—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ backend
     */
    getMockResponse(endpoint, method, body = null) {
        console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è:', endpoint);
        
        if (endpoint.includes('/auth/telegram')) {
            return {
                success: true,
                token: 'mock_token_' + Date.now(),
                user: {
                    id: 12345678,
                    telegramId: 12345678,
                    name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                    username: 'test_user'
                }
            };
        }
        
        // –ù–û–í–û–ï: Mock –¥–ª—è AI –∞–Ω–∞–ª–∏–∑–∞ —Ü–∏—Ç–∞—Ç
        if (endpoint.includes('/quotes/analyze') && method === 'POST') {
            const { text, author } = body || {};
            return {
                success: true,
                data: this.generateMockAIAnalysis(text, author)
            };
        }
        
        if (endpoint.includes('/quotes')) {
            if (method === 'GET') {
                return {
                    success: true,
                    data: [
                        {
                            id: 1,
                            text: '–ñ–∏–∑–Ω—å ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ —Å —Ç–æ–±–æ–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –ø–æ–∫–∞ —Ç—ã —Å—Ç—Ä–æ–∏—à—å –ø–ª–∞–Ω—ã.',
                            author: '–î–∂–æ–Ω –õ–µ–Ω–Ω–æ–Ω',
                            createdAt: new Date().toISOString(),
                            analysis: {
                                category: '–§–∏–ª–æ—Å–æ—Ñ–∏—è –∂–∏–∑–Ω–∏',
                                mood: '–ú—É–¥—Ä–æ—Å—Ç—å',
                                aiComment: '–õ–µ–Ω–Ω–æ–Ω –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –Ω–∞–º –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –∂–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º –º–æ–º–µ–Ω—Ç–æ–º. –í–∞—à–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –æ –±–∞–ª–∞–Ω—Å–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∑—Ä–µ–ª–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∂–∏–∑–Ω–∏.',
                                bookRecommendation: {
                                    title: '–°–∏–ª–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ',
                                    author: '–≠–∫—Ö–∞—Ä—Ç –¢–æ–ª–ª–µ',
                                    reason: '–£–≥–ª—É–±–ª–µ–Ω–∏–µ –≤ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é –∂–∏–∑–Ω–∏ –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å'
                                }
                            }
                        },
                        {
                            id: 2,
                            text: '–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –∫ –ø–æ–∑–Ω–∞–Ω–∏—é ‚Äî —ç—Ç–æ —É–±–µ–∂–¥–µ–Ω–∏–µ, —á—Ç–æ —Ç—ã —É–∂–µ –∑–Ω–∞–µ—à—å.',
                            author: '–ë—É–¥–¥–∞',
                            createdAt: new Date(Date.now() - 86400000).toISOString(),
                            analysis: {
                                category: '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ',
                                mood: '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ',
                                aiComment: '–ë—É–¥–¥–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–∞–∂–Ω–æ—Å—Ç—å —É—á–µ–Ω–∏—á–µ—Å—Ç–≤–∞. –í–∞—à –≤—ã–±–æ—Ä —ç—Ç–æ–π —Ü–∏—Ç–∞—Ç—ã –≥–æ–≤–æ—Ä–∏—Ç –æ —Å–º–∏—Ä–µ–Ω–∏–∏ –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø–æ–∑–Ω–∞–Ω–∏—é. –≠—Ç–æ –ø—É—Ç—å –º—É–¥—Ä–æ—Å—Ç–∏.',
                                bookRecommendation: {
                                    title: '–£–º –Ω–æ–≤–∏—á–∫–∞',
                                    author: '–°—É–¥–∑—É–∫–∏ –†–æ—Å–∏',
                                    reason: '–†–∞–∑–≤–∏—Ç–∏–µ –∏–¥–µ–π –æ –Ω–µ–ø—Ä–µ–¥–≤–∑—è—Ç–æ–º –ø–æ–∑–Ω–∞–Ω–∏–∏'
                                }
                            }
                        }
                    ],
                    pagination: {
                        page: 1,
                        limit: 10,
                        total: 2,
                        pages: 1
                    }
                };
            } else if (method === 'POST') {
                const quoteData = body || {};
                return {
                    success: true,
                    data: {
                        id: Date.now(),
                        text: quoteData.text || '–ù–æ–≤–∞—è —Ü–∏—Ç–∞—Ç–∞',
                        author: quoteData.author || '',
                        createdAt: new Date().toISOString(),
                        analysis: this.generateMockAIAnalysis(quoteData.text, quoteData.author)
                    }
                };
            }
        }
        
        // –ù–û–í–û–ï: Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞
        if (endpoint.includes('/catalog') || endpoint.includes('/books')) {
            return {
                success: true,
                data: {
                    books: [
                        {
                            id: 1,
                            title: "–ò—Å–∫—É—Å—Å—Ç–≤–æ –ª—é–±–∏—Ç—å",
                            author: "–≠—Ä–∏—Ö –§—Ä–æ–º–º",
                            price: 1200,
                            discountedPrice: 960,
                            cover: null,
                            category: "psychology",
                            description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ –æ –ø—Ä–∏—Ä–æ–¥–µ –ª—é–±–≤–∏ –∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π",
                            recommendation: "–í–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã –æ –ª—é–±–≤–∏ –≥–æ–≤–æ—Ä—è—Ç –æ –ø–æ–∏—Å–∫–µ –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π",
                            utm: "?utm_source=mini_app&utm_medium=catalog&utm_campaign=reader_bot&utm_content=fromm_art_of_loving",
                            tags: ["–ª—é–±–æ–≤—å", "–æ—Ç–Ω–æ—à–µ–Ω–∏—è", "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è"]
                        },
                        {
                            id: 2,
                            title: "–ü–∏—Å—å–º–∞ –∫ –º–æ–ª–æ–¥–æ–º—É –ø–æ—ç—Ç—É",
                            author: "–†–∞–π–Ω–µ—Ä –ú–∞—Ä–∏—è –†–∏–ª—å–∫–µ",
                            price: 800,
                            discountedPrice: 680,
                            cover: null,
                            category: "philosophy",
                            description: "–ú—É–¥—Ä—ã–µ —Å–æ–≤–µ—Ç—ã –≤–µ–ª–∏–∫–æ–≥–æ –ø–æ—ç—Ç–∞ –æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ –∏ –∂–∏–∑–Ω–∏",
                            recommendation: "–°–æ–∑–≤—É—á–Ω–æ –≤–∞—à–∏–º –∑–∞–ø–∏—Å—è–º –æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º –º–∏—Ä–µ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ",
                            utm: "?utm_source=mini_app&utm_medium=catalog&utm_campaign=reader_bot&utm_content=rilke_letters",
                            tags: ["—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ", "—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è", "–ø–æ—ç–∑–∏—è"]
                        },
                        {
                            id: 3,
                            title: "–ë—ã—Ç—å —Å–æ–±–æ–π",
                            author: "–ê–Ω–Ω–∞ –ë—É—Å–µ–ª",
                            price: 1500,
                            discountedPrice: 1200,
                            cover: null,
                            category: "selfdevelopment",
                            description: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—é –∏ –∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏",
                            recommendation: "–î–ª—è —É–≥–ª—É–±–ª–µ–Ω–∏—è –≤ —Ç–µ–º—É —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è –∏ –∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏",
                            utm: "?utm_source=mini_app&utm_medium=catalog&utm_campaign=reader_bot&utm_content=busel_be_yourself",
                            tags: ["—Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏–µ", "–∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å", "—Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ"]
                        }
                    ],
                    categories: [
                        { id: 'psychology', name: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', count: 1 },
                        { id: 'philosophy', name: '–§–∏–ª–æ—Å–æ—Ñ–∏—è', count: 1 },
                        { id: 'selfdevelopment', name: '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ', count: 1 }
                    ]
                }
            };
        }
        
        // –ù–û–í–û–ï: Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
        if (endpoint.includes('/promocodes')) {
            return {
                success: true,
                data: [
                    {
                        code: 'READER20',
                        discount: 20,
                        description: '20% —Å–∫–∏–¥–∫–∞ –¥–ª—è —á–∏—Ç–∞—Ç–µ–ª–µ–π',
                        isActive: true,
                        validUntil: new Date(Date.now() + 30 * 86400000).toISOString()
                    },
                    {
                        code: 'PHIL15',
                        discount: 15,
                        description: '15% —Å–∫–∏–¥–∫–∞ –Ω–∞ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é',
                        isActive: true,
                        validUntil: new Date(Date.now() + 14 * 86400000).toISOString()
                    }
                ]
            };
        }
        
        if (endpoint.includes('/stats')) {
            return {
                success: true,
                data: {
                    totalQuotes: 47,
                    weekQuotes: 5,
                    currentStreak: 3,
                    longestStreak: 12,
                    categories: {
                        '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ': 15,
                        '–§–∏–ª–æ—Å–æ—Ñ–∏—è': 12,
                        '–õ—é–±–æ–≤—å': 8,
                        '–ú—É–¥—Ä–æ—Å—Ç—å': 7,
                        '–ñ–∏–∑–Ω—å': 5
                    }
                }
            };
        }
        
        if (endpoint.includes('/reports')) {
            return {
                success: true,
                data: [
                    {
                        id: 1,
                        type: 'weekly',
                        weekStart: new Date(Date.now() - 7 * 86400000).toISOString(),
                        weekEnd: new Date().toISOString(),
                        quotesCount: 5,
                        analysis: '–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –≤–∞—à–∏ —Ü–∏—Ç–∞—Ç—ã –≥–æ–≤–æ—Ä—è—Ç –æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏...',
                        recommendations: [
                            {
                                title: '–ò—Å–∫—É—Å—Å—Ç–≤–æ –ª—é–±–∏—Ç—å',
                                author: '–≠—Ä–∏—Ö –§—Ä–æ–º–º',
                                reason: '–ü–æ–¥—Ö–æ–¥–∏—Ç –≤–∞—à–∏–º —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è–º –æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö'
                            }
                        ],
                        createdAt: new Date().toISOString()
                    }
                ]
            };
        }
        
        if (endpoint.includes('/achievements')) {
            return {
                success: true,
                data: [
                    {
                        id: 'first_quote',
                        title: '–ü–µ—Ä–≤–∞—è —Ü–∏—Ç–∞—Ç–∞',
                        description: '–°–æ—Ö—Ä–∞–Ω–∏–ª–∏ –ø–µ—Ä–≤—É—é —Ü–∏—Ç–∞—Ç—É',
                        icon: 'üéØ',
                        isUnlocked: true,
                        unlockedAt: new Date(Date.now() - 30 * 86400000).toISOString()
                    },
                    {
                        id: 'week_streak',
                        title: '–ù–µ–¥–µ–ª—è –º—É–¥—Ä–æ—Å—Ç–∏',
                        description: '7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ –¥–æ–±–∞–≤–ª—è–µ—Ç–µ —Ü–∏—Ç–∞—Ç—ã',
                        icon: 'üî•',
                        isUnlocked: false,
                        progress: 3,
                        target: 7
                    }
                ]
            };
        }

        // –ù–û–í–û–ï: Mock –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (endpoint.includes('/profile')) {
            return {
                success: true,
                data: {
                    id: 12345678,
                    name: '–ú–∞—Ä–∏–Ω–∞',
                    username: 'marina_reader',
                    email: 'marina@example.com',
                    interests: ['—Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ', '–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è', '—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è'],
                    recentQuoteTopics: ['–ª—é–±–æ–≤—å', '—Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏–µ', '–æ—Ç–Ω–æ—à–µ–Ω–∏—è'],
                    joinedAt: new Date(Date.now() - 90 * 86400000).toISOString(),
                    settings: {
                        notifications: true,
                        reminderTimes: ['09:00', '19:00'],
                        theme: 'auto'
                    }
                }
            };
        }
        
        // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
        return {
            success: false,
            message: 'Mock endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω',
            data: null
        };
    }

    /**
     * –ù–û–í–û–ï: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è mock AI –∞–Ω–∞–ª–∏–∑–∞
     */
    generateMockAIAnalysis(text, author) {
        if (!text) {
            return {
                mood: '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ',
                category: '–û–±—â–µ–µ',
                aiComment: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—É—Å—Ç—É—é —Ü–∏—Ç–∞—Ç—É.',
                bookRecommendation: null
            };
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        const categories = [
            { keywords: ['–ª—é–±–æ–≤—å', '–æ—Ç–Ω–æ—à–µ–Ω–∏—è', '—Å–µ—Ä–¥—Ü–µ', '—á—É–≤—Å—Ç–≤–∞'], name: '–õ—é–±–æ–≤—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è' },
            { keywords: ['–º—É–¥—Ä–æ—Å—Ç—å', '–∑–Ω–∞–Ω–∏–µ', '–∏—Å—Ç–∏–Ω–∞', '–ø–æ–Ω–∏–º–∞–Ω–∏–µ', '–ø–æ–∑–Ω–∞–Ω–∏–µ'], name: '–ú—É–¥—Ä–æ—Å—Ç—å –∏ –ø–æ–∑–Ω–∞–Ω–∏–µ' },
            { keywords: ['–∂–∏–∑–Ω—å', '–±—ã—Ç–∏–µ', '—Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ', '—Å–º—ã—Å–ª'], name: '–§–∏–ª–æ—Å–æ—Ñ–∏—è –∂–∏–∑–Ω–∏' },
            { keywords: ['–≤—Ä–µ–º—è', '–º–æ–º–µ–Ω—Ç', '–Ω–∞—Å—Ç–æ—è—â–µ–µ', '–±—É–¥—É—â–µ–µ', '–ø—Ä–æ—à–ª–æ–µ'], name: '–§–∏–ª–æ—Å–æ—Ñ–∏—è –≤—Ä–µ–º–µ–Ω–∏' },
            { keywords: ['—Å—á–∞—Å—Ç—å–µ', '—Ä–∞–¥–æ—Å—Ç—å', '—É—Å–ø–µ—Ö', '–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è'], name: '–°—á–∞—Å—Ç—å–µ –∏ —É—Å–ø–µ—Ö' },
            { keywords: ['—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–∏—Å–∫—É—Å—Å—Ç–≤–æ', '–∫—Ä–∞—Å–æ—Ç–∞', '–≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ'], name: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–æ' },
            { keywords: ['—Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ', '—Ä–æ—Å—Ç', '–∏–∑–º–µ–Ω–µ–Ω–∏—è', '—É–ª—É—á—à–µ–Ω–∏–µ'], name: '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ' }
        ];

        let category = '–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è';
        for (const cat of categories) {
            if (cat.keywords.some(keyword => text.toLowerCase().includes(keyword))) {
                category = cat.name;
                break;
            }
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
        const moods = [
            { keywords: ['–≥–ª—É–±–æ–∫–∏–π', '—Å–µ—Ä—å–µ–∑–Ω—ã–π', '–≤–∞–∂–Ω—ã–π', '–∑–Ω–∞—á–∏–º—ã–π'], name: '–ì–ª—É–±–æ–∫–æ–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ' },
            { keywords: ['—Å–≤–µ—Ç–ª—ã–π', '—Ä–∞–¥–æ—Å—Ç–Ω—ã–π', '–ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π', '–∫—Ä–∞—Å–∏–≤—ã–π'], name: '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ' },
            { keywords: ['–º—É–¥—Ä—ã–π', '–ø–æ–Ω–∏–º–∞–Ω–∏–µ', '–æ–ø—ã—Ç', '–∑–Ω–∞–Ω–∏–µ'], name: '–ú—É–¥—Ä–æ—Å—Ç—å' },
            { keywords: ['—Å–ø–æ–∫–æ–π–Ω—ã–π', '—Ç–∏—Ö–∏–π', '–≥–∞—Ä–º–æ–Ω–∏—è', '–±–∞–ª–∞–Ω—Å'], name: '–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ' },
            { keywords: ['–º–æ—Ç–∏–≤–∞—Ü–∏—è', '–¥–µ–π—Å—Ç–≤–∏–µ', '–¥–≤–∏–∂–µ–Ω–∏–µ', '—Ü–µ–ª—å'], name: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è' }
        ];

        let mood = '–†–∞–∑–º—ã—à–ª–µ–Ω–∏–µ';
        for (const m of moods) {
            if (m.keywords.some(keyword => text.toLowerCase().includes(keyword))) {
                mood = m.name;
                break;
            }
        }

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º AI –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        let aiComment;
        let bookRecommendation;

        if (!author) {
            aiComment = `–í–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º—ã—Å–ª—å! –≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª—É–±–∏–Ω—É –≤–∞—à–∏—Ö —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ "${category.toLowerCase()}". –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —ç—Ç—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –º—É–¥—Ä–æ—Å—Ç—å ‚Äî —Ç–∞–∫–∏–µ –∏–Ω—Å–∞–π—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –æ–ø—ã—Ç –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å.`;
            bookRecommendation = {
                title: "–ë—ã—Ç—å —Å–æ–±–æ–π",
                author: "–ê–Ω–Ω–∞ –ë—É—Å–µ–ª",
                reason: "–î–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤ —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑–∞ –∏ –∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏"
            };
        } else {
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤
            if (author.toLowerCase().includes('—Ñ—Ä–æ–º–º')) {
                aiComment = `${author} ‚Äî –º–∞—Å—Ç–µ—Ä –∞–Ω–∞–ª–∏–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π. –≠—Ç–∞ –º—ã—Å–ª—å –æ—Ç—Ä–∞–∂–∞–µ—Ç –µ–≥–æ –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –ª—é–±–≤–∏. –í–∞—à –≤—ã–±–æ—Ä —ç—Ç–æ–π —Ü–∏—Ç–∞—Ç—ã –≥–æ–≤–æ—Ä–∏—Ç –æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º.`;
                bookRecommendation = {
                    title: "–ò—Å–∫—É—Å—Å—Ç–≤–æ –ª—é–±–∏—Ç—å",
                    author: "–≠—Ä–∏—Ö –§—Ä–æ–º–º",
                    reason: "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ –ª—é–±–≤–∏ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π"
                };
            } else if (author.toLowerCase().includes('–±—É–¥–¥–∞') || author.toLowerCase().includes('–¥–∞–ª–∞–π')) {
                aiComment = `–í–æ—Å—Ç–æ—á–Ω–∞—è –º—É–¥—Ä–æ—Å—Ç—å ${author} –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏ —Å–µ–≥–æ–¥–Ω—è. –≠—Ç–∞ –º—ã—Å–ª—å –æ "${category.toLowerCase()}" –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ –≥–ª—É–±–∏–Ω–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –±—ã—Ç–∏—è –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é.`;
                bookRecommendation = {
                    title: "–£–º –Ω–æ–≤–∏—á–∫–∞",
                    author: "–°—É–¥–∑—É–∫–∏ –†–æ—Å–∏",
                    reason: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ –≤ –±—É–¥–¥–∏–π—Å–∫—É—é —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏"
                };
            } else if (author.toLowerCase().includes('—Å–æ–∫—Ä–∞—Ç') || author.toLowerCase().includes('–ø–ª–∞—Ç–æ–Ω')) {
                aiComment = `–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –º—É–¥—Ä–æ—Å—Ç—å ${author} –Ω–µ —Ç–µ—Ä—è–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏. –í–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ –ø–æ–∑–Ω–∞–Ω–∏—è –≥–æ–≤–æ—Ä–∏—Ç –æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ –∫ –∏—Å—Ç–∏–Ω–Ω–æ–º—É –∑–Ω–∞–Ω–∏—é –∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—é.`;
                bookRecommendation = {
                    title: "–ê–ø–æ–ª–æ–≥–∏—è –°–æ–∫—Ä–∞—Ç–∞",
                    author: "–ü–ª–∞—Ç–æ–Ω",
                    reason: "–û—Å–Ω–æ–≤—ã –∑–∞–ø–∞–¥–Ω–æ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ –∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è"
                };
            } else if (author.toLowerCase().includes('—Ä–∏–ª—å–∫–µ') || author.toLowerCase().includes('—Ü–≤–µ—Ç–∞–µ–≤–∞')) {
                aiComment = `–ü–æ—ç—Ç–∏—á–µ—Å–∫–∞—è –¥—É—à–∞ ${author} —á—É–≤—Å—Ç–≤—É–µ—Ç –≥–ª—É–±–∏–Ω—É —Å–ª–æ–≤. –í–∞—à –≤—ã–±–æ—Ä –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–Ω–∫–æ–º –≤–æ—Å–ø—Ä–∏—è—Ç–∏–∏ —è–∑—ã–∫–∞ –∏ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ –∫ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–º—É.`;
                bookRecommendation = {
                    title: "–ü–∏—Å—å–º–∞ –∫ –º–æ–ª–æ–¥–æ–º—É –ø–æ—ç—Ç—É",
                    author: "–†–∞–π–Ω–µ—Ä –ú–∞—Ä–∏—è –†–∏–ª—å–∫–µ",
                    reason: "–†–∞–∑–≤–∏—Ç–∏–µ –ø–æ—ç—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–∏–¥–µ–Ω–∏—è –º–∏—Ä–∞ –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–π —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
                };
            } else {
                aiComment = `–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä —Ü–∏—Ç–∞—Ç—ã –æ—Ç ${author}! –≠—Ç–∞ –º—ã—Å–ª—å –æ "${category.toLowerCase()}" —Å–æ–∑–≤—É—á–Ω–∞ –≤–∞—à–µ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –ø–æ–∏—Å–∫—É. –¢–∞–∫–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –≥–æ–≤–æ—Ä—è—Ç –æ –∂–µ–ª–∞–Ω–∏–∏ –≥–ª—É–±–∂–µ –ø–æ–Ω—è—Ç—å –∂–∏–∑–Ω—å.`;
                bookRecommendation = {
                    title: "–î—É–º–∞–π –º–µ–¥–ª–µ–Ω–Ω–æ... —Ä–µ—à–∞–π –±—ã—Å—Ç—Ä–æ",
                    author: "–î–∞–Ω–∏—ç–ª—å –ö–∞–Ω–µ–º–∞–Ω",
                    reason: "–†–∞–∑–≤–∏—Ç–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è –∏ —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑–∞"
                };
            }
        }

        return {
            mood,
            category,
            aiComment,
            bookRecommendation
        };
    }
    
    // === –ú–ï–¢–û–î–´ –î–õ–Ø –†–ê–ë–û–¢–´ –° –¶–ò–¢–ê–¢–ê–ú–ò ===
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ü–∏—Ç–∞—Ç
     */
    async getQuotes(params = {}) {
        const query = new URLSearchParams(params).toString();
        const endpoint = `/quotes${query ? '?' + query : ''}`;
        return await this.request(endpoint);
    }
    
    /**
     * –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–∏—Ç–∞—Ç—É
     */
    async addQuote(quoteData) {
        return await this.request('/quotes', {
            method: 'POST',
            body: quoteData
        });
    }
    
    /**
     * –ù–û–í–û–ï: –ü–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑ —Ü–∏—Ç–∞—Ç—ã –æ—Ç AI
     */
    async analyzeQuote(text, author = '') {
        return await this.request('/quotes/analyze', {
            method: 'POST',
            body: { text, author }
        });
    }
    
    // === –ù–û–í–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –ö–ê–¢–ê–õ–û–ì–ê ===
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥
     */
    async getCatalog(params = {}) {
        const query = new URLSearchParams(params).toString();
        const endpoint = `/catalog${query ? '?' + query : ''}`;
        return await this.request(endpoint);
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥
     */
    async getPersonalizedBooks() {
        return await this.request('/books/personalized');
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ AI –∞–Ω–∞–ª–∏–∑–∞ —Ü–∏—Ç–∞—Ç—ã
     */
    async getBookRecommendations(quoteText) {
        return await this.request('/books/recommendations', {
            method: 'POST',
            body: { quote: quoteText }
        });
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–Ω–∏–≥–∏
     */
    async getBookDetails(bookId) {
        return await this.request(`/books/${bookId}`);
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async getPromoCodes() {
        return await this.request('/promocodes');
    }
    
    /**
     * –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥
     */
    async applyPromoCode(code, bookId) {
        return await this.request('/promocodes/apply', {
            method: 'POST',
            body: { code, bookId }
        });
    }
    
    /**
     * –¢—Ä–µ–∫–∏–Ω–≥ —Å–æ–±—ã—Ç–∏–π (–∫–ª–∏–∫–∏, –ø–æ–∫—É–ø–∫–∏, etc.)
     */
    async trackEvent(eventType, eventData) {
        return await this.request('/analytics/track', {
            method: 'POST',
            body: {
                type: eventType,
                data: eventData,
                timestamp: new Date().toISOString()
            }
        });
    }
    
    // === –ú–ï–¢–û–î–´ –î–õ–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ò ===
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async getStats() {
        return await this.request('/stats');
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç—ã
     */
    async getReports(type = 'weekly') {
        return await this.request(`/reports?type=${type}`);
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
     */
    async getAchievements() {
        return await this.request('/achievements');
    }
    
    // === –ú–ï–¢–û–î–´ –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async getProfile() {
        return await this.request('/profile');
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async updateProfile(profileData) {
        return await this.request('/profile', {
            method: 'PUT',
            body: profileData
        });
    }
    
    // === –ú–ï–¢–û–î–´ –î–õ–Ø –ù–ê–°–¢–†–û–ï–ö ===
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async getSettings() {
        return await this.request('/settings');
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
     */
    async updateSettings(settings) {
        return await this.request('/settings', {
            method: 'PUT',
            body: settings
        });
    }
    
    // === –£–¢–ò–õ–ò–¢–´ ===
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è API
     */
    async healthCheck() {
        try {
            const response = await fetch(`${this.baseUrl}/health`);
            return response.ok;
        } catch (error) {
            return false;
        }
    }
    
    /**
     * –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
     */
    logout() {
        this.authToken = null;
        this.isAuthenticated = false;
        this.storedToken = null;
        
        console.log('üëã –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
     */
    isAuth() {
        return this.isAuthenticated && this.authToken;
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.apiManager = new ApiManager();
