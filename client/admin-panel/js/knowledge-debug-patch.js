/**
 * PATCH –¥–ª—è knowledge.js - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
 * –ü—Ä–æ–±–ª–µ–º–∞: –¢–∞–±–ª–∏—Ü–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç "–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤..." –Ω–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
 */

console.log('üìö –ü–ê–¢–ß: –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è knowledge.js...');

// –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é loadDocuments —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
window.loadDocuments = async function() {
    if (window.isLoading) {
        console.log('üìö –ü–ê–¢–ß: –£–∂–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
        return;
    }
    
    try {
        console.log('üìö –ü–ê–¢–ß: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...');
        window.isLoading = true;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        const tableBody = document.querySelector('#documents-table tbody');
        if (tableBody) {
            tableBody.innerHTML = `
                <tr class="table-loading">
                    <td colspan="6">
                        <div class="loading-spinner"></div>
                        üìö –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...
                    </td>
                </tr>
            `;
        }

        const params = new URLSearchParams({
            page: window.currentPage || 1,
            limit: 10
        });

        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å
        const searchInput = document.getElementById('search-input');
        if (searchInput && searchInput.value.trim()) {
            params.append('q', searchInput.value.trim());
            console.log('üìö –ü–ê–¢–ß: –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:', searchInput.value.trim());
        }

        const categoryFilter = document.getElementById('category-filter');
        if (categoryFilter && categoryFilter.value) {
            params.append('category', categoryFilter.value);
            console.log('üìö –ü–ê–¢–ß: –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∏–ª—å—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoryFilter.value);
        }

        const url = `/api/reader/knowledge?${params}`;
        console.log('üìö –ü–ê–¢–ß: –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫:', url);

        // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        const response = await fetch(url, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        console.log('üìö –ü–ê–¢–ß: –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }

        const data = await response.json();
        console.log('üìö –ü–ê–¢–ß: –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', data);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
        let documents = [];
        let pagination = null;

        if (data.success && data.data) {
            // –§–æ—Ä–º–∞—Ç: {success: true, data: [...]}
            documents = data.data;
            pagination = data.pagination;
            console.log('üìö –ü–ê–¢–ß: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç {success: true, data: [...]}');
        } else if (Array.isArray(data)) {
            // –§–æ—Ä–º–∞—Ç: –ø—Ä—è–º–æ–π –º–∞—Å—Å–∏–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            documents = data;
            console.log('üìö –ü–ê–¢–ß: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –º–∞—Å—Å–∏–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
        } else if (data.documents) {
            // –§–æ—Ä–º–∞—Ç: {documents: [...]}
            documents = data.documents;
            pagination = data.pagination;
            console.log('üìö –ü–ê–¢–ß: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç {documents: [...]}');
        } else {
            console.warn('üìö –ü–ê–¢–ß: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:', data);
            documents = [];
        }

        console.log('üìö –ü–ê–¢–ß: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º', documents.length, '–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
        renderDocumentsPatch(documents);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
        if (pagination && typeof updatePagination === 'function') {
            updatePagination(pagination);
        }

        console.log('üìö –ü–ê–¢–ß: –î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã');

    } catch (error) {
        console.error('üìö –ü–ê–¢–ß: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', error);
        
        const tableBody = document.querySelector('#documents-table tbody');
        if (tableBody) {
            tableBody.innerHTML = `
                <tr class="table-error">
                    <td colspan="6" class="text-center">
                        ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}
                        <br>
                        <button class="btn btn-secondary" onclick="loadDocuments()" style="margin-top: 10px;">
                            üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                        </button>
                    </td>
                </tr>
            `;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if (typeof showNotification === 'function') {
            showNotification('error', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ' + error.message);
        }
    } finally {
        window.isLoading = false;
        console.log('üìö –ü–ê–¢–ß: –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
};

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
function renderDocumentsPatch(documents) {
    console.log('üìö –ü–ê–¢–ß: –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã:', documents);
    
    const tableBody = document.querySelector('#documents-table tbody');
    if (!tableBody) {
        console.error('üìö –ü–ê–¢–ß: –ù–µ –Ω–∞–π–¥–µ–Ω tbody —Ç–∞–±–ª–∏—Ü—ã');
        return;
    }

    if (!documents || documents.length === 0) {
        console.log('üìö –ü–ê–¢–ß: –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        tableBody.innerHTML = `
            <tr>
                <td colspan="6" class="text-center">
                    üìö –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                    <br>
                    <small class="text-muted">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</small>
                </td>
            </tr>
        `;
        return;
    }

    console.log('üìö –ü–ê–¢–ß: –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è', documents.length, '–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');

    const documentsHTML = documents.map((doc, index) => {
        console.log(`üìö –ü–ê–¢–ß: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç ${index + 1}:`, doc);
        
        const id = doc._id || doc.id || `doc_${index}`;
        const title = doc.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
        const category = doc.category || 'general';
        const language = doc.language || 'auto';
        const status = doc.status || 'draft';
        const content = doc.content || '';
        const tags = doc.tags || [];

        return `
            <tr data-id="${escapeHtmlPatch(id)}">
                <td class="col-title">
                    <div class="document-title">${escapeHtmlPatch(title)}</div>
                    <small class="text-muted">${escapeHtmlPatch(content.substring(0, 100))}${content.length > 100 ? '...' : ''}</small>
                </td>
                <td class="col-category">
                    <span class="badge badge-primary">${getCategoryDisplayNamePatch(category)}</span>
                </td>
                <td class="col-language">${escapeHtmlPatch(language)}</td>
                <td class="col-tags">
                    ${renderTagsPatch(tags)}
                </td>
                <td class="col-status">
                    <span class="badge badge-${status === 'published' ? 'success' : 'warning'}">
                        ${status === 'published' ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω' : '–ß–µ—Ä–Ω–æ–≤–∏–∫'}
                    </span>
                </td>
                <td class="col-actions">
                    <div class="btn-group btn-group-sm">
                        <button class="btn btn-outline-primary" onclick="viewDocumentPatch('${id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                            üëÅÔ∏è
                        </button>
                        <button class="btn btn-outline-secondary" onclick="editDocumentPatch('${id}')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                            ‚úèÔ∏è
                        </button>
                        <button class="btn btn-outline-danger" onclick="deleteDocumentPatch('${id}')" title="–£–¥–∞–ª–∏—Ç—å">
                            üóëÔ∏è
                        </button>
                    </div>
                </td>
            </tr>
        `;
    }).join('');

    console.log('üìö –ü–ê–¢–ß: HTML —Å–æ–∑–¥–∞–Ω, –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É...');
    tableBody.innerHTML = documentsHTML;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
    const resultsInfo = document.getElementById('results-info');
    if (resultsInfo) {
        resultsInfo.textContent = `–ü–æ–∫–∞–∑–∞–Ω–æ ${documents.length} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`;
    }
    
    console.log('üìö –ü–ê–¢–ß: –î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ');
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function escapeHtmlPatch(text) {
    if (typeof text !== 'string') return '';
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

function getCategoryDisplayNamePatch(category) {
    const categories = {
        'books': 'üìö –ö–Ω–∏–≥–∏',
        'psychology': 'üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è',
        'self-development': '‚ú® –°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ',
        'relationships': 'üíï –û—Ç–Ω–æ—à–µ–Ω–∏—è',
        'productivity': '‚ö° –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        'mindfulness': 'üßò –û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å',
        'creativity': 'üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        'general': 'üìñ –û–±—â–∏–µ'
    };
    return categories[category] || category || '–û–±—â–∏–µ';
}

function renderTagsPatch(tags) {
    if (!tags || tags.length === 0) {
        return '<span class="text-muted">‚Äî</span>';
    }
    
    const visibleTags = tags.slice(0, 3);
    const hiddenCount = tags.length - 3;
    
    let html = visibleTags.map(tag => 
        `<span class="badge badge-secondary badge-sm">${escapeHtmlPatch(tag)}</span>`
    ).join(' ');
    
    if (hiddenCount > 0) {
        html += ` <span class="text-muted">+${hiddenCount}</span>`;
    }
    
    return html;
}

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π –¥–µ–π—Å—Ç–≤–∏–π (–ø–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)
function viewDocumentPatch(id) {
    console.log('üìö –ü–ê–¢–ß: –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞:', id);
    if (typeof viewDocument === 'function') {
        viewDocument(id);
    } else {
        alert('–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞: ' + id);
    }
}

function editDocumentPatch(id) {
    console.log('üìö –ü–ê–¢–ß: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', id);
    if (typeof editDocument === 'function') {
        editDocument(id);
    } else {
        alert('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ' + id);
    }
}

function deleteDocumentPatch(id) {
    console.log('üìö –ü–ê–¢–ß: –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', id);
    if (typeof deleteDocument === 'function') {
        deleteDocument(id);
    } else {
        if (confirm('–£–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç: ' + id + '?')) {
            alert('–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞');
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
if (typeof window.currentPage === 'undefined') {
    window.currentPage = 1;
}
if (typeof window.isLoading === 'undefined') {
    window.isLoading = false;
}

console.log('üìö –ü–ê–¢–ß: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
console.log('üìö –ü–ê–¢–ß: –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å loadDocuments() –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–Ω–∞–Ω–∏–π
if (window.location.pathname.includes('knowledge.html')) {
    console.log('üìö –ü–ê–¢–ß: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã...');
    setTimeout(() => {
        loadDocuments();
    }, 1000);
}
