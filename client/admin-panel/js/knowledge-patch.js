/**
 * @fileoverview –ü–∞—Ç—á –¥–ª—è knowledge.js - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º UI/UX
 * @description –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ knowledge.js –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏
 * @author Reader Development Team
 */

console.log('üîß –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ç—á–∞ –¥–ª—è knowledge.js...');

// –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ knowledge.js
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(() => {
        initKnowledgePatches();
    }, 200);
});

function initKnowledgePatches() {
    console.log('üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—á–µ–π –¥–ª—è knowledge.js...');
    
    // –ü–ê–¢–ß 1: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ renderDocuments - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∫–Ω–æ–ø–æ–∫
    if (typeof window.renderDocuments === 'function') {
        const originalRenderDocuments = window.renderDocuments;
        window.renderDocuments = function(documents) {
            const result = originalRenderDocuments.call(this, documents);
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
            setTimeout(() => {
                const actionCells = document.querySelectorAll('.col-actions');
                actionCells.forEach(cell => {
                    const btnGroup = cell.querySelector('.btn-group');
                    if (btnGroup) {
                        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –∫–Ω–æ–ø–æ–∫
                        const viewBtn = btnGroup.querySelector('[onclick*="viewDocument"]');
                        const editBtn = btnGroup.querySelector('[onclick*="editDocument"]');
                        const deleteBtn = btnGroup.querySelector('[onclick*="deleteDocument"]');
                        
                        if (viewBtn) {
                            viewBtn.className = 'btn btn-sm btn-secondary';
                            viewBtn.setAttribute('title', '–ü—Ä–æ—Å–º–æ—Ç—Ä');
                        }
                        if (editBtn) {
                            editBtn.className = 'btn btn-sm btn-primary';
                            editBtn.setAttribute('title', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å');
                        }
                        if (deleteBtn) {
                            deleteBtn.className = 'btn btn-sm btn-danger';
                            deleteBtn.setAttribute('title', '–£–¥–∞–ª–∏—Ç—å');
                        }
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
                        btnGroup.setAttribute('role', 'group');
                        btnGroup.classList.add('btn-group-sm');
                    }
                });
            }, 100);
            
            return result;
        };
    }
    
    // –ü–ê–¢–ß 2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    if (typeof window.viewDocument === 'function') {
        const originalViewDocument = window.viewDocument;
        window.viewDocument = function(documentId) {
            console.log('üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –ø–∞—Ç—á–µ–º:', documentId);
            
            // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'modal-overlay';
            modal.id = 'document-view-modal';
            modal.style.zIndex = '10000';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <h3>üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞</h3>
                        <button type="button" class="modal-close">&times;</button>
                    </div>
                    <div class="modal-body" id="document-view-content">
                        <div class="loading-container">
                            <div class="loading-spinner"></div>
                            üìñ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞...
                        </div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
            modal.querySelector('.modal-close').addEventListener('click', () => {
                modal.classList.remove('active');
                document.body.style.overflow = '';
                setTimeout(() => modal.remove(), 300);
            });
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            loadDocumentData(documentId);
        };
    }
    
    // –ü–ê–¢–ß 3: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ editDocument
    if (typeof window.editDocument === 'function') {
        const originalEditDocument = window.editDocument;
        window.editDocument = function(documentId) {
            console.log('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –ø–∞—Ç—á–µ–º:', documentId);
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –º–æ–¥–∞–ª—ã
            const activeModal = document.querySelector('.modal-overlay.active');
            if (activeModal) {
                activeModal.classList.remove('active');
                setTimeout(() => activeModal.remove(), 300);
            }
            
            // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            const modal = document.createElement('div');
            modal.className = 'modal-overlay';
            modal.id = 'document-edit-modal';
            modal.style.zIndex = '10001';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <h3>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞</h3>
                        <button type="button" class="modal-close">&times;</button>
                    </div>
                    <div class="modal-body">
                        <form id="edit-document-form">
                            <input type="hidden" id="edit-document-id" value="${documentId}">
                            <div class="form-group">
                                <label for="edit-title">–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ *</label>
                                <input type="text" id="edit-title" class="form-control" required>
                            </div>
                            <div class="form-row" style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
                                <div class="form-group">
                                    <label for="edit-category">–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</label>
                                    <select id="edit-category" class="form-control" required>
                                        <option value="books">üìö –ö–Ω–∏–≥–∏</option>
                                        <option value="psychology">üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è</option>
                                        <option value="self-development">‚ú® –°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ</option>
                                        <option value="relationships">üíï –û—Ç–Ω–æ—à–µ–Ω–∏—è</option>
                                        <option value="productivity">‚ö° –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</option>
                                        <option value="mindfulness">üßò –û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å</option>
                                        <option value="creativity">üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ</option>
                                        <option value="general">üìñ –û–±—â–∏–µ</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="edit-status">–°—Ç–∞—Ç—É—Å *</label>
                                    <select id="edit-status" class="form-control" required>
                                        <option value="published">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω</option>
                                        <option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="edit-content">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ *</label>
                                <textarea id="edit-content" class="form-control" rows="8" required></textarea>
                            </div>
                            <div class="form-actions" style="display: flex; gap: 1rem; justify-content: flex-end; margin-top: 1rem;">
                                <button type="button" class="btn btn-secondary modal-close-btn">–û—Ç–º–µ–Ω–∞</button>
                                <button type="submit" class="btn btn-primary">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                            </div>
                        </form>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
            modal.querySelector('.modal-close').addEventListener('click', () => closeModalPatch(modal));
            modal.querySelector('.modal-close-btn').addEventListener('click', () => closeModalPatch(modal));
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            loadDocumentForEdit(documentId);
        };
    }
    
    // –ü–ê–¢–ß 4: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ deleteDocument
    if (typeof window.deleteDocument === 'function') {
        const originalDeleteDocument = window.deleteDocument;
        window.deleteDocument = function(documentId) {
            console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –ø–∞—Ç—á–µ–º:', documentId);
            
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                if (typeof showKnowledgeNotification === 'function') {
                    showKnowledgeNotification('info', '–£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞...');
                }
                
                // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
                return originalDeleteDocument.call(this, documentId);
            }
        };
    }
    
    // –ü–ê–¢–ß 5: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ closeModal
    window.closeModalPatch = function(modal) {
        if (modal) {
            modal.classList.remove('active');
            document.body.style.overflow = '';
            setTimeout(() => {
                if (modal.parentNode) {
                    modal.remove();
                }
            }, 300);
        } else {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥–∞–ª—ã
            const activeModals = document.querySelectorAll('.modal-overlay.active');
            activeModals.forEach(m => {
                m.classList.remove('active');
                setTimeout(() => {
                    if (m.parentNode) {
                        m.remove();
                    }
                }, 300);
            });
            document.body.style.overflow = '';
        }
    };
    
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é closeModal
    window.closeModal = window.closeModalPatch;
    
    // –ü–ê–¢–ß 6: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞
    window.loadDocumentData = async function(documentId) {
        try {
            const response = await makeAuthenticatedRequest(`/knowledge/${documentId}`);
            
            if (response.success) {
                const doc = response.data;
                const content = document.getElementById('document-view-content');
                if (content) {
                    content.innerHTML = `
                        <div class="document-details">
                            <div class="document-header">
                                <h4>${escapeHtml(doc.title)}</h4>
                                <div class="document-meta">
                                    <span class="badge badge-primary">${getCategoryDisplayName(doc.category)}</span>
                                    <span class="badge badge-${doc.status === 'published' ? 'success' : 'warning'}">${doc.status === 'published' ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω' : '–ß–µ—Ä–Ω–æ–≤–∏–∫'}</span>
                                </div>
                            </div>
                            <div class="document-content-text" style="max-height: 400px; overflow-y: auto; margin: 1rem 0; padding: 1rem; background: var(--hover-bg); border-radius: var(--border-radius);">
                                ${escapeHtml(doc.content || '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ').replace(/\n/g, '<br>')}
                            </div>
                            <div class="document-actions" style="display: flex; gap: 1rem; justify-content: flex-end; padding-top: 1rem; border-top: 1px solid var(--border-color);">
                                <button class="btn btn-primary" onclick="editDocument('${doc._id}')">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                                <button class="btn btn-danger" onclick="deleteDocument('${doc._id}')">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                                <button class="btn btn-secondary" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
                            </div>
                        </div>
                    `;
                }
            } else {
                throw new Error(response.error || '–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
            const content = document.getElementById('document-view-content');
            if (content) {
                content.innerHTML = `
                    <div class="alert alert-error">
                        <strong>‚ùå –û—à–∏–±–∫–∞:</strong> ${error.message}
                    </div>
                    <div class="document-actions" style="display: flex; justify-content: center; margin-top: 1rem;">
                        <button class="btn btn-secondary" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
                    </div>
                `;
            }
        }
    };
    
    // –ü–ê–¢–ß 7: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    window.loadDocumentForEdit = async function(documentId) {
        try {
            const response = await makeAuthenticatedRequest(`/knowledge/${documentId}`);
            if (response.success) {
                const doc = response.data;
                document.getElementById('edit-title').value = doc.title || '';
                document.getElementById('edit-category').value = doc.category || 'general';
                document.getElementById('edit-status').value = doc.status || 'draft';
                document.getElementById('edit-content').value = doc.content || '';
                
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
                document.getElementById('edit-document-form').addEventListener('submit', async (e) => {
                    e.preventDefault();
                    await saveDocumentChanges(documentId);
                });
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
            if (typeof showKnowledgeNotification === 'function') {
                showKnowledgeNotification('error', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ' + error.message);
            }
        }
    };
    
    // –ü–ê–¢–ß 8: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç–∞
    window.saveDocumentChanges = async function(documentId) {
        try {
            const updateData = {
                title: document.getElementById('edit-title').value.trim(),
                category: document.getElementById('edit-category').value,
                status: document.getElementById('edit-status').value,
                content: document.getElementById('edit-content').value.trim()
            };
            
            const response = await makeAuthenticatedRequest(`/knowledge/${documentId}`, {
                method: 'PUT',
                body: JSON.stringify(updateData)
            });
            
            if (response.success) {
                if (typeof showKnowledgeNotification === 'function') {
                    showKnowledgeNotification('success', '–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
                }
                closeModal();
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                if (typeof loadDocuments === 'function') {
                    await loadDocuments();
                }
            } else {
                throw new Error(response.error || '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
            if (typeof showKnowledgeNotification === 'function') {
                showKnowledgeNotification('error', '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + error.message);
            }
        }
    };
    
    console.log('‚úÖ –ü–∞—Ç—á–∏ –¥–ª—è knowledge.js –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function escapeHtml(text) {
    if (typeof text !== 'string') return '';
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

function getCategoryDisplayName(category) {
    const categories = {
        'books': 'üìö –ö–Ω–∏–≥–∏',
        'psychology': 'üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è',
        'self-development': '‚ú® –°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ',
        'relationships': 'üíï –û—Ç–Ω–æ—à–µ–Ω–∏—è',
        'productivity': '‚ö° –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        'mindfulness': 'üßò –û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å',
        'creativity': 'üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        'general': 'üìñ –û–±—â–∏–µ'
    };
    return categories[category] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}

console.log('üìö –ü–∞—Ç—á knowledge-patch.js –∑–∞–≥—Ä—É–∂–µ–Ω');