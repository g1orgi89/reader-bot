/**
 * @fileoverview –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
 * @author g1orgi89
 */

require('dotenv').config();
const mongoose = require('mongoose');
const logger = require('../server/utils/logger');

// –ò–º–ø–æ—Ä—Ç —Å–µ—Ä–≤–∏—Å–æ–≤
const { UserProfile, Quote } = require('../server/models');
const weeklyReportService = require('../server/services/weeklyReportService');
const ReaderTelegramBot = require('./index');

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
 */
async function testWeeklyReport() {
  try {
    console.log('üìñ Starting weekly report test...\n');

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/reader-support';
    await mongoose.connect(mongoUri);
    console.log('‚úÖ Connected to MongoDB\n');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const bot = new ReaderTelegramBot({
      token: process.env.TELEGRAM_BOT_TOKEN,
      environment: 'test'
    });
    await bot.initialize();
    console.log('‚úÖ Telegram bot initialized\n');

    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ü–∏—Ç–∞—Ç–∞–º–∏
    const usersWithQuotes = await UserProfile.find({ 
      isOnboardingComplete: true 
    }).limit(5);

    if (usersWithQuotes.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–æ–º');
      console.log('   –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –≤ –±–æ—Ç–µ!');
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersWithQuotes.length}\n`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for (const user of usersWithQuotes) {
      console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –¥–ª—è: ${user.name} (${user.userId})`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ü–∏—Ç–∞—Ç—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userQuotes = await Quote.find({ userId: user.userId });
      console.log(`   –¶–∏—Ç–∞—Ç –≤ –±–∞–∑–µ: ${userQuotes.length}`);

      if (userQuotes.length === 0) {
        console.log('   ‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ü–∏—Ç–∞—Ç, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ...');
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ü–∏—Ç–∞—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        const testQuotes = [
          { text: '–ñ–∏–∑–Ω—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞', author: '–¢–æ–ª—Å—Ç–æ–π', category: '–§–∏–ª–æ—Å–æ—Ñ–∏—è' },
          { text: '–õ—é–±–æ–≤—å - —ç—Ç–æ –≤—ã–±–æ—Ä', author: '–§—Ä–æ–º–º', category: '–õ—é–±–æ–≤—å' },
          { text: '–ó–Ω–∞–Ω–∏–µ - —Å–∏–ª–∞', author: '–ë—ç–∫–æ–Ω', category: '–ú—É–¥—Ä–æ—Å—Ç—å' }
        ];

        for (const quoteData of testQuotes) {
          const quote = new Quote({
            userId: user.userId,
            text: quoteData.text,
            author: quoteData.author,
            category: quoteData.category,
            weekNumber: getWeekNumber(),
            monthNumber: new Date().getMonth() + 1,
            yearNumber: new Date().getFullYear()
          });
          await quote.save();
        }
        
        console.log(`   ‚úÖ –°–æ–∑–¥–∞–Ω–æ ${testQuotes.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ü–∏—Ç–∞—Ç`);
      }

      try {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        console.log('   üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç...');
        
        const report = await weeklyReportService.generateWeeklyReport(user.userId);
        
        if (report) {
          console.log('   ‚úÖ –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
          console.log(`   üìä –¶–∏—Ç–∞—Ç –≤ –æ—Ç—á–µ—Ç–µ: ${report.quotes.length}`);
          console.log(`   üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${report.analysis?.dominantThemes?.[0] || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞'}`);
          console.log(`   üìö –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${report.recommendations?.length || 0}`);
          console.log(`   üéÅ –ü—Ä–æ–º–æ–∫–æ–¥: ${report.promoCode?.code || '–ù–µ —Å–æ–∑–¥–∞–Ω'}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª –ª–∏ –æ—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram
          console.log('   üì± –û—Ç—á–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram –±–æ—Ç—É');
          
        } else {
          console.log('   ‚ö†Ô∏è –û—Ç—á–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω (–≤–æ–∑–º–æ–∂–Ω–æ –ø—É—Å—Ç–∞—è –Ω–µ–¥–µ–ª—è)');
        }
        
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: ${error.message}`);
        console.log(`   Stack: ${error.stack}`);
      }
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ');
    process.exit(0);
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ ISO 8601
 */
function getWeekNumber() {
  const now = new Date();
  const d = new Date(Date.UTC(now.getFullYear(), now.getMonth(), now.getDate()));
  const dayNum = d.getUTCDay() || 7;
  d.setUTCDate(d.getUTCDate() + 4 - dayNum);
  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));
  return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ü–∏—Ç–∞—Ç–∞–º–∏
 */
async function createTestUser() {
  try {
    console.log('üë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

    const testUserId = `test_user_${Date.now()}`;
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userProfile = new UserProfile({
      userId: testUserId,
      telegramUsername: 'test_user',
      name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      email: 'test@example.com',
      testResults: {
        question1_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        question2_lifestyle: '–ó–∞–º—É–∂–µ–º, –±–∞–ª–∞–Ω—Å–∏—Ä—É—é –¥–æ–º/—Ä–∞–±–æ—Ç—É/—Å–µ–±—è',
        question3_time: '–†–∞–Ω–æ —É—Ç—Ä–æ–º, –ø–æ–∫–∞ –≤—Å–µ —Å–ø—è—Ç',
        question4_priorities: '–ù–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–∞–ª–∞–Ω—Å',
        question5_reading_feeling: '–ù–∞—Ö–æ–∂—É –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã',
        question6_phrase: '–°—á–∞—Å—Ç—å–µ ‚Äî —ç—Ç–æ –≤—ã–±–æ—Ä',
        question7_reading_time: '3-7 —á–∞—Å–æ–≤ (–Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é)'
      },
      source: 'test',
      isOnboardingComplete: true,
      statistics: {
        totalQuotes: 0,
        currentStreak: 1,
        longestStreak: 1,
        favoriteAuthors: [],
        monthlyQuotes: []
      }
    });

    await userProfile.save();

    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–∏—Ç–∞—Ç –¥–ª—è –æ—Ç—á–µ—Ç–∞
    const quotes = [
      { text: '–í –∫–∞–∂–¥–æ–º —Å–ª–æ–≤–µ ‚Äî —Ü–µ–ª–∞—è –∂–∏–∑–Ω—å', author: '–ú–∞—Ä–∏–Ω–∞ –¶–≤–µ—Ç–∞–µ–≤–∞', category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ' },
      { text: '–õ—é–±–æ–≤—å ‚Äî —ç—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –ª—é–±–∏—Ç—å', author: '–≠—Ä–∏—Ö –§—Ä–æ–º–º', category: '–õ—é–±–æ–≤—å' },
      { text: '–°—á–∞—Å—Ç—å–µ –≤–Ω—É—Ç—Ä–∏ –Ω–∞—Å', author: '–ë—É–¥–¥–∞', category: '–ú—É–¥—Ä–æ—Å—Ç—å' },
      { text: '–ó–Ω–∞–Ω–∏–µ ‚Äî —Å–∏–ª–∞', author: '–§—Ä—ç–Ω—Å–∏—Å –ë—ç–∫–æ–Ω', category: '–ú—É–¥—Ä–æ—Å—Ç—å' },
      { text: '–ñ–∏–∑–Ω—å ‚Äî —ç—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', author: null, category: '–§–∏–ª–æ—Å–æ—Ñ–∏—è' }
    ];

    for (const quoteData of quotes) {
      const quote = new Quote({
        userId: testUserId,
        text: quoteData.text,
        author: quoteData.author,
        category: quoteData.category,
        weekNumber: getWeekNumber(),
        monthNumber: new Date().getMonth() + 1,
        yearNumber: new Date().getFullYear(),
        sentiment: 'positive',
        themes: ['–∂–∏–∑–Ω—å', '–º—É–¥—Ä–æ—Å—Ç—å']
      });
      await quote.save();
    }

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${testUserId}`);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ü–∏—Ç–∞—Ç: ${quotes.length}`);
    
    return testUserId;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (require.main === module) {
  const args = process.argv.slice(2);
  
  if (args.includes('--create-test-user')) {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/reader-support')
      .then(createTestUser)
      .then(() => {
        console.log('\nüéØ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ: npm run test:weekly-report');
        process.exit(0);
      })
      .catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        process.exit(1);
      });
  } else {
    // –û–±—ã—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    testWeeklyReport();
  }
}

module.exports = { testWeeklyReport, createTestUser };